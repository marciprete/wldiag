//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.01.17 at 03:40:53 PM CET 
//


package it.senape.wldiag.xml;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;


/**
 * Corresponds to WebServerMBean
 *  (Interface=weblogic.management.configuration.WebServerMBean)
 * 
 * <p>Java class for web-serverType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="web-serverType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://xmlns.oracle.com/weblogic/domain}deploymentType">
 *       &lt;sequence>
 *         &lt;element name="web-server-log" type="{http://xmlns.oracle.com/weblogic/domain}web-server-logType" minOccurs="0"/>
 *         &lt;element name="frontend-host" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="frontend-http-port" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/>
 *         &lt;element name="frontend-https-port" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/>
 *         &lt;element name="overload-response-code" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="100"/>
 *               &lt;maxInclusive value="599"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="keep-alive-enabled" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="keep-alive-secs" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="5"/>
 *               &lt;maxInclusive value="300"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="https-keep-alive-secs" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="30"/>
 *               &lt;maxInclusive value="360"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="post-timeout-secs" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="0"/>
 *               &lt;maxInclusive value="120"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="max-post-time-secs" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/>
 *         &lt;element name="max-post-size" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/>
 *         &lt;element name="send-server-header-enabled" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="default-web-app-context-root" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="charsets" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="url-resource" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="chunked-transfer-disabled" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="use-highest-compatible-http-version" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="use-header-encoding" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="auth-cookie-enabled" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="write-chunk-bytes" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/>
 *         &lt;element name="wap-enabled" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="accept-context-path-in-get-real-path" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="single-signon-disabled" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="web-deployment" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="work-manager-for-remote-session-fetching" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="client-ip-header" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "web-serverType", propOrder = {
    "webServerLog",
    "frontendHost",
    "frontendHttpPort",
    "frontendHttpsPort",
    "overloadResponseCode",
    "keepAliveEnabled",
    "keepAliveSecs",
    "httpsKeepAliveSecs",
    "postTimeoutSecs",
    "maxPostTimeSecs",
    "maxPostSize",
    "sendServerHeaderEnabled",
    "defaultWebAppContextRoot",
    "charsets",
    "urlResource",
    "chunkedTransferDisabled",
    "useHighestCompatibleHttpVersion",
    "useHeaderEncoding",
    "authCookieEnabled",
    "writeChunkBytes",
    "wapEnabled",
    "acceptContextPathInGetRealPath",
    "singleSignonDisabled",
    "webDeployment",
    "workManagerForRemoteSessionFetching",
    "clientIpHeader"
})
@XmlSeeAlso({
    VirtualHostType.class
})
public class WebServerType
    extends DeploymentType
{

    @XmlElementRef(name = "web-server-log", namespace = "http://xmlns.oracle.com/weblogic/domain", type = JAXBElement.class, required = false)
    protected JAXBElement<WebServerLogType> webServerLog;
    @XmlElementRef(name = "frontend-host", namespace = "http://xmlns.oracle.com/weblogic/domain", type = JAXBElement.class, required = false)
    protected JAXBElement<String> frontendHost;
    @XmlElement(name = "frontend-http-port", defaultValue = "0")
    protected Integer frontendHttpPort;
    @XmlElement(name = "frontend-https-port", defaultValue = "0")
    protected Integer frontendHttpsPort;
    @XmlElement(name = "overload-response-code", defaultValue = "503")
    protected Integer overloadResponseCode;
    @XmlElement(name = "keep-alive-enabled", defaultValue = "true")
    protected Boolean keepAliveEnabled;
    @XmlElement(name = "keep-alive-secs", defaultValue = "30")
    protected Integer keepAliveSecs;
    @XmlElement(name = "https-keep-alive-secs", defaultValue = "60")
    protected Integer httpsKeepAliveSecs;
    @XmlElement(name = "post-timeout-secs", defaultValue = "30")
    protected Integer postTimeoutSecs;
    @XmlElement(name = "max-post-time-secs", defaultValue = "-1")
    protected Integer maxPostTimeSecs;
    @XmlElement(name = "max-post-size", defaultValue = "-1")
    protected Integer maxPostSize;
    @XmlElement(name = "send-server-header-enabled", defaultValue = "false")
    protected Boolean sendServerHeaderEnabled;
    @XmlElementRef(name = "default-web-app-context-root", namespace = "http://xmlns.oracle.com/weblogic/domain", type = JAXBElement.class, required = false)
    protected JAXBElement<String> defaultWebAppContextRoot;
    @XmlElementRef(name = "charsets", namespace = "http://xmlns.oracle.com/weblogic/domain", type = JAXBElement.class, required = false)
    protected JAXBElement<String> charsets;
    @XmlElementRef(name = "url-resource", namespace = "http://xmlns.oracle.com/weblogic/domain", type = JAXBElement.class, required = false)
    protected JAXBElement<String> urlResource;
    @XmlElement(name = "chunked-transfer-disabled", defaultValue = "false")
    protected Boolean chunkedTransferDisabled;
    @XmlElement(name = "use-highest-compatible-http-version", defaultValue = "true")
    protected Boolean useHighestCompatibleHttpVersion;
    @XmlElement(name = "use-header-encoding", defaultValue = "false")
    protected Boolean useHeaderEncoding;
    @XmlElement(name = "auth-cookie-enabled", defaultValue = "true")
    protected Boolean authCookieEnabled;
    @XmlElement(name = "write-chunk-bytes", defaultValue = "512")
    protected Integer writeChunkBytes;
    @XmlElement(name = "wap-enabled", defaultValue = "false")
    protected Boolean wapEnabled;
    @XmlElement(name = "accept-context-path-in-get-real-path", defaultValue = "false")
    protected Boolean acceptContextPathInGetRealPath;
    @XmlElement(name = "single-signon-disabled", defaultValue = "false")
    protected Boolean singleSignonDisabled;
    @XmlElementRef(name = "web-deployment", namespace = "http://xmlns.oracle.com/weblogic/domain", type = JAXBElement.class, required = false)
    protected JAXBElement<String> webDeployment;
    @XmlElementRef(name = "work-manager-for-remote-session-fetching", namespace = "http://xmlns.oracle.com/weblogic/domain", type = JAXBElement.class, required = false)
    protected JAXBElement<String> workManagerForRemoteSessionFetching;
    @XmlElementRef(name = "client-ip-header", namespace = "http://xmlns.oracle.com/weblogic/domain", type = JAXBElement.class, required = false)
    protected JAXBElement<String> clientIpHeader;

    /**
     * Gets the value of the webServerLog property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link WebServerLogType }{@code >}
     *     
     */
    public JAXBElement<WebServerLogType> getWebServerLog() {
        return webServerLog;
    }

    /**
     * Sets the value of the webServerLog property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link WebServerLogType }{@code >}
     *     
     */
    public void setWebServerLog(JAXBElement<WebServerLogType> value) {
        this.webServerLog = value;
    }

    /**
     * Gets the value of the frontendHost property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public JAXBElement<String> getFrontendHost() {
        return frontendHost;
    }

    /**
     * Sets the value of the frontendHost property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public void setFrontendHost(JAXBElement<String> value) {
        this.frontendHost = value;
    }

    /**
     * Gets the value of the frontendHttpPort property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getFrontendHttpPort() {
        return frontendHttpPort;
    }

    /**
     * Sets the value of the frontendHttpPort property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setFrontendHttpPort(Integer value) {
        this.frontendHttpPort = value;
    }

    /**
     * Gets the value of the frontendHttpsPort property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getFrontendHttpsPort() {
        return frontendHttpsPort;
    }

    /**
     * Sets the value of the frontendHttpsPort property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setFrontendHttpsPort(Integer value) {
        this.frontendHttpsPort = value;
    }

    /**
     * Gets the value of the overloadResponseCode property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getOverloadResponseCode() {
        return overloadResponseCode;
    }

    /**
     * Sets the value of the overloadResponseCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setOverloadResponseCode(Integer value) {
        this.overloadResponseCode = value;
    }

    /**
     * Gets the value of the keepAliveEnabled property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isKeepAliveEnabled() {
        return keepAliveEnabled;
    }

    /**
     * Sets the value of the keepAliveEnabled property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setKeepAliveEnabled(Boolean value) {
        this.keepAliveEnabled = value;
    }

    /**
     * Gets the value of the keepAliveSecs property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getKeepAliveSecs() {
        return keepAliveSecs;
    }

    /**
     * Sets the value of the keepAliveSecs property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setKeepAliveSecs(Integer value) {
        this.keepAliveSecs = value;
    }

    /**
     * Gets the value of the httpsKeepAliveSecs property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getHttpsKeepAliveSecs() {
        return httpsKeepAliveSecs;
    }

    /**
     * Sets the value of the httpsKeepAliveSecs property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setHttpsKeepAliveSecs(Integer value) {
        this.httpsKeepAliveSecs = value;
    }

    /**
     * Gets the value of the postTimeoutSecs property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getPostTimeoutSecs() {
        return postTimeoutSecs;
    }

    /**
     * Sets the value of the postTimeoutSecs property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setPostTimeoutSecs(Integer value) {
        this.postTimeoutSecs = value;
    }

    /**
     * Gets the value of the maxPostTimeSecs property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getMaxPostTimeSecs() {
        return maxPostTimeSecs;
    }

    /**
     * Sets the value of the maxPostTimeSecs property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setMaxPostTimeSecs(Integer value) {
        this.maxPostTimeSecs = value;
    }

    /**
     * Gets the value of the maxPostSize property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getMaxPostSize() {
        return maxPostSize;
    }

    /**
     * Sets the value of the maxPostSize property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setMaxPostSize(Integer value) {
        this.maxPostSize = value;
    }

    /**
     * Gets the value of the sendServerHeaderEnabled property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isSendServerHeaderEnabled() {
        return sendServerHeaderEnabled;
    }

    /**
     * Sets the value of the sendServerHeaderEnabled property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setSendServerHeaderEnabled(Boolean value) {
        this.sendServerHeaderEnabled = value;
    }

    /**
     * Gets the value of the defaultWebAppContextRoot property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public JAXBElement<String> getDefaultWebAppContextRoot() {
        return defaultWebAppContextRoot;
    }

    /**
     * Sets the value of the defaultWebAppContextRoot property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public void setDefaultWebAppContextRoot(JAXBElement<String> value) {
        this.defaultWebAppContextRoot = value;
    }

    /**
     * Gets the value of the charsets property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public JAXBElement<String> getCharsets() {
        return charsets;
    }

    /**
     * Sets the value of the charsets property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public void setCharsets(JAXBElement<String> value) {
        this.charsets = value;
    }

    /**
     * Gets the value of the urlResource property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public JAXBElement<String> getUrlResource() {
        return urlResource;
    }

    /**
     * Sets the value of the urlResource property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public void setUrlResource(JAXBElement<String> value) {
        this.urlResource = value;
    }

    /**
     * Gets the value of the chunkedTransferDisabled property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isChunkedTransferDisabled() {
        return chunkedTransferDisabled;
    }

    /**
     * Sets the value of the chunkedTransferDisabled property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setChunkedTransferDisabled(Boolean value) {
        this.chunkedTransferDisabled = value;
    }

    /**
     * Gets the value of the useHighestCompatibleHttpVersion property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isUseHighestCompatibleHttpVersion() {
        return useHighestCompatibleHttpVersion;
    }

    /**
     * Sets the value of the useHighestCompatibleHttpVersion property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setUseHighestCompatibleHttpVersion(Boolean value) {
        this.useHighestCompatibleHttpVersion = value;
    }

    /**
     * Gets the value of the useHeaderEncoding property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isUseHeaderEncoding() {
        return useHeaderEncoding;
    }

    /**
     * Sets the value of the useHeaderEncoding property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setUseHeaderEncoding(Boolean value) {
        this.useHeaderEncoding = value;
    }

    /**
     * Gets the value of the authCookieEnabled property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isAuthCookieEnabled() {
        return authCookieEnabled;
    }

    /**
     * Sets the value of the authCookieEnabled property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setAuthCookieEnabled(Boolean value) {
        this.authCookieEnabled = value;
    }

    /**
     * Gets the value of the writeChunkBytes property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getWriteChunkBytes() {
        return writeChunkBytes;
    }

    /**
     * Sets the value of the writeChunkBytes property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setWriteChunkBytes(Integer value) {
        this.writeChunkBytes = value;
    }

    /**
     * Gets the value of the wapEnabled property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isWapEnabled() {
        return wapEnabled;
    }

    /**
     * Sets the value of the wapEnabled property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setWapEnabled(Boolean value) {
        this.wapEnabled = value;
    }

    /**
     * Gets the value of the acceptContextPathInGetRealPath property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isAcceptContextPathInGetRealPath() {
        return acceptContextPathInGetRealPath;
    }

    /**
     * Sets the value of the acceptContextPathInGetRealPath property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setAcceptContextPathInGetRealPath(Boolean value) {
        this.acceptContextPathInGetRealPath = value;
    }

    /**
     * Gets the value of the singleSignonDisabled property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isSingleSignonDisabled() {
        return singleSignonDisabled;
    }

    /**
     * Sets the value of the singleSignonDisabled property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setSingleSignonDisabled(Boolean value) {
        this.singleSignonDisabled = value;
    }

    /**
     * Gets the value of the webDeployment property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public JAXBElement<String> getWebDeployment() {
        return webDeployment;
    }

    /**
     * Sets the value of the webDeployment property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public void setWebDeployment(JAXBElement<String> value) {
        this.webDeployment = value;
    }

    /**
     * Gets the value of the workManagerForRemoteSessionFetching property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public JAXBElement<String> getWorkManagerForRemoteSessionFetching() {
        return workManagerForRemoteSessionFetching;
    }

    /**
     * Sets the value of the workManagerForRemoteSessionFetching property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public void setWorkManagerForRemoteSessionFetching(JAXBElement<String> value) {
        this.workManagerForRemoteSessionFetching = value;
    }

    /**
     * Gets the value of the clientIpHeader property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public JAXBElement<String> getClientIpHeader() {
        return clientIpHeader;
    }

    /**
     * Sets the value of the clientIpHeader property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public void setClientIpHeader(JAXBElement<String> value) {
        this.clientIpHeader = value;
    }

}
