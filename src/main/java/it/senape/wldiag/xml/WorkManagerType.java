//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.01.17 at 03:40:53 PM CET 
//


package it.senape.wldiag.xml;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlType;


/**
 * Corresponds to WorkManagerMBean
 *  (Interface=weblogic.management.configuration.WorkManagerMBean)
 * 
 * <p>Java class for work-managerType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="work-managerType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://xmlns.oracle.com/weblogic/domain}deploymentType">
 *       &lt;sequence>
 *         &lt;element name="fair-share-request-class" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="response-time-request-class" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="context-request-class" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="min-threads-constraint" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="max-threads-constraint" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="capacity" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="ignore-stuck-threads" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="work-manager-shutdown-trigger" type="{http://xmlns.oracle.com/weblogic/domain}work-manager-shutdown-triggerType" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "work-managerType", propOrder = {
    "fairShareRequestClass",
    "responseTimeRequestClass",
    "contextRequestClass",
    "minThreadsConstraint",
    "maxThreadsConstraint",
    "capacity",
    "ignoreStuckThreads",
    "workManagerShutdownTrigger"
})
public class WorkManagerType
    extends DeploymentType
{

    @XmlElementRef(name = "fair-share-request-class", namespace = "http://xmlns.oracle.com/weblogic/domain", type = JAXBElement.class, required = false)
    protected JAXBElement<String> fairShareRequestClass;
    @XmlElementRef(name = "response-time-request-class", namespace = "http://xmlns.oracle.com/weblogic/domain", type = JAXBElement.class, required = false)
    protected JAXBElement<String> responseTimeRequestClass;
    @XmlElementRef(name = "context-request-class", namespace = "http://xmlns.oracle.com/weblogic/domain", type = JAXBElement.class, required = false)
    protected JAXBElement<String> contextRequestClass;
    @XmlElementRef(name = "min-threads-constraint", namespace = "http://xmlns.oracle.com/weblogic/domain", type = JAXBElement.class, required = false)
    protected JAXBElement<String> minThreadsConstraint;
    @XmlElementRef(name = "max-threads-constraint", namespace = "http://xmlns.oracle.com/weblogic/domain", type = JAXBElement.class, required = false)
    protected JAXBElement<String> maxThreadsConstraint;
    @XmlElementRef(name = "capacity", namespace = "http://xmlns.oracle.com/weblogic/domain", type = JAXBElement.class, required = false)
    protected JAXBElement<String> capacity;
    @XmlElement(name = "ignore-stuck-threads")
    protected Boolean ignoreStuckThreads;
    @XmlElementRef(name = "work-manager-shutdown-trigger", namespace = "http://xmlns.oracle.com/weblogic/domain", type = JAXBElement.class, required = false)
    protected JAXBElement<WorkManagerShutdownTriggerType> workManagerShutdownTrigger;

    /**
     * Gets the value of the fairShareRequestClass property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public JAXBElement<String> getFairShareRequestClass() {
        return fairShareRequestClass;
    }

    /**
     * Sets the value of the fairShareRequestClass property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public void setFairShareRequestClass(JAXBElement<String> value) {
        this.fairShareRequestClass = value;
    }

    /**
     * Gets the value of the responseTimeRequestClass property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public JAXBElement<String> getResponseTimeRequestClass() {
        return responseTimeRequestClass;
    }

    /**
     * Sets the value of the responseTimeRequestClass property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public void setResponseTimeRequestClass(JAXBElement<String> value) {
        this.responseTimeRequestClass = value;
    }

    /**
     * Gets the value of the contextRequestClass property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public JAXBElement<String> getContextRequestClass() {
        return contextRequestClass;
    }

    /**
     * Sets the value of the contextRequestClass property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public void setContextRequestClass(JAXBElement<String> value) {
        this.contextRequestClass = value;
    }

    /**
     * Gets the value of the minThreadsConstraint property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public JAXBElement<String> getMinThreadsConstraint() {
        return minThreadsConstraint;
    }

    /**
     * Sets the value of the minThreadsConstraint property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public void setMinThreadsConstraint(JAXBElement<String> value) {
        this.minThreadsConstraint = value;
    }

    /**
     * Gets the value of the maxThreadsConstraint property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public JAXBElement<String> getMaxThreadsConstraint() {
        return maxThreadsConstraint;
    }

    /**
     * Sets the value of the maxThreadsConstraint property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public void setMaxThreadsConstraint(JAXBElement<String> value) {
        this.maxThreadsConstraint = value;
    }

    /**
     * Gets the value of the capacity property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public JAXBElement<String> getCapacity() {
        return capacity;
    }

    /**
     * Sets the value of the capacity property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public void setCapacity(JAXBElement<String> value) {
        this.capacity = value;
    }

    /**
     * Gets the value of the ignoreStuckThreads property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isIgnoreStuckThreads() {
        return ignoreStuckThreads;
    }

    /**
     * Sets the value of the ignoreStuckThreads property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIgnoreStuckThreads(Boolean value) {
        this.ignoreStuckThreads = value;
    }

    /**
     * Gets the value of the workManagerShutdownTrigger property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link WorkManagerShutdownTriggerType }{@code >}
     *     
     */
    public JAXBElement<WorkManagerShutdownTriggerType> getWorkManagerShutdownTrigger() {
        return workManagerShutdownTrigger;
    }

    /**
     * Sets the value of the workManagerShutdownTrigger property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link WorkManagerShutdownTriggerType }{@code >}
     *     
     */
    public void setWorkManagerShutdownTrigger(JAXBElement<WorkManagerShutdownTriggerType> value) {
        this.workManagerShutdownTrigger = value;
    }

}
