//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.01.17 at 03:40:53 PM CET 
//


package it.senape.wldiag.xml;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * Corresponds to ExecuteQueueMBean
 *  (Interface=weblogic.management.configuration.ExecuteQueueMBean)
 * 
 * <p>Java class for execute-queueType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="execute-queueType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://xmlns.oracle.com/weblogic/domain}configurationType">
 *       &lt;sequence>
 *         &lt;element name="queue-length" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="256"/>
 *               &lt;maxInclusive value="1073741824"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="thread-priority" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="1"/>
 *               &lt;maxInclusive value="10"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="thread-count" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="0"/>
 *               &lt;maxInclusive value="65536"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="queue-length-threshold-percent" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="1"/>
 *               &lt;maxInclusive value="99"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="threads-increase" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="0"/>
 *               &lt;maxInclusive value="65536"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="threads-maximum" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="1"/>
 *               &lt;maxInclusive value="65536"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="threads-minimum" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="0"/>
 *               &lt;maxInclusive value="65536"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "execute-queueType", propOrder = {
    "queueLength",
    "threadPriority",
    "threadCount",
    "queueLengthThresholdPercent",
    "threadsIncrease",
    "threadsMaximum",
    "threadsMinimum"
})
public class ExecuteQueueType
    extends ConfigurationType
{

    @XmlElement(name = "queue-length", defaultValue = "65536")
    protected Integer queueLength;
    @XmlElement(name = "thread-priority", defaultValue = "5")
    protected Integer threadPriority;
    @XmlElement(name = "thread-count", defaultValue = "15")
    protected Integer threadCount;
    @XmlElement(name = "queue-length-threshold-percent", defaultValue = "90")
    protected Integer queueLengthThresholdPercent;
    @XmlElement(name = "threads-increase", defaultValue = "0")
    protected Integer threadsIncrease;
    @XmlElement(name = "threads-maximum", defaultValue = "400")
    protected Integer threadsMaximum;
    @XmlElement(name = "threads-minimum", defaultValue = "5")
    protected Integer threadsMinimum;

    /**
     * Gets the value of the queueLength property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getQueueLength() {
        return queueLength;
    }

    /**
     * Sets the value of the queueLength property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setQueueLength(Integer value) {
        this.queueLength = value;
    }

    /**
     * Gets the value of the threadPriority property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getThreadPriority() {
        return threadPriority;
    }

    /**
     * Sets the value of the threadPriority property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setThreadPriority(Integer value) {
        this.threadPriority = value;
    }

    /**
     * Gets the value of the threadCount property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getThreadCount() {
        return threadCount;
    }

    /**
     * Sets the value of the threadCount property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setThreadCount(Integer value) {
        this.threadCount = value;
    }

    /**
     * Gets the value of the queueLengthThresholdPercent property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getQueueLengthThresholdPercent() {
        return queueLengthThresholdPercent;
    }

    /**
     * Sets the value of the queueLengthThresholdPercent property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setQueueLengthThresholdPercent(Integer value) {
        this.queueLengthThresholdPercent = value;
    }

    /**
     * Gets the value of the threadsIncrease property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getThreadsIncrease() {
        return threadsIncrease;
    }

    /**
     * Sets the value of the threadsIncrease property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setThreadsIncrease(Integer value) {
        this.threadsIncrease = value;
    }

    /**
     * Gets the value of the threadsMaximum property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getThreadsMaximum() {
        return threadsMaximum;
    }

    /**
     * Sets the value of the threadsMaximum property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setThreadsMaximum(Integer value) {
        this.threadsMaximum = value;
    }

    /**
     * Gets the value of the threadsMinimum property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getThreadsMinimum() {
        return threadsMinimum;
    }

    /**
     * Sets the value of the threadsMinimum property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setThreadsMinimum(Integer value) {
        this.threadsMinimum = value;
    }

}
