//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.01.17 at 03:40:53 PM CET 
//


package it.senape.wldiag.xml;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the it.senape.wldiag.xml package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Domain_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "domain");
    private final static QName _ScaContainerTypeMaxIdleTime_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "max-idle-time");
    private final static QName _ScaContainerTypeMaxAge_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "max-age");
    private final static QName _ServerDebugTypeBugReportServiceWsdlUrl_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "bug-report-service-wsdl-url");
    private final static QName _ServerDebugTypeDebugXmlRegistryDebugName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "debug-xml-registry-debug-name");
    private final static QName _ServerDebugTypeServer_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "server");
    private final static QName _ServerDebugTypeDiagnosticContextDebugMode_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "diagnostic-context-debug-mode");
    private final static QName _ServerDebugTypeDebugXmlEntityCacheDebugName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "debug-xml-entity-cache-debug-name");
    private final static QName _ServerDebugTypeMagicThreadDumpFile_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "magic-thread-dump-file");
    private final static QName _ServerDebugTypeDebugJtaResourceName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "debug-jta-resource-name");
    private final static QName _ServerDebugTypeDebugJtaTransactionName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "debug-jta-transaction-name");
    private final static QName _ServerDebugTypeDebugJaxpDebugName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "debug-jaxp-debug-name");
    private final static QName _RdbmsSecurityStoreTypeJndiUsername_QNAME = new QName("http://xmlns.oracle.com/weblogic/security", "jndi-username");
    private final static QName _RdbmsSecurityStoreTypeJmsTopic_QNAME = new QName("http://xmlns.oracle.com/weblogic/security", "jms-topic");
    private final static QName _RdbmsSecurityStoreTypeNotificationProperties_QNAME = new QName("http://xmlns.oracle.com/weblogic/security", "notification-properties");
    private final static QName _RdbmsSecurityStoreTypeConnectionProperties_QNAME = new QName("http://xmlns.oracle.com/weblogic/security", "connection-properties");
    private final static QName _RdbmsSecurityStoreTypeJmsTopicConnectionFactory_QNAME = new QName("http://xmlns.oracle.com/weblogic/security", "jms-topic-connection-factory");
    private final static QName _RdbmsSecurityStoreTypeCompatibilityObjectName_QNAME = new QName("http://xmlns.oracle.com/weblogic/security", "compatibility-object-name");
    private final static QName _RdbmsSecurityStoreTypePasswordEncrypted_QNAME = new QName("http://xmlns.oracle.com/weblogic/security", "password-encrypted");
    private final static QName _RdbmsSecurityStoreTypeJndiPasswordEncrypted_QNAME = new QName("http://xmlns.oracle.com/weblogic/security", "jndi-password-encrypted");
    private final static QName _RdbmsSecurityStoreTypeName_QNAME = new QName("http://xmlns.oracle.com/weblogic/security", "name");
    private final static QName _FederationServicesTypeUsedAssertionCacheProperties_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "used-assertion-cache-properties");
    private final static QName _FederationServicesTypeSigningKeyPassPhraseEncrypted_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "signing-key-pass-phrase-encrypted");
    private final static QName _FederationServicesTypeSigningKeyAlias_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "signing-key-alias");
    private final static QName _FederationServicesTypeAssertionStoreClassName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "assertion-store-class-name");
    private final static QName _FederationServicesTypeSourceSiteUrl_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "source-site-url");
    private final static QName _FederationServicesTypeSslClientIdentityAlias_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "ssl-client-identity-alias");
    private final static QName _FederationServicesTypeAssertionStoreProperties_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "assertion-store-properties");
    private final static QName _FederationServicesTypeSslClientIdentityPassPhraseEncrypted_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "ssl-client-identity-pass-phrase-encrypted");
    private final static QName _FederationServicesTypeUsedAssertionCacheClassName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "used-assertion-cache-class-name");
    private final static QName _SecurityTypeAuditProviderClassName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "audit-provider-class-name");
    private final static QName _SecurityTypePasswordPolicy_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "password-policy");
    private final static QName _SecurityTypeRealm_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "realm");
    private final static QName _MailSessionTypeProperties_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "properties");
    private final static QName _OldRealmTypeFileRealm_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "file-realm");
    private final static QName _OldRealmTypeCachingRealm_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "caching-realm");
    private final static QName _GroupMembershipHierarchyCacheTypeMaxGroupHierarchiesInCache_QNAME = new QName("http://xmlns.oracle.com/weblogic/security", "max-group-hierarchies-in-cache");
    private final static QName _GroupMembershipHierarchyCacheTypeEnableGroupMembershipLookupHierarchyCaching_QNAME = new QName("http://xmlns.oracle.com/weblogic/security", "enable-group-membership-lookup-hierarchy-caching");
    private final static QName _GroupMembershipHierarchyCacheTypeGroupHierarchyCacheTtl_QNAME = new QName("http://xmlns.oracle.com/weblogic/security", "group-hierarchy-cache-ttl");
    private final static QName _BasicRealmTypeRealmClassName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "realm-class-name");
    private final static QName _JmsDistributedQueueMemberTypeJmsQueue_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "jms-queue");
    private final static QName _CacheTypeLoader_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "loader");
    private final static QName _CacheTypeEvictionPolicy_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "eviction-policy");
    private final static QName _CacheTypeAsyncListeners_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "async-listeners");
    private final static QName _CacheTypeTransactional_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "transactional");
    private final static QName _CacheTypeExpiration_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "expiration");
    private final static QName _CacheTypeWorkManager_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "work-manager");
    private final static QName _CacheTypeStore_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "store");
    private final static QName _WtcRemoteTuxDomTypeTpUsrFile_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "tp-usr-file");
    private final static QName _WtcRemoteTuxDomTypeNwAddr_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "nw-addr");
    private final static QName _WtcRemoteTuxDomTypeTuxedoUidKw_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "tuxedo-uid-kw");
    private final static QName _WtcRemoteTuxDomTypeFederationUrl_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "federation-url");
    private final static QName _WtcRemoteTuxDomTypeConnectionPolicy_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "connection-policy");
    private final static QName _WtcRemoteTuxDomTypeConnPrincipalName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "conn-principal-name");
    private final static QName _WtcRemoteTuxDomTypeAclPolicy_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "acl-policy");
    private final static QName _WtcRemoteTuxDomTypeCredentialPolicy_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "credential-policy");
    private final static QName _WtcRemoteTuxDomTypeFederationName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "federation-name");
    private final static QName _WtcRemoteTuxDomTypeMinEncryptBits_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "min-encrypt-bits");
    private final static QName _WtcRemoteTuxDomTypeTuxedoGidKw_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "tuxedo-gid-kw");
    private final static QName _WtcRemoteTuxDomTypeCustomAppKeyClass_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "custom-app-key-class");
    private final static QName _WtcRemoteTuxDomTypeCustomAppKeyClassParam_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "custom-app-key-class-param");
    private final static QName _WtcRemoteTuxDomTypeMaxEncryptBits_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "max-encrypt-bits");
    private final static QName _WtcRemoteTuxDomTypeAppKey_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "app-key");
    private final static QName _VirtualDestinationTypeJndiName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "jndi-name");
    private final static QName _GenericJdbcStoreTypeCreateTableDdlFile_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "create-table-ddl-file");
    private final static QName _GenericJdbcStoreTypePrefixName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "prefix-name");
    private final static QName _SnmpTrapSourceTypeEnabledServer_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "enabled-server");
    private final static QName _PathServiceTypePersistentStore_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "persistent-store");
    private final static QName _SnmpAttributeChangeTypeAttributeName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "attribute-name");
    private final static QName _SnmpAttributeChangeTypeAttributeMBeanType_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "attribute-m-bean-type");
    private final static QName _SnmpAttributeChangeTypeAttributeMBeanName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "attribute-m-bean-name");
    private final static QName _JdbcStoreTypeConnectionPool_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "connection-pool");
    private final static QName _JdbcStoreTypeLogicalName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "logical-name");
    private final static QName _JdbcStoreTypeTarget_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "target");
    private final static QName _JdbcStoreTypeDataSource_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "data-source");
    private final static QName _JdbcStoreTypeXaResourceName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "xa-resource-name");
    private final static QName _WebAppComponentTypeAuthRealmName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "auth-realm-name");
    private final static QName _WebAppComponentTypeVirtualHost_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "virtual-host");
    private final static QName _WebAppComponentTypeAuthFilter_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "auth-filter");
    private final static QName _EmbeddedLdapTypeCredentialEncrypted_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "credential-encrypted");
    private final static QName _SystemResourceTypeDescriptorFileName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "descriptor-file-name");
    private final static QName _EjbContainerTypeTmpPath_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "tmp-path");
    private final static QName _EjbContainerTypeJavaCompiler_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "java-compiler");
    private final static QName _EjbContainerTypeJavaCompilerPostClassPath_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "java-compiler-post-class-path");
    private final static QName _EjbContainerTypeExtraEjbcOptions_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "extra-ejbc-options");
    private final static QName _EjbContainerTypeVerboseEjbDeploymentEnabled_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "verbose-ejb-deployment-enabled");
    private final static QName _EjbContainerTypeJavaCompilerPreClassPath_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "java-compiler-pre-class-path");
    private final static QName _EjbContainerTypeExtraRmicOptions_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "extra-rmic-options");
    private final static QName _WtcImportTypeRemoteName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "remote-name");
    private final static QName _WtcTbridgeRedirectTypeTranslateFml_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "translate-fml");
    private final static QName _WtcTbridgeRedirectTypeMetaDataFile_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "meta-data-file");
    private final static QName _WtcTbridgeRedirectTypeSourceAccessPoint_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "source-access-point");
    private final static QName _WtcTbridgeRedirectTypeTargetQspace_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "target-qspace");
    private final static QName _WtcTbridgeRedirectTypeTargetAccessPoint_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "target-access-point");
    private final static QName _WtcTbridgeRedirectTypeSourceQspace_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "source-qspace");
    private final static QName _WtcTbridgeRedirectTypeReplyq_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "replyq");
    private final static QName _SingleSignOnServicesTypeContactPersonGivenName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "contact-person-given-name");
    private final static QName _SingleSignOnServicesTypePublishedSiteUrl_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "published-site-url");
    private final static QName _SingleSignOnServicesTypeContactPersonTelephoneNumber_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "contact-person-telephone-number");
    private final static QName _SingleSignOnServicesTypeOrganizationName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "organization-name");
    private final static QName _SingleSignOnServicesTypeOrganizationUrl_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "organization-url");
    private final static QName _SingleSignOnServicesTypeEntityId_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "entity-id");
    private final static QName _SingleSignOnServicesTypeContactPersonType_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "contact-person-type");
    private final static QName _SingleSignOnServicesTypeContactPersonSurName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "contact-person-sur-name");
    private final static QName _SingleSignOnServicesTypeContactPersonCompany_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "contact-person-company");
    private final static QName _SingleSignOnServicesTypeLoginReturnQueryParameter_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "login-return-query-parameter");
    private final static QName _SingleSignOnServicesTypeContactPersonEmailAddress_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "contact-person-email-address");
    private final static QName _SingleSignOnServicesTypeDefaultUrl_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "default-url");
    private final static QName _SingleSignOnServicesTypeSsoSigningKeyAlias_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "sso-signing-key-alias");
    private final static QName _SingleSignOnServicesTypeSsoSigningKeyPassPhraseEncrypted_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "sso-signing-key-pass-phrase-encrypted");
    private final static QName _SingleSignOnServicesTypeTransportLayerSecurityKeyPassPhraseEncrypted_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "transport-layer-security-key-pass-phrase-encrypted");
    private final static QName _SingleSignOnServicesTypeTransportLayerSecurityKeyAlias_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "transport-layer-security-key-alias");
    private final static QName _SingleSignOnServicesTypeBasicAuthPasswordEncrypted_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "basic-auth-password-encrypted");
    private final static QName _SingleSignOnServicesTypeErrorPath_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "error-path");
    private final static QName _SingleSignOnServicesTypeBasicAuthUsername_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "basic-auth-username");
    private final static QName _NtRealmTypePrimaryDomain_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "primary-domain");
    private final static QName _CachingRealmTypeBasicRealm_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "basic-realm");
    private final static QName _SslTypeServerKeyFileName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "server-key-file-name");
    private final static QName _SslTypeServerCertificateFileName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "server-certificate-file-name");
    private final static QName _SslTypeServerPrivateKeyPassPhraseEncrypted_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "server-private-key-pass-phrase-encrypted");
    private final static QName _SslTypeIdentityAndTrustLocations_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "identity-and-trust-locations");
    private final static QName _SslTypeServerPrivateKeyAlias_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "server-private-key-alias");
    private final static QName _SslTypeCertAuthenticator_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "cert-authenticator");
    private final static QName _SslTypeTrustedCaFileName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "trusted-ca-file-name");
    private final static QName _SslTypeOutboundCertificateValidation_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "outbound-certificate-validation");
    private final static QName _SslTypeHostnameVerifier_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "hostname-verifier");
    private final static QName _SslTypeInboundCertificateValidation_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "inbound-certificate-validation");
    private final static QName _SslTypeServerCertificateChainFileName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "server-certificate-chain-file-name");
    private final static QName _IiopTypeDefaultWideCharCodeset_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "default-wide-char-codeset");
    private final static QName _IiopTypeSystemSecurity_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "system-security");
    private final static QName _IiopTypeTxMechanism_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "tx-mechanism");
    private final static QName _IiopTypeLocationForwardPolicy_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "location-forward-policy");
    private final static QName _IiopTypeDefaultCharCodeset_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "default-char-codeset");
    private final static QName _WebServerLogTypeLogFileFormat_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "log-file-format");
    private final static QName _WebServerLogTypeElfFields_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "elf-fields");
    private final static QName _MigratableRmiServiceTypeClassname_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "classname");
    private final static QName _MigratableRmiServiceTypeArgument_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "argument");
    private final static QName _CacheTransactionTypeConcurrency_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "concurrency");
    private final static QName _CacheTransactionTypeIsolationLevel_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "isolation-level");
    private final static QName _CoherenceClusterSystemResourceTypeCustomClusterConfigurationFileName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "custom-cluster-configuration-file-name");
    private final static QName _ContextCaseTypeUserName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "user-name");
    private final static QName _ContextCaseTypeGroupName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "group-name");
    private final static QName _ContextCaseTypeRequestClassName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "request-class-name");
    private final static QName _UnixMachineTypePostBindGid_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "post-bind-gid");
    private final static QName _UnixMachineTypePostBindUid_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "post-bind-uid");
    private final static QName _JmsServerTypeTemporaryTemplateName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "temporary-template-name");
    private final static QName _JmsServerTypeInsertionPausedAtStartup_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "insertion-paused-at-startup");
    private final static QName _JmsServerTypePagingDirectory_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "paging-directory");
    private final static QName _JmsServerTypeTemporaryTemplateResource_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "temporary-template-resource");
    private final static QName _JmsServerTypeConsumptionPausedAtStartup_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "consumption-paused-at-startup");
    private final static QName _JmsServerTypeJmsMessageLogFile_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "jms-message-log-file");
    private final static QName _JmsServerTypeBlockingSendPolicy_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "blocking-send-policy");
    private final static QName _JmsServerTypeProductionPausedAtStartup_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "production-paused-at-startup");
    private final static QName _WebserviceSecurityTypeCompatibilityPreference_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "compatibility-preference");
    private final static QName _WebserviceSecurityTypeDefaultCredentialProviderStsuri_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "default-credential-provider-stsuri");
    private final static QName _WebserviceSecurityTypePolicySelectionPreference_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "policy-selection-preference");
    private final static QName _WebserviceSecurityTypeWebserviceTimestamp_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "webservice-timestamp");
    private final static QName _WebserviceSecurityTypeCompatibilityOrderingPreference_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "compatibility-ordering-preference");
    private final static QName _SnmpProxyTypeOidRoot_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "oid-root");
    private final static QName _SnmpProxyTypeCommunity_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "community");
    private final static QName _SnmpProxyTypeSecurityName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "security-name");
    private final static QName _WsReliableDeliveryPolicyTypeJmsServer_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "jms-server");
    private final static QName _JpaTypeDefaultJpaProvider_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "default-jpa-provider");
    private final static QName _ConnectorComponentTypeAuthenticationMechanisms_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "authentication-mechanisms");
    private final static QName _WorkManagerTypeContextRequestClass_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "context-request-class");
    private final static QName _WorkManagerTypeMinThreadsConstraint_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "min-threads-constraint");
    private final static QName _WorkManagerTypeMaxThreadsConstraint_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "max-threads-constraint");
    private final static QName _WorkManagerTypeFairShareRequestClass_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "fair-share-request-class");
    private final static QName _WorkManagerTypeCapacity_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "capacity");
    private final static QName _WorkManagerTypeWorkManagerShutdownTrigger_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "work-manager-shutdown-trigger");
    private final static QName _WorkManagerTypeResponseTimeRequestClass_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "response-time-request-class");
    private final static QName _MaxThreadsConstraintTypeConnectionPoolName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "connection-pool-name");
    private final static QName _StuckThreadActionTypeWorkManagerName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "work-manager-name");
    private final static QName _StuckThreadActionTypeApplicationName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "application-name");
    private final static QName _StuckThreadActionTypeModuleName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "module-name");
    private final static QName _StuckThreadActionTypeActionCode_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "action-code");
    private final static QName _ServerTypeXmlRegistry_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "xml-registry");
    private final static QName _ServerTypeDefaultTgiopPasswordEncrypted_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "default-tgiop-password-encrypted");
    private final static QName _ServerTypeCoherenceClusterSystemResource_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "coherence-cluster-system-resource");
    private final static QName _ServerTypeStartupMode_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "startup-mode");
    private final static QName _ServerTypeListenAddress_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "listen-address");
    private final static QName _ServerTypeServerStart_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "server-start");
    private final static QName _ServerTypeJavaStandardTrustKeyStorePassPhraseEncrypted_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "java-standard-trust-key-store-pass-phrase-encrypted");
    private final static QName _ServerTypeDefaultIiopPasswordEncrypted_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "default-iiop-password-encrypted");
    private final static QName _ServerTypeCustomIdentityKeyStorePassPhraseEncrypted_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "custom-identity-key-store-pass-phrase-encrypted");
    private final static QName _ServerTypeJtaMigratableTarget_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "jta-migratable-target");
    private final static QName _ServerTypeReliableDeliveryPolicy_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "reliable-delivery-policy");
    private final static QName _ServerTypeIiopConnectionPools_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "iiop-connection-pools");
    private final static QName _ServerTypeServerVersion_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "server-version");
    private final static QName _ServerTypeUploadDirectoryName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "upload-directory-name");
    private final static QName _ServerTypeCom_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "com");
    private final static QName _ServerTypeCluster_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "cluster");
    private final static QName _ServerTypeKeyStores_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "key-stores");
    private final static QName _ServerTypeWebServer_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "web-server");
    private final static QName _ServerTypeExternalDnsName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "external-dns-name");
    private final static QName _ServerTypeJdbcllrTableName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "jdbcllr-table-name");
    private final static QName _ServerTypeAutoJdbcConnectionClose_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "auto-jdbc-connection-close");
    private final static QName _ServerTypeMachine_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "machine");
    private final static QName _ServerTypePreferredSecondaryGroup_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "preferred-secondary-group");
    private final static QName _ServerTypeStagingMode_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "staging-mode");
    private final static QName _ServerTypeCustomTrustKeyStorePassPhraseEncrypted_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "custom-trust-key-store-pass-phrase-encrypted");
    private final static QName _ServerTypeStagingDirectoryName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "staging-directory-name");
    private final static QName _ServerTypeSingleSignOnServices_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "single-sign-on-services");
    private final static QName _ServerTypeServerDiagnosticConfig_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "server-diagnostic-config");
    private final static QName _ServerTypeOverloadProtection_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "overload-protection");
    private final static QName _ServerTypeFederationServices_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "federation-services");
    private final static QName _ServerTypeWebService_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "web-service");
    private final static QName _ServerTypeServerDebug_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "server-debug");
    private final static QName _ServerTypeTransactionLogFilePrefix_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "transaction-log-file-prefix");
    private final static QName _ServerTypeXmlEntityCache_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "xml-entity-cache");
    private final static QName _ServerTypeCustomIdentityKeyStoreFileName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "custom-identity-key-store-file-name");
    private final static QName _ServerTypeReplicationGroup_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "replication-group");
    private final static QName _ServerTypeCustomIdentityKeyStoreType_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "custom-identity-key-store-type");
    private final static QName _ServerTypeDefaultIiopUser_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "default-iiop-user");
    private final static QName _ServerTypeCustomTrustKeyStoreType_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "custom-trust-key-store-type");
    private final static QName _ServerTypeInterfaceAddress_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "interface-address");
    private final static QName _ServerTypeSystemPasswordEncrypted_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "system-password-encrypted");
    private final static QName _ServerTypeCustomTrustKeyStoreFileName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "custom-trust-key-store-file-name");
    private final static QName _ServerTypeDefaultTgiopUser_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "default-tgiop-user");
    private final static QName _ServerTypeDefaultFileStore_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "default-file-store");
    private final static QName _ServerTypeCandidateMachine_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "candidate-machine");
    private final static QName _JtaTypeSecurityInteropMode_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "security-interop-mode");
    private final static QName _JtaTypeWsatTransportSecurityMode_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "wsat-transport-security-mode");
    private final static QName _JtaTypeParallelXaDispatchPolicy_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "parallel-xa-dispatch-policy");
    private final static QName _WtcServerTypeWtcResources_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "wtc-resources");
    private final static QName _WtcServerTypeWtcTbridgeGlobal_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "wtc-tbridge-global");
    private final static QName _SecurityConfigurationTypeRealmBootStrapVersion_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "realm-boot-strap-version");
    private final static QName _SecurityConfigurationTypeWebAppFilesCaseInsensitive_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "web-app-files-case-insensitive");
    private final static QName _SecurityConfigurationTypeConnectionFilter_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "connection-filter");
    private final static QName _SecurityConfigurationTypeDefaultRealm_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "default-realm");
    private final static QName _SecurityConfigurationTypeNodeManagerPasswordEncrypted_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "node-manager-password-encrypted");
    private final static QName _SecurityConfigurationTypeNodeManagerUsername_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "node-manager-username");
    private final static QName _SecurityConfigurationTypeDefaultRealmInternal_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "default-realm-internal");
    private final static QName _SnmpLogFilterTypeSeverityLevel_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "severity-level");
    private final static QName _SnmpLogFilterTypeMessageSubstring_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "message-substring");
    private final static QName _ComTypeNtAuthHost_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "nt-auth-host");
    private final static QName _AppDeploymentTypePlanPath_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "plan-path");
    private final static QName _AppDeploymentTypePlanDir_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "plan-dir");
    private final static QName _AppDeploymentTypeSecurityDdModel_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "security-dd-model");
    private final static QName _AppDeploymentTypeApplicationIdentifier_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "application-identifier");
    private final static QName _AppDeploymentTypeVersionIdentifier_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "version-identifier");
    private final static QName _AppDeploymentTypeAltWlsDescriptorPath_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "alt-wls-descriptor-path");
    private final static QName _AppDeploymentTypeAltDescriptorPath_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "alt-descriptor-path");
    private final static QName _AppDeploymentTypeInstallDir_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "install-dir");
    private final static QName _JoltConnectionPoolTypeTrustStoreName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "trust-store-name");
    private final static QName _JoltConnectionPoolTypeKeyPassPhraseEncrypted_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "key-pass-phrase-encrypted");
    private final static QName _JoltConnectionPoolTypeUserPasswordEncrypted_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "user-password-encrypted");
    private final static QName _JoltConnectionPoolTypeTrustStorePassPhraseEncrypted_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "trust-store-pass-phrase-encrypted");
    private final static QName _JoltConnectionPoolTypeApplicationPasswordEncrypted_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "application-password-encrypted");
    private final static QName _JoltConnectionPoolTypeUserRole_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "user-role");
    private final static QName _JoltConnectionPoolTypeKeyStorePassPhraseEncrypted_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "key-store-pass-phrase-encrypted");
    private final static QName _JoltConnectionPoolTypeKeyStoreName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "key-store-name");
    private final static QName _ErrorHandlingTypeLogPolicy_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "log-policy");
    private final static QName _ErrorHandlingTypePolicy_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "policy");
    private final static QName _WebServiceReliabilityTypeBaseRetransmissionInterval_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "base-retransmission-interval");
    private final static QName _WebServiceReliabilityTypeRetransmissionExponentialBackoff_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "retransmission-exponential-backoff");
    private final static QName _WebServiceReliabilityTypeNonBufferedSource_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "non-buffered-source");
    private final static QName _WebServiceReliabilityTypeAcknowledgementInterval_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "acknowledgement-interval");
    private final static QName _WebServiceReliabilityTypeSequenceExpiration_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "sequence-expiration");
    private final static QName _WebServiceReliabilityTypeNonBufferedDestination_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "non-buffered-destination");
    private final static QName _WebServiceReliabilityTypeInactivityTimeout_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "inactivity-timeout");
    private final static QName _SafAgentTypeServiceType_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "service-type");
    private final static QName _SafAgentTypeJmssafMessageLogFile_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "jmssaf-message-log-file");
    private final static QName _RdbmsRealmTypeDatabasePasswordEncrypted_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "database-password-encrypted");
    private final static QName _RdbmsRealmTypeDatabaseUserName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "database-user-name");
    private final static QName _RdbmsRealmTypeDatabaseDriver_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "database-driver");
    private final static QName _RdbmsRealmTypeDatabaseUrl_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "database-url");
    private final static QName _RdbmsRealmTypeSchemaProperties_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "schema-properties");
    private final static QName _SingletonServiceTypeConstrainedCandidateServer_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "constrained-candidate-server");
    private final static QName _JmsConnectionConsumerTypeDestination_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "destination");
    private final static QName _JmsConnectionConsumerTypeSelector_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "selector");
    private final static QName _BasicDeploymentTypeSourcePath_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "source-path");
    private final static QName _BasicDeploymentTypeDeploymentPrincipalName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "deployment-principal-name");
    private final static QName _WtcTbridgeGlobalTypeUserId_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "user-id");
    private final static QName _WtcTbridgeGlobalTypeTuxToJmsPriorityMap_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "tux-to-jms-priority-map");
    private final static QName _WtcTbridgeGlobalTypeDefaultReplyDeliveryMode_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "default-reply-delivery-mode");
    private final static QName _WtcTbridgeGlobalTypeTuxErrorQueue_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "tux-error-queue");
    private final static QName _WtcTbridgeGlobalTypeAllowNonStandardTypes_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "allow-non-standard-types");
    private final static QName _WtcTbridgeGlobalTypeJmsToTuxPriorityMap_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "jms-to-tux-priority-map");
    private final static QName _WtcTbridgeGlobalTypeWlsErrorDestination_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "wls-error-destination");
    private final static QName _WtcTbridgeGlobalTypeDeliveryModeOverride_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "delivery-mode-override");
    private final static QName _ServerStartTypeRootDirectory_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "root-directory");
    private final static QName _ServerStartTypeBeaHome_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "bea-home");
    private final static QName _ServerStartTypeJavaHome_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "java-home");
    private final static QName _ServerStartTypeUsername_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "username");
    private final static QName _ServerStartTypePasswordEncrypted_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "password-encrypted");
    private final static QName _ServerStartTypeJavaVendor_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "java-vendor");
    private final static QName _ServerStartTypeClassPath_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "class-path");
    private final static QName _ServerStartTypeArguments_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "arguments");
    private final static QName _ServerStartTypeSecurityPolicyFile_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "security-policy-file");
    private final static QName _JmsFileStoreTypeDirectory_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "directory");
    private final static QName _JmsFileStoreTypeSynchronousWritePolicy_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "synchronous-write-policy");
    private final static QName _JmsFileStoreTypeCacheDirectory_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "cache-directory");
    private final static QName _WldfSystemResourceTypeDescription_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "description");
    private final static QName _NetworkAccessPointTypeCustomPrivateKeyPassPhraseEncrypted_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "custom-private-key-pass-phrase-encrypted");
    private final static QName _NetworkAccessPointTypePrivateKeyAlias_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "private-key-alias");
    private final static QName _NetworkAccessPointTypeCustomProperties_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "custom-properties");
    private final static QName _NetworkAccessPointTypeProtocol_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "protocol");
    private final static QName _NetworkAccessPointTypeProxyAddress_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "proxy-address");
    private final static QName _NetworkAccessPointTypeCustomPrivateKeyAlias_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "custom-private-key-alias");
    private final static QName _NetworkAccessPointTypePrivateKeyPassPhrase_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "private-key-pass-phrase");
    private final static QName _NetworkAccessPointTypePublicAddress_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "public-address");
    private final static QName _NetworkAccessPointTypeClusterAddress_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "cluster-address");
    private final static QName _KeyStoreTypePrivateKeyStorePassPhraseEncrypted_QNAME = new QName("http://xmlns.oracle.com/weblogic/security", "private-key-store-pass-phrase-encrypted");
    private final static QName _KeyStoreTypeRootCaKeyStorePassPhraseEncrypted_QNAME = new QName("http://xmlns.oracle.com/weblogic/security", "root-ca-key-store-pass-phrase-encrypted");
    private final static QName _KeyStoreTypePrivateKeyStoreLocation_QNAME = new QName("http://xmlns.oracle.com/weblogic/security", "private-key-store-location");
    private final static QName _KeyStoreTypeRootCaKeyStoreLocation_QNAME = new QName("http://xmlns.oracle.com/weblogic/security", "root-ca-key-store-location");
    private final static QName _MessagingBridgeTypeTargetDestination_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "target-destination");
    private final static QName _MessagingBridgeTypeQualityOfService_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "quality-of-service");
    private final static QName _MessagingBridgeTypeSourceDestination_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "source-destination");
    private final static QName _SnmpStringMonitorTypeStringToCompare_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "string-to-compare");
    private final static QName _XmlParserSelectRegistryEntryTypeSystemId_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "system-id");
    private final static QName _XmlParserSelectRegistryEntryTypeTransformerFactory_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "transformer-factory");
    private final static QName _XmlParserSelectRegistryEntryTypePublicId_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "public-id");
    private final static QName _XmlParserSelectRegistryEntryTypeParserClassName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "parser-class-name");
    private final static QName _XmlParserSelectRegistryEntryTypeSaxParserFactory_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "sax-parser-factory");
    private final static QName _XmlParserSelectRegistryEntryTypeRootElementTag_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "root-element-tag");
    private final static QName _XmlParserSelectRegistryEntryTypeDocumentBuilderFactory_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "document-builder-factory");
    private final static QName _WtcExportTypeTargetClass_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "target-class");
    private final static QName _WtcExportTypeTargetJar_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "target-jar");
    private final static QName _WtcExportTypeEjbName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "ejb-name");
    private final static QName _WebServiceBufferingTypeWebServiceRequestBufferingQueue_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "web-service-request-buffering-queue");
    private final static QName _WebServiceBufferingTypeRetryDelay_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "retry-delay");
    private final static QName _WebServiceBufferingTypeWebServiceResponseBufferingQueue_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "web-service-response-buffering-queue");
    private final static QName _ClusterTypeDefaultLoadAlgorithm_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "default-load-algorithm");
    private final static QName _ClusterTypeClusterBroadcastChannel_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "cluster-broadcast-channel");
    private final static QName _ClusterTypeRemoteClusterAddress_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "remote-cluster-address");
    private final static QName _ClusterTypeJobSchedulerTableName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "job-scheduler-table-name");
    private final static QName _ClusterTypeFrontendHost_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "frontend-host");
    private final static QName _ClusterTypeDataSourceForJobScheduler_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "data-source-for-job-scheduler");
    private final static QName _ClusterTypeClusterType_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "cluster-type");
    private final static QName _ClusterTypeReplicationChannel_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "replication-channel");
    private final static QName _ClusterTypeClusterMessagingMode_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "cluster-messaging-mode");
    private final static QName _ClusterTypeDataSourceForAutomaticMigration_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "data-source-for-automatic-migration");
    private final static QName _ClusterTypeMigrationBasis_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "migration-basis");
    private final static QName _ClusterTypeSingletonSqlQueryHelper_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "singleton-sql-query-helper");
    private final static QName _ClusterTypeWanSessionPersistenceTableName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "wan-session-persistence-table-name");
    private final static QName _ClusterTypeDatabaseLessLeasingBasis_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "database-less-leasing-basis");
    private final static QName _ClusterTypeDataSourceForSessionPersistence_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "data-source-for-session-persistence");
    private final static QName _ClusterTypeCandidateMachinesForMigratableServer_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "candidate-machines-for-migratable-server");
    private final static QName _ClusterTypeMulticastAddress_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "multicast-address");
    private final static QName _ClusterTypeAutoMigrationTableName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "auto-migration-table-name");
    private final static QName _IdentityDomainAuthenticatorTypeIdentityDomain_QNAME = new QName("http://xmlns.oracle.com/weblogic/security", "identity-domain");
    private final static QName _WebServerTypeWebServerLog_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "web-server-log");
    private final static QName _WebServerTypeWorkManagerForRemoteSessionFetching_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "work-manager-for-remote-session-fetching");
    private final static QName _WebServerTypeClientIpHeader_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "client-ip-header");
    private final static QName _WebServerTypeWebDeployment_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "web-deployment");
    private final static QName _WebServerTypeDefaultWebAppContextRoot_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "default-web-app-context-root");
    private final static QName _WebServerTypeCharsets_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "charsets");
    private final static QName _WebServerTypeUrlResource_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "url-resource");
    private final static QName _SingletonServiceBaseTypeHostingServer_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "hosting-server");
    private final static QName _SingletonServiceBaseTypeUserPreferredServer_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "user-preferred-server");
    private final static QName _WldfServerDiagnosticTypeWldfDiagnosticVolume_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "wldf-diagnostic-volume");
    private final static QName _WldfServerDiagnosticTypeDiagnosticDataArchiveType_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "diagnostic-data-archive-type");
    private final static QName _WldfServerDiagnosticTypeDiagnosticJdbcResource_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "diagnostic-jdbc-resource");
    private final static QName _WldfServerDiagnosticTypeDiagnosticStoreDir_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "diagnostic-store-dir");
    private final static QName _WldfServerDiagnosticTypeImageDir_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "image-dir");
    private final static QName _WebServicePersistenceTypeDefaultLogicalStoreName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "default-logical-store-name");
    private final static QName _LdapServerTypePrincipal_QNAME = new QName("http://xmlns.oracle.com/weblogic/security", "principal");
    private final static QName _LdapServerTypeCredentialEncrypted_QNAME = new QName("http://xmlns.oracle.com/weblogic/security", "credential-encrypted");
    private final static QName _LdapServerTypeHost_QNAME = new QName("http://xmlns.oracle.com/weblogic/security", "host");
    private final static QName _WebserviceSecurityConfigurationTypeTokenType_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "token-type");
    private final static QName _WebserviceSecurityConfigurationTypeClassName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "class-name");
    private final static QName _CommonLogTypeLoggerSeverity_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "logger-severity");
    private final static QName _CommonLogTypeLogFileSeverity_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "log-file-severity");
    private final static QName _CommonLogTypeStdoutSeverity_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "stdout-severity");
    private final static QName _CommonLogTypeStdoutFormat_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "stdout-format");
    private final static QName _CommonLogTypeLoggerSeverityProperties_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "logger-severity-properties");
    private final static QName _OverloadProtectionTypePanicAction_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "panic-action");
    private final static QName _OverloadProtectionTypeFailureAction_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "failure-action");
    private final static QName _OverloadProtectionTypeServerFailureTrigger_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "server-failure-trigger");
    private final static QName _WebServiceTypeCallbackQueueMdbRunAsPrincipalName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "callback-queue-mdb-run-as-principal-name");
    private final static QName _WebServiceTypeMessagingQueue_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "messaging-queue");
    private final static QName _WebServiceTypeCallbackQueue_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "callback-queue");
    private final static QName _WebServiceTypeJmsConnectionFactory_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "jms-connection-factory");
    private final static QName _WebServiceTypeWebServiceBuffering_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "web-service-buffering");
    private final static QName _WebServiceTypeWebServicePersistence_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "web-service-persistence");
    private final static QName _WebServiceTypeWebServiceReliability_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "web-service-reliability");
    private final static QName _WebServiceTypeMessagingQueueMdbRunAsPrincipalName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "messaging-queue-mdb-run-as-principal-name");
    private final static QName _BridgeDestinationCommonTypeClasspath_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "classpath");
    private final static QName _RemoteSafContextTypePassword_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "password");
    private final static QName _RemoteSafContextTypeJndiInitialContextFactory_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "jndi-initial-context-factory");
    private final static QName _RemoteSafContextTypeUrl_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "url");
    private final static QName _RemoteSafContextTypeJndiProperty_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "jndi-property");
    private final static QName _WldfDataRetirementTypeArchiveName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "archive-name");
    private final static QName _XmlEntityCacheTypeCacheLocation_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "cache-location");
    private final static QName _LogTypeDomainLogBroadcastFilter_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "domain-log-broadcast-filter");
    private final static QName _LogTypeMemoryBufferFilter_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "memory-buffer-filter");
    private final static QName _LogTypeDomainLogBroadcastSeverity_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "domain-log-broadcast-severity");
    private final static QName _LogTypeLogFileFilter_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "log-file-filter");
    private final static QName _LogTypeStdoutFilter_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "stdout-filter");
    private final static QName _LogTypeMemoryBufferSeverity_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "memory-buffer-severity");
    private final static QName _ForeignJndiProviderTypeProviderUrl_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "provider-url");
    private final static QName _ForeignJndiProviderTypeInitialContextFactory_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "initial-context-factory");
    private final static QName _ForeignJndiProviderTypeUser_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "user");
    private final static QName _WebAppContainerTypeP3PHeaderValue_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "p3p-header-value");
    private final static QName _WebAppContainerTypeXPoweredByHeaderLevel_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "x-powered-by-header-level");
    private final static QName _WebAppContainerTypeMimeMappingFile_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "mime-mapping-file");
    private final static QName _CacheLoaderTypeCustomLoader_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "custom-loader");
    private final static QName _AdminConsoleTypeCookieName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "cookie-name");
    private final static QName _XmlEntitySpecRegistryEntryTypeHandleEntityInvalidation_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "handle-entity-invalidation");
    private final static QName _XmlEntitySpecRegistryEntryTypeWhenToCache_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "when-to-cache");
    private final static QName _XmlEntitySpecRegistryEntryTypeEntityUri_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "entity-uri");
    private final static QName _WebServiceLogicalStoreTypeDefaultMaximumObjectLifetime_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "default-maximum-object-lifetime");
    private final static QName _WebServiceLogicalStoreTypeCleanerInterval_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "cleaner-interval");
    private final static QName _WebServiceLogicalStoreTypePhysicalStoreName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "physical-store-name");
    private final static QName _WebServiceLogicalStoreTypeRequestBufferingQueueJndiName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "request-buffering-queue-jndi-name");
    private final static QName _WebServiceLogicalStoreTypeResponseBufferingQueueJndiName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "response-buffering-queue-jndi-name");
    private final static QName _WebServiceLogicalStoreTypePersistenceStrategy_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "persistence-strategy");
    private final static QName _WeblogicTypeName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "name");
    private final static QName _LogFilterTypeFilterExpression_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "filter-expression");
    private final static QName _CustomRealmTypeConfigurationData_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "configuration-data");
    private final static QName _WtcResourcesTypeAppPassword_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "app-password");
    private final static QName _WtcResourcesTypeAppPasswordIv_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "app-password-iv");
    private final static QName _WtcResourcesTypeRemoteMbEncoding_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "remote-mb-encoding");
    private final static QName _WtcResourcesTypeMbEncodingMapFile_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "mb-encoding-map-file");
    private final static QName _WtcLocalTuxDomTypeIdentityKeyStoreFileName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "identity-key-store-file-name");
    private final static QName _WtcLocalTuxDomTypeIdentityKeyStorePassPhraseEncrypted_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "identity-key-store-pass-phrase-encrypted");
    private final static QName _WtcLocalTuxDomTypeSecurity_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "security");
    private final static QName _WtcLocalTuxDomTypePrivateKeyPassPhraseEncrypted_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "private-key-pass-phrase-encrypted");
    private final static QName _WtcLocalTuxDomTypeKeyStoresLocation_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "key-stores-location");
    private final static QName _WtcLocalTuxDomTypeUseSsl_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "use-ssl");
    private final static QName _WtcLocalTuxDomTypeTrustKeyStoreFileName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "trust-key-store-file-name");
    private final static QName _WtcLocalTuxDomTypeInteroperate_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "interoperate");
    private final static QName _WtcLocalTuxDomTypeTrustKeyStorePassPhraseEncrypted_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "trust-key-store-pass-phrase-encrypted");
    private final static QName _JmsSessionPoolTypeListenerClass_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "listener-class");
    private final static QName _JmsSessionPoolTypeConnectionFactory_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "connection-factory");
    private final static QName _JmsSessionPoolTypeAcknowledgeMode_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "acknowledge-mode");
    private final static QName _UnixRealmTypeAuthProgram_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "auth-program");
    private final static QName _TargetInfoTypeModuleType_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "module-type");
    private final static QName _TargetInfoTypeCompatibilityName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "compatibility-name");
    private final static QName _CustomResourceTypeResourceClass_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "resource-class");
    private final static QName _CustomResourceTypeDescriptorBeanClass_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "descriptor-bean-class");
    private final static QName _VirtualHostTypeNetworkAccessPoint_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "network-access-point");
    private final static QName _JdbcDataSourceFactoryTypeFactoryName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "factory-name");
    private final static QName _JdbcDataSourceFactoryTypeDriverClassName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "driver-class-name");
    private final static QName _ConfigurationPropertyTypeValue_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "value");
    private final static QName _ConfigurationPropertyTypeEncryptedValueEncrypted_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "encrypted-value-encrypted");
    private final static QName _JmsDistributedTopicMemberTypeJmsTopic_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "jms-topic");
    private final static QName _XmlRegistryEntryTypeEntityPath_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "entity-path");
    private final static QName _SnmpJmxMonitorTypeMonitoredMBeanType_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "monitored-m-bean-type");
    private final static QName _SnmpJmxMonitorTypeMonitoredAttributeName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "monitored-attribute-name");
    private final static QName _SnmpJmxMonitorTypeMonitoredMBeanName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "monitored-m-bean-name");
    private final static QName _MachineTypeNodeManager_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "node-manager");
    private final static QName _FileT3TypePath_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "path");
    private final static QName _SnmpAgentTypeCommunityPrefix_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "community-prefix");
    private final static QName _SnmpAgentTypeUserDefinedMib_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "user-defined-mib");
    private final static QName _RealmTypeDeployableProviderSynchronizationTimeout_QNAME = new QName("http://xmlns.oracle.com/weblogic/security", "deployable-provider-synchronization-timeout");
    private final static QName _RealmTypeAdjudicator_QNAME = new QName("http://xmlns.oracle.com/weblogic/security", "adjudicator");
    private final static QName _RealmTypeSecurityDdModel_QNAME = new QName("http://xmlns.oracle.com/weblogic/security", "security-dd-model");
    private final static QName _RealmTypeAuthMethods_QNAME = new QName("http://xmlns.oracle.com/weblogic/security", "auth-methods");
    private final static QName _RealmTypeRdbmsSecurityStore_QNAME = new QName("http://xmlns.oracle.com/weblogic/security", "rdbms-security-store");
    private final static QName _RealmTypeManagementIdentityDomain_QNAME = new QName("http://xmlns.oracle.com/weblogic/security", "management-identity-domain");
    private final static QName _RealmTypeCertPathBuilder_QNAME = new QName("http://xmlns.oracle.com/weblogic/security", "cert-path-builder");
    private final static QName _RealmTypeMaxWebLogicPrincipalsInCache_QNAME = new QName("http://xmlns.oracle.com/weblogic/security", "max-web-logic-principals-in-cache");
    private final static QName _RealmTypeUserLockoutManager_QNAME = new QName("http://xmlns.oracle.com/weblogic/security", "user-lockout-manager");
    private final static QName _ComponentTypeUri_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "uri");
    private final static QName _CacheStoreTypeCustomStore_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "custom-store");
    private final static QName _CacheStoreTypeWritePolicy_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "write-policy");
    private final static QName _LdapRealmTypeGroupDn_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "group-dn");
    private final static QName _LdapRealmTypeUserDn_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "user-dn");
    private final static QName _LdapRealmTypeLdapProvider_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "ldap-provider");
    private final static QName _LdapRealmTypePrincipal_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "principal");
    private final static QName _LdapRealmTypeUserAuthentication_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "user-authentication");
    private final static QName _LdapRealmTypeUserPasswordAttribute_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "user-password-attribute");
    private final static QName _LdapRealmTypeAuthProtocol_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "auth-protocol");
    private final static QName _LdapRealmTypeUserNameAttribute_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "user-name-attribute");
    private final static QName _LdapRealmTypeLdapurl_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "ldapurl");
    private final static QName _LdapRealmTypeGroupUsernameAttribute_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "group-username-attribute");
    private final static QName _LdapRealmTypeGroupNameAttribute_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "group-name-attribute");
    private final static QName _JmsBridgeDestinationTypeConnectionUrl_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "connection-url");
    private final static QName _JmsBridgeDestinationTypeDestinationType_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "destination-type");
    private final static QName _JmsBridgeDestinationTypeConnectionFactoryJndiName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "connection-factory-jndi-name");
    private final static QName _JmsBridgeDestinationTypeDestinationJndiName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "destination-jndi-name");
    private final static QName _HttpProxyTypeServerList_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "server-list");
    private final static QName _ConfigurationTypeNotes_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "notes");
    private final static QName _AuthenticatorTypeControlFlag_QNAME = new QName("http://xmlns.oracle.com/weblogic/security", "control-flag");
    private final static QName _WebServicePhysicalStoreTypeStoreType_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "store-type");
    private final static QName _WebServicePhysicalStoreTypeLocation_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "location");
    private final static QName _WebServiceBufferingQueueTypeEnabled_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "enabled");
    private final static QName _WebServiceBufferingQueueTypeTransactionEnabled_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "transaction-enabled");
    private final static QName _LogFileTypeLogFileRotationDir_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "log-file-rotation-dir");
    private final static QName _LogFileTypeRotationTime_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "rotation-time");
    private final static QName _LogFileTypeRotationType_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "rotation-type");
    private final static QName _LogFileTypeFileName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "file-name");
    private final static QName _NodeManagerTypeNmType_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "nm-type");
    private final static QName _NodeManagerTypeNodeManagerHome_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "node-manager-home");
    private final static QName _NodeManagerTypeShellCommand_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "shell-command");
    private final static QName _KernelTypeIiopLocationForwardPolicy_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "iiop-location-forward-policy");
    private final static QName _KernelTypeLog_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "log");
    private final static QName _KernelTypeAdministrationProtocol_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "administration-protocol");
    private final static QName _KernelTypeDefaultProtocol_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "default-protocol");
    private final static QName _KernelTypeIiop_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "iiop");
    private final static QName _KernelTypeSsl_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "ssl");
    private final static QName _KernelTypeValidProtocols_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "valid-protocols");
    private final static QName _KernelTypeDefaultSecureProtocol_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "default-secure-protocol");
    private final static QName _KernelTypeIiopTxMechanism_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "iiop-tx-mechanism");
    private final static QName _KernelTypeMuxerClass_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "muxer-class");
    private final static QName _MigratableTargetTypeDestinationServer_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "destination-server");
    private final static QName _MigratableTargetTypePostScript_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "post-script");
    private final static QName _MigratableTargetTypeMigrationPolicy_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "migration-policy");
    private final static QName _MigratableTargetTypePreScript_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "pre-script");
    private final static QName _SnmpTrapDestinationTypeHost_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "host");
    private final static QName _DomainTypeJmx_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "jmx");
    private final static QName _DomainTypeJta_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "jta");
    private final static QName _DomainTypeConsoleExtensionDirectory_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "console-extension-directory");
    private final static QName _DomainTypeAdminServerName_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "admin-server-name");
    private final static QName _DomainTypeEmbeddedLdap_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "embedded-ldap");
    private final static QName _DomainTypeJpa_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "jpa");
    private final static QName _DomainTypeDeploymentConfiguration_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "deployment-configuration");
    private final static QName _DomainTypeConsoleContextPath_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "console-context-path");
    private final static QName _DomainTypeAdminConsole_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "admin-console");
    private final static QName _DomainTypeSnmpAgent_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "snmp-agent");
    private final static QName _DomainTypeConfigurationAuditType_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "configuration-audit-type");
    private final static QName _DomainTypeEjbContainer_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "ejb-container");
    private final static QName _DomainTypeDomainVersion_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "domain-version");
    private final static QName _DomainTypeConfigurationVersion_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "configuration-version");
    private final static QName _DomainTypeSelfTuning_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "self-tuning");
    private final static QName _DomainTypeWebAppContainer_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "web-app-container");
    private final static QName _DomainTypeSecurityConfiguration_QNAME = new QName("http://xmlns.oracle.com/weblogic/domain", "security-configuration");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: it.senape.wldiag.xml
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link DomainType }
     * 
     */
    public DomainType createDomainType() {
        return new DomainType();
    }

    /**
     * Create an instance of {@link DebugType }
     * 
     */
    public DebugType createDebugType() {
        return new DebugType();
    }

    /**
     * Create an instance of {@link ExecuteQueueType }
     * 
     */
    public ExecuteQueueType createExecuteQueueType() {
        return new ExecuteQueueType();
    }

    /**
     * Create an instance of {@link JmsDistributedTopicType }
     * 
     */
    public JmsDistributedTopicType createJmsDistributedTopicType() {
        return new JmsDistributedTopicType();
    }

    /**
     * Create an instance of {@link SnmpGaugeMonitorType }
     * 
     */
    public SnmpGaugeMonitorType createSnmpGaugeMonitorType() {
        return new SnmpGaugeMonitorType();
    }

    /**
     * Create an instance of {@link FederationServicesType }
     * 
     */
    public FederationServicesType createFederationServicesType() {
        return new FederationServicesType();
    }

    /**
     * Create an instance of {@link JoltConnectionPoolType }
     * 
     */
    public JoltConnectionPoolType createJoltConnectionPoolType() {
        return new JoltConnectionPoolType();
    }

    /**
     * Create an instance of {@link StuckThreadActionType }
     * 
     */
    public StuckThreadActionType createStuckThreadActionType() {
        return new StuckThreadActionType();
    }

    /**
     * Create an instance of {@link OverloadProtectionType }
     * 
     */
    public OverloadProtectionType createOverloadProtectionType() {
        return new OverloadProtectionType();
    }

    /**
     * Create an instance of {@link CustomRealmType }
     * 
     */
    public CustomRealmType createCustomRealmType() {
        return new CustomRealmType();
    }

    /**
     * Create an instance of {@link WlecConnectionPoolType }
     * 
     */
    public WlecConnectionPoolType createWlecConnectionPoolType() {
        return new WlecConnectionPoolType();
    }

    /**
     * Create an instance of {@link DefaultFileStoreType }
     * 
     */
    public DefaultFileStoreType createDefaultFileStoreType() {
        return new DefaultFileStoreType();
    }

    /**
     * Create an instance of {@link WebServerType }
     * 
     */
    public WebServerType createWebServerType() {
        return new WebServerType();
    }

    /**
     * Create an instance of {@link JmsDestinationKeyType }
     * 
     */
    public JmsDestinationKeyType createJmsDestinationKeyType() {
        return new JmsDestinationKeyType();
    }

    /**
     * Create an instance of {@link JdbcPoolComponentType }
     * 
     */
    public JdbcPoolComponentType createJdbcPoolComponentType() {
        return new JdbcPoolComponentType();
    }

    /**
     * Create an instance of {@link DatabaseLessLeasingBasisType }
     * 
     */
    public DatabaseLessLeasingBasisType createDatabaseLessLeasingBasisType() {
        return new DatabaseLessLeasingBasisType();
    }

    /**
     * Create an instance of {@link WebServicePersistenceType }
     * 
     */
    public WebServicePersistenceType createWebServicePersistenceType() {
        return new WebServicePersistenceType();
    }

    /**
     * Create an instance of {@link JmsSystemResourceType }
     * 
     */
    public JmsSystemResourceType createJmsSystemResourceType() {
        return new JmsSystemResourceType();
    }

    /**
     * Create an instance of {@link WeblogicType }
     * 
     */
    public WeblogicType createWeblogicType() {
        return new WeblogicType();
    }

    /**
     * Create an instance of {@link ForeignJmsDestinationType }
     * 
     */
    public ForeignJmsDestinationType createForeignJmsDestinationType() {
        return new ForeignJmsDestinationType();
    }

    /**
     * Create an instance of {@link RmcFactoryType }
     * 
     */
    public RmcFactoryType createRmcFactoryType() {
        return new RmcFactoryType();
    }

    /**
     * Create an instance of {@link ServerType }
     * 
     */
    public ServerType createServerType() {
        return new ServerType();
    }

    /**
     * Create an instance of {@link SnmpCounterMonitorType }
     * 
     */
    public SnmpCounterMonitorType createSnmpCounterMonitorType() {
        return new SnmpCounterMonitorType();
    }

    /**
     * Create an instance of {@link JdbcDataSourceFactoryType }
     * 
     */
    public JdbcDataSourceFactoryType createJdbcDataSourceFactoryType() {
        return new JdbcDataSourceFactoryType();
    }

    /**
     * Create an instance of {@link PasswordPolicyType }
     * 
     */
    public PasswordPolicyType createPasswordPolicyType() {
        return new PasswordPolicyType();
    }

    /**
     * Create an instance of {@link DebugScopeType }
     * 
     */
    public DebugScopeType createDebugScopeType() {
        return new DebugScopeType();
    }

    /**
     * Create an instance of {@link WebAppComponentType }
     * 
     */
    public WebAppComponentType createWebAppComponentType() {
        return new WebAppComponentType();
    }

    /**
     * Create an instance of {@link OldRealmType }
     * 
     */
    public OldRealmType createOldRealmType() {
        return new OldRealmType();
    }

    /**
     * Create an instance of {@link AdminConsoleType }
     * 
     */
    public AdminConsoleType createAdminConsoleType() {
        return new AdminConsoleType();
    }

    /**
     * Create an instance of {@link JpaType }
     * 
     */
    public JpaType createJpaType() {
        return new JpaType();
    }

    /**
     * Create an instance of {@link WebAppContainerType }
     * 
     */
    public WebAppContainerType createWebAppContainerType() {
        return new WebAppContainerType();
    }

    /**
     * Create an instance of {@link KernelType }
     * 
     */
    public KernelType createKernelType() {
        return new KernelType();
    }

    /**
     * Create an instance of {@link WebServiceBufferingQueueType }
     * 
     */
    public WebServiceBufferingQueueType createWebServiceBufferingQueueType() {
        return new WebServiceBufferingQueueType();
    }

    /**
     * Create an instance of {@link JdbcStoreType }
     * 
     */
    public JdbcStoreType createJdbcStoreType() {
        return new JdbcStoreType();
    }

    /**
     * Create an instance of {@link JdbcTxDataSourceType }
     * 
     */
    public JdbcTxDataSourceType createJdbcTxDataSourceType() {
        return new JdbcTxDataSourceType();
    }

    /**
     * Create an instance of {@link IiopType }
     * 
     */
    public IiopType createIiopType() {
        return new IiopType();
    }

    /**
     * Create an instance of {@link ComponentType }
     * 
     */
    public ComponentType createComponentType() {
        return new ComponentType();
    }

    /**
     * Create an instance of {@link AdminType }
     * 
     */
    public AdminType createAdminType() {
        return new AdminType();
    }

    /**
     * Create an instance of {@link WebServiceType }
     * 
     */
    public WebServiceType createWebServiceType() {
        return new WebServiceType();
    }

    /**
     * Create an instance of {@link JmsDistributedDestinationType }
     * 
     */
    public JmsDistributedDestinationType createJmsDistributedDestinationType() {
        return new JmsDistributedDestinationType();
    }

    /**
     * Create an instance of {@link WtcPasswordType }
     * 
     */
    public WtcPasswordType createWtcPasswordType() {
        return new WtcPasswordType();
    }

    /**
     * Create an instance of {@link JmsDestCommonType }
     * 
     */
    public JmsDestCommonType createJmsDestCommonType() {
        return new JmsDestCommonType();
    }

    /**
     * Create an instance of {@link JmsInteropModuleType }
     * 
     */
    public JmsInteropModuleType createJmsInteropModuleType() {
        return new JmsInteropModuleType();
    }

    /**
     * Create an instance of {@link JmxType }
     * 
     */
    public JmxType createJmxType() {
        return new JmxType();
    }

    /**
     * Create an instance of {@link CacheTransactionType }
     * 
     */
    public CacheTransactionType createCacheTransactionType() {
        return new CacheTransactionType();
    }

    /**
     * Create an instance of {@link JdbcConnectionPoolType }
     * 
     */
    public JdbcConnectionPoolType createJdbcConnectionPoolType() {
        return new JdbcConnectionPoolType();
    }

    /**
     * Create an instance of {@link AdminServerType }
     * 
     */
    public AdminServerType createAdminServerType() {
        return new AdminServerType();
    }

    /**
     * Create an instance of {@link LogFilterType }
     * 
     */
    public LogFilterType createLogFilterType() {
        return new LogFilterType();
    }

    /**
     * Create an instance of {@link CacheAsyncListenersType }
     * 
     */
    public CacheAsyncListenersType createCacheAsyncListenersType() {
        return new CacheAsyncListenersType();
    }

    /**
     * Create an instance of {@link CacheStoreType }
     * 
     */
    public CacheStoreType createCacheStoreType() {
        return new CacheStoreType();
    }

    /**
     * Create an instance of {@link NodeManagerType }
     * 
     */
    public NodeManagerType createNodeManagerType() {
        return new NodeManagerType();
    }

    /**
     * Create an instance of {@link ServerFailureTriggerType }
     * 
     */
    public ServerFailureTriggerType createServerFailureTriggerType() {
        return new ServerFailureTriggerType();
    }

    /**
     * Create an instance of {@link MaxThreadsConstraintType }
     * 
     */
    public MaxThreadsConstraintType createMaxThreadsConstraintType() {
        return new MaxThreadsConstraintType();
    }

    /**
     * Create an instance of {@link BasicRealmType }
     * 
     */
    public BasicRealmType createBasicRealmType() {
        return new BasicRealmType();
    }

    /**
     * Create an instance of {@link JmsSessionPoolType }
     * 
     */
    public JmsSessionPoolType createJmsSessionPoolType() {
        return new JmsSessionPoolType();
    }

    /**
     * Create an instance of {@link ForeignJmsConnectionFactoryType }
     * 
     */
    public ForeignJmsConnectionFactoryType createForeignJmsConnectionFactoryType() {
        return new ForeignJmsConnectionFactoryType();
    }

    /**
     * Create an instance of {@link ServerStartType }
     * 
     */
    public ServerStartType createServerStartType() {
        return new ServerStartType();
    }

    /**
     * Create an instance of {@link PersistentStoreType }
     * 
     */
    public PersistentStoreType createPersistentStoreType() {
        return new PersistentStoreType();
    }

    /**
     * Create an instance of {@link GenericJdbcStoreType }
     * 
     */
    public GenericJdbcStoreType createGenericJdbcStoreType() {
        return new GenericJdbcStoreType();
    }

    /**
     * Create an instance of {@link JdbcSystemResourceType }
     * 
     */
    public JdbcSystemResourceType createJdbcSystemResourceType() {
        return new JdbcSystemResourceType();
    }

    /**
     * Create an instance of {@link MigratableRmiServiceType }
     * 
     */
    public MigratableRmiServiceType createMigratableRmiServiceType() {
        return new MigratableRmiServiceType();
    }

    /**
     * Create an instance of {@link JmsTopicType }
     * 
     */
    public JmsTopicType createJmsTopicType() {
        return new JmsTopicType();
    }

    /**
     * Create an instance of {@link WorkManagerShutdownTriggerType }
     * 
     */
    public WorkManagerShutdownTriggerType createWorkManagerShutdownTriggerType() {
        return new WorkManagerShutdownTriggerType();
    }

    /**
     * Create an instance of {@link CapacityType }
     * 
     */
    public CapacityType createCapacityType() {
        return new CapacityType();
    }

    /**
     * Create an instance of {@link JmsDestinationType }
     * 
     */
    public JmsDestinationType createJmsDestinationType() {
        return new JmsDestinationType();
    }

    /**
     * Create an instance of {@link SslType }
     * 
     */
    public SslType createSslType() {
        return new SslType();
    }

    /**
     * Create an instance of {@link TargetInfoType }
     * 
     */
    public TargetInfoType createTargetInfoType() {
        return new TargetInfoType();
    }

    /**
     * Create an instance of {@link WtcServerType }
     * 
     */
    public WtcServerType createWtcServerType() {
        return new WtcServerType();
    }

    /**
     * Create an instance of {@link BridgeDestinationType }
     * 
     */
    public BridgeDestinationType createBridgeDestinationType() {
        return new BridgeDestinationType();
    }

    /**
     * Create an instance of {@link WebserviceSecurityTokenType }
     * 
     */
    public WebserviceSecurityTokenType createWebserviceSecurityTokenType() {
        return new WebserviceSecurityTokenType();
    }

    /**
     * Create an instance of {@link SingletonServiceType }
     * 
     */
    public SingletonServiceType createSingletonServiceType() {
        return new SingletonServiceType();
    }

    /**
     * Create an instance of {@link JmsServerType }
     * 
     */
    public JmsServerType createJmsServerType() {
        return new JmsServerType();
    }

    /**
     * Create an instance of {@link WsReliableDeliveryPolicyType }
     * 
     */
    public WsReliableDeliveryPolicyType createWsReliableDeliveryPolicyType() {
        return new WsReliableDeliveryPolicyType();
    }

    /**
     * Create an instance of {@link FairShareRequestClassType }
     * 
     */
    public FairShareRequestClassType createFairShareRequestClassType() {
        return new FairShareRequestClassType();
    }

    /**
     * Create an instance of {@link SecurityType }
     * 
     */
    public SecurityType createSecurityType() {
        return new SecurityType();
    }

    /**
     * Create an instance of {@link MailSessionType }
     * 
     */
    public MailSessionType createMailSessionType() {
        return new MailSessionType();
    }

    /**
     * Create an instance of {@link JmsConnectionFactoryType }
     * 
     */
    public JmsConnectionFactoryType createJmsConnectionFactoryType() {
        return new JmsConnectionFactoryType();
    }

    /**
     * Create an instance of {@link LogType }
     * 
     */
    public LogType createLogType() {
        return new LogType();
    }

    /**
     * Create an instance of {@link WorkManagerType }
     * 
     */
    public WorkManagerType createWorkManagerType() {
        return new WorkManagerType();
    }

    /**
     * Create an instance of {@link ComType }
     * 
     */
    public ComType createComType() {
        return new ComType();
    }

    /**
     * Create an instance of {@link StartupClassType }
     * 
     */
    public StartupClassType createStartupClassType() {
        return new StartupClassType();
    }

    /**
     * Create an instance of {@link UnixRealmType }
     * 
     */
    public UnixRealmType createUnixRealmType() {
        return new UnixRealmType();
    }

    /**
     * Create an instance of {@link JmsDistributedTopicMemberType }
     * 
     */
    public JmsDistributedTopicMemberType createJmsDistributedTopicMemberType() {
        return new JmsDistributedTopicMemberType();
    }

    /**
     * Create an instance of {@link XmlParserSelectRegistryEntryType }
     * 
     */
    public XmlParserSelectRegistryEntryType createXmlParserSelectRegistryEntryType() {
        return new XmlParserSelectRegistryEntryType();
    }

    /**
     * Create an instance of {@link WtcResourcesType }
     * 
     */
    public WtcResourcesType createWtcResourcesType() {
        return new WtcResourcesType();
    }

    /**
     * Create an instance of {@link SnmpProxyType }
     * 
     */
    public SnmpProxyType createSnmpProxyType() {
        return new SnmpProxyType();
    }

    /**
     * Create an instance of {@link WebServerLogType }
     * 
     */
    public WebServerLogType createWebServerLogType() {
        return new WebServerLogType();
    }

    /**
     * Create an instance of {@link RemoteSafContextType }
     * 
     */
    public RemoteSafContextType createRemoteSafContextType() {
        return new RemoteSafContextType();
    }

    /**
     * Create an instance of {@link WebServicePhysicalStoreType }
     * 
     */
    public WebServicePhysicalStoreType createWebServicePhysicalStoreType() {
        return new WebServicePhysicalStoreType();
    }

    /**
     * Create an instance of {@link BridgeDestinationCommonType }
     * 
     */
    public BridgeDestinationCommonType createBridgeDestinationCommonType() {
        return new BridgeDestinationCommonType();
    }

    /**
     * Create an instance of {@link WldfSystemResourceType }
     * 
     */
    public WldfSystemResourceType createWldfSystemResourceType() {
        return new WldfSystemResourceType();
    }

    /**
     * Create an instance of {@link JmsStoreType }
     * 
     */
    public JmsStoreType createJmsStoreType() {
        return new JmsStoreType();
    }

    /**
     * Create an instance of {@link CacheType }
     * 
     */
    public CacheType createCacheType() {
        return new CacheType();
    }

    /**
     * Create an instance of {@link MachineType }
     * 
     */
    public MachineType createMachineType() {
        return new MachineType();
    }

    /**
     * Create an instance of {@link WtcTbridgeGlobalType }
     * 
     */
    public WtcTbridgeGlobalType createWtcTbridgeGlobalType() {
        return new WtcTbridgeGlobalType();
    }

    /**
     * Create an instance of {@link FileT3Type }
     * 
     */
    public FileT3Type createFileT3Type() {
        return new FileT3Type();
    }

    /**
     * Create an instance of {@link LogFileType }
     * 
     */
    public LogFileType createLogFileType() {
        return new LogFileType();
    }

    /**
     * Create an instance of {@link SnmpAttributeChangeType }
     * 
     */
    public SnmpAttributeChangeType createSnmpAttributeChangeType() {
        return new SnmpAttributeChangeType();
    }

    /**
     * Create an instance of {@link CustomResourceType }
     * 
     */
    public CustomResourceType createCustomResourceType() {
        return new CustomResourceType();
    }

    /**
     * Create an instance of {@link CacheExpirationType }
     * 
     */
    public CacheExpirationType createCacheExpirationType() {
        return new CacheExpirationType();
    }

    /**
     * Create an instance of {@link JmssafMessageLogFileType }
     * 
     */
    public JmssafMessageLogFileType createJmssafMessageLogFileType() {
        return new JmssafMessageLogFileType();
    }

    /**
     * Create an instance of {@link JtaType }
     * 
     */
    public JtaType createJtaType() {
        return new JtaType();
    }

    /**
     * Create an instance of {@link JmsDistributedDestinationMemberType }
     * 
     */
    public JmsDistributedDestinationMemberType createJmsDistributedDestinationMemberType() {
        return new JmsDistributedDestinationMemberType();
    }

    /**
     * Create an instance of {@link DomainTargetedType }
     * 
     */
    public DomainTargetedType createDomainTargetedType() {
        return new DomainTargetedType();
    }

    /**
     * Create an instance of {@link JmsMessageLogFileType }
     * 
     */
    public JmsMessageLogFileType createJmsMessageLogFileType() {
        return new JmsMessageLogFileType();
    }

    /**
     * Create an instance of {@link SnmpJmxMonitorType }
     * 
     */
    public SnmpJmxMonitorType createSnmpJmxMonitorType() {
        return new SnmpJmxMonitorType();
    }

    /**
     * Create an instance of {@link XmlEntitySpecRegistryEntryType }
     * 
     */
    public XmlEntitySpecRegistryEntryType createXmlEntitySpecRegistryEntryType() {
        return new XmlEntitySpecRegistryEntryType();
    }

    /**
     * Create an instance of {@link SnmpLogFilterType }
     * 
     */
    public SnmpLogFilterType createSnmpLogFilterType() {
        return new SnmpLogFilterType();
    }

    /**
     * Create an instance of {@link DomainLogFilterType }
     * 
     */
    public DomainLogFilterType createDomainLogFilterType() {
        return new DomainLogFilterType();
    }

    /**
     * Create an instance of {@link ApplicationType }
     * 
     */
    public ApplicationType createApplicationType() {
        return new ApplicationType();
    }

    /**
     * Create an instance of {@link DomainLibraryType }
     * 
     */
    public DomainLibraryType createDomainLibraryType() {
        return new DomainLibraryType();
    }

    /**
     * Create an instance of {@link JdbcDataSourceType }
     * 
     */
    public JdbcDataSourceType createJdbcDataSourceType() {
        return new JdbcDataSourceType();
    }

    /**
     * Create an instance of {@link XmlEntityCacheType }
     * 
     */
    public XmlEntityCacheType createXmlEntityCacheType() {
        return new XmlEntityCacheType();
    }

    /**
     * Create an instance of {@link WebServiceResponseBufferingQueueType }
     * 
     */
    public WebServiceResponseBufferingQueueType createWebServiceResponseBufferingQueueType() {
        return new WebServiceResponseBufferingQueueType();
    }

    /**
     * Create an instance of {@link SingletonServiceAppScopedType }
     * 
     */
    public SingletonServiceAppScopedType createSingletonServiceAppScopedType() {
        return new SingletonServiceAppScopedType();
    }

    /**
     * Create an instance of {@link PathServiceType }
     * 
     */
    public PathServiceType createPathServiceType() {
        return new PathServiceType();
    }

    /**
     * Create an instance of {@link MessagingBridgeType }
     * 
     */
    public MessagingBridgeType createMessagingBridgeType() {
        return new MessagingBridgeType();
    }

    /**
     * Create an instance of {@link XmlRegistryType }
     * 
     */
    public XmlRegistryType createXmlRegistryType() {
        return new XmlRegistryType();
    }

    /**
     * Create an instance of {@link SelfTuningType }
     * 
     */
    public SelfTuningType createSelfTuningType() {
        return new SelfTuningType();
    }

    /**
     * Create an instance of {@link VirtualDestinationType }
     * 
     */
    public VirtualDestinationType createVirtualDestinationType() {
        return new VirtualDestinationType();
    }

    /**
     * Create an instance of {@link DeploymentType }
     * 
     */
    public DeploymentType createDeploymentType() {
        return new DeploymentType();
    }

    /**
     * Create an instance of {@link SnmpAgentDeploymentType }
     * 
     */
    public SnmpAgentDeploymentType createSnmpAgentDeploymentType() {
        return new SnmpAgentDeploymentType();
    }

    /**
     * Create an instance of {@link CachingRealmType }
     * 
     */
    public CachingRealmType createCachingRealmType() {
        return new CachingRealmType();
    }

    /**
     * Create an instance of {@link WebserviceTimestampType }
     * 
     */
    public WebserviceTimestampType createWebserviceTimestampType() {
        return new WebserviceTimestampType();
    }

    /**
     * Create an instance of {@link JmsQueueType }
     * 
     */
    public JmsQueueType createJmsQueueType() {
        return new JmsQueueType();
    }

    /**
     * Create an instance of {@link SnmpAgentType }
     * 
     */
    public SnmpAgentType createSnmpAgentType() {
        return new SnmpAgentType();
    }

    /**
     * Create an instance of {@link JmsDistributedQueueMemberType }
     * 
     */
    public JmsDistributedQueueMemberType createJmsDistributedQueueMemberType() {
        return new JmsDistributedQueueMemberType();
    }

    /**
     * Create an instance of {@link WtcTbridgeRedirectType }
     * 
     */
    public WtcTbridgeRedirectType createWtcTbridgeRedirectType() {
        return new WtcTbridgeRedirectType();
    }

    /**
     * Create an instance of {@link WebserviceSecurityConfigurationType }
     * 
     */
    public WebserviceSecurityConfigurationType createWebserviceSecurityConfigurationType() {
        return new WebserviceSecurityConfigurationType();
    }

    /**
     * Create an instance of {@link LibraryType }
     * 
     */
    public LibraryType createLibraryType() {
        return new LibraryType();
    }

    /**
     * Create an instance of {@link WtcLocalTuxDomType }
     * 
     */
    public WtcLocalTuxDomType createWtcLocalTuxDomType() {
        return new WtcLocalTuxDomType();
    }

    /**
     * Create an instance of {@link SystemResourceType }
     * 
     */
    public SystemResourceType createSystemResourceType() {
        return new SystemResourceType();
    }

    /**
     * Create an instance of {@link ForeignJndiObjectType }
     * 
     */
    public ForeignJndiObjectType createForeignJndiObjectType() {
        return new ForeignJndiObjectType();
    }

    /**
     * Create an instance of {@link WebServiceReliabilityType }
     * 
     */
    public WebServiceReliabilityType createWebServiceReliabilityType() {
        return new WebServiceReliabilityType();
    }

    /**
     * Create an instance of {@link ClassDeploymentType }
     * 
     */
    public ClassDeploymentType createClassDeploymentType() {
        return new ClassDeploymentType();
    }

    /**
     * Create an instance of {@link EjbContainerType }
     * 
     */
    public EjbContainerType createEjbContainerType() {
        return new EjbContainerType();
    }

    /**
     * Create an instance of {@link JmsJdbcStoreType }
     * 
     */
    public JmsJdbcStoreType createJmsJdbcStoreType() {
        return new JmsJdbcStoreType();
    }

    /**
     * Create an instance of {@link HttpProxyType }
     * 
     */
    public HttpProxyType createHttpProxyType() {
        return new HttpProxyType();
    }

    /**
     * Create an instance of {@link ErrorHandlingType }
     * 
     */
    public ErrorHandlingType createErrorHandlingType() {
        return new ErrorHandlingType();
    }

    /**
     * Create an instance of {@link SingleSignOnServicesType }
     * 
     */
    public SingleSignOnServicesType createSingleSignOnServicesType() {
        return new SingleSignOnServicesType();
    }

    /**
     * Create an instance of {@link ContextRequestClassType }
     * 
     */
    public ContextRequestClassType createContextRequestClassType() {
        return new ContextRequestClassType();
    }

    /**
     * Create an instance of {@link JmsFileStoreType }
     * 
     */
    public JmsFileStoreType createJmsFileStoreType() {
        return new JmsFileStoreType();
    }

    /**
     * Create an instance of {@link ShutdownClassType }
     * 
     */
    public ShutdownClassType createShutdownClassType() {
        return new ShutdownClassType();
    }

    /**
     * Create an instance of {@link ConfigurationType }
     * 
     */
    public ConfigurationType createConfigurationType() {
        return new ConfigurationType();
    }

    /**
     * Create an instance of {@link AppDeploymentType }
     * 
     */
    public AppDeploymentType createAppDeploymentType() {
        return new AppDeploymentType();
    }

    /**
     * Create an instance of {@link ServerDebugType }
     * 
     */
    public ServerDebugType createServerDebugType() {
        return new ServerDebugType();
    }

    /**
     * Create an instance of {@link FileRealmType }
     * 
     */
    public FileRealmType createFileRealmType() {
        return new FileRealmType();
    }

    /**
     * Create an instance of {@link TargetType }
     * 
     */
    public TargetType createTargetType() {
        return new TargetType();
    }

    /**
     * Create an instance of {@link WebserviceTokenHandlerType }
     * 
     */
    public WebserviceTokenHandlerType createWebserviceTokenHandlerType() {
        return new WebserviceTokenHandlerType();
    }

    /**
     * Create an instance of {@link CommonLogType }
     * 
     */
    public CommonLogType createCommonLogType() {
        return new CommonLogType();
    }

    /**
     * Create an instance of {@link NetworkChannelType }
     * 
     */
    public NetworkChannelType createNetworkChannelType() {
        return new NetworkChannelType();
    }

    /**
     * Create an instance of {@link SnmpTrapSourceType }
     * 
     */
    public SnmpTrapSourceType createSnmpTrapSourceType() {
        return new SnmpTrapSourceType();
    }

    /**
     * Create an instance of {@link EjbComponentType }
     * 
     */
    public EjbComponentType createEjbComponentType() {
        return new EjbComponentType();
    }

    /**
     * Create an instance of {@link BasicDeploymentType }
     * 
     */
    public BasicDeploymentType createBasicDeploymentType() {
        return new BasicDeploymentType();
    }

    /**
     * Create an instance of {@link JmsBridgeDestinationType }
     * 
     */
    public JmsBridgeDestinationType createJmsBridgeDestinationType() {
        return new JmsBridgeDestinationType();
    }

    /**
     * Create an instance of {@link ResponseTimeRequestClassType }
     * 
     */
    public ResponseTimeRequestClassType createResponseTimeRequestClassType() {
        return new ResponseTimeRequestClassType();
    }

    /**
     * Create an instance of {@link ScaContainerType }
     * 
     */
    public ScaContainerType createScaContainerType() {
        return new ScaContainerType();
    }

    /**
     * Create an instance of {@link XmlRegistryEntryType }
     * 
     */
    public XmlRegistryEntryType createXmlRegistryEntryType() {
        return new XmlRegistryEntryType();
    }

    /**
     * Create an instance of {@link SubDeploymentType }
     * 
     */
    public SubDeploymentType createSubDeploymentType() {
        return new SubDeploymentType();
    }

    /**
     * Create an instance of {@link WtcImportType }
     * 
     */
    public WtcImportType createWtcImportType() {
        return new WtcImportType();
    }

    /**
     * Create an instance of {@link WebServiceRequestBufferingQueueType }
     * 
     */
    public WebServiceRequestBufferingQueueType createWebServiceRequestBufferingQueueType() {
        return new WebServiceRequestBufferingQueueType();
    }

    /**
     * Create an instance of {@link ConfigurationPropertyType }
     * 
     */
    public ConfigurationPropertyType createConfigurationPropertyType() {
        return new ConfigurationPropertyType();
    }

    /**
     * Create an instance of {@link EmbeddedLdapType }
     * 
     */
    public EmbeddedLdapType createEmbeddedLdapType() {
        return new EmbeddedLdapType();
    }

    /**
     * Create an instance of {@link ForeignJmsServerType }
     * 
     */
    public ForeignJmsServerType createForeignJmsServerType() {
        return new ForeignJmsServerType();
    }

    /**
     * Create an instance of {@link MigratableTargetType }
     * 
     */
    public MigratableTargetType createMigratableTargetType() {
        return new MigratableTargetType();
    }

    /**
     * Create an instance of {@link WebServiceComponentType }
     * 
     */
    public WebServiceComponentType createWebServiceComponentType() {
        return new WebServiceComponentType();
    }

    /**
     * Create an instance of {@link WldfDataRetirementByAgeType }
     * 
     */
    public WldfDataRetirementByAgeType createWldfDataRetirementByAgeType() {
        return new WldfDataRetirementByAgeType();
    }

    /**
     * Create an instance of {@link JtaMigratableTargetType }
     * 
     */
    public JtaMigratableTargetType createJtaMigratableTargetType() {
        return new JtaMigratableTargetType();
    }

    /**
     * Create an instance of {@link ConfigurationExtensionType }
     * 
     */
    public ConfigurationExtensionType createConfigurationExtensionType() {
        return new ConfigurationExtensionType();
    }

    /**
     * Create an instance of {@link NetworkAccessPointType }
     * 
     */
    public NetworkAccessPointType createNetworkAccessPointType() {
        return new NetworkAccessPointType();
    }

    /**
     * Create an instance of {@link CacheLoaderType }
     * 
     */
    public CacheLoaderType createCacheLoaderType() {
        return new CacheLoaderType();
    }

    /**
     * Create an instance of {@link SnmpStringMonitorType }
     * 
     */
    public SnmpStringMonitorType createSnmpStringMonitorType() {
        return new SnmpStringMonitorType();
    }

    /**
     * Create an instance of {@link FileStoreType }
     * 
     */
    public FileStoreType createFileStoreType() {
        return new FileStoreType();
    }

    /**
     * Create an instance of {@link ForeignJndiProviderType }
     * 
     */
    public ForeignJndiProviderType createForeignJndiProviderType() {
        return new ForeignJndiProviderType();
    }

    /**
     * Create an instance of {@link ClusterType }
     * 
     */
    public ClusterType createClusterType() {
        return new ClusterType();
    }

    /**
     * Create an instance of {@link WldfServerDiagnosticType }
     * 
     */
    public WldfServerDiagnosticType createWldfServerDiagnosticType() {
        return new WldfServerDiagnosticType();
    }

    /**
     * Create an instance of {@link DeploymentConfigurationType }
     * 
     */
    public DeploymentConfigurationType createDeploymentConfigurationType() {
        return new DeploymentConfigurationType();
    }

    /**
     * Create an instance of {@link CoherenceClusterSystemResourceType }
     * 
     */
    public CoherenceClusterSystemResourceType createCoherenceClusterSystemResourceType() {
        return new CoherenceClusterSystemResourceType();
    }

    /**
     * Create an instance of {@link SnmpTrapDestinationType }
     * 
     */
    public SnmpTrapDestinationType createSnmpTrapDestinationType() {
        return new SnmpTrapDestinationType();
    }

    /**
     * Create an instance of {@link RdbmsRealmType }
     * 
     */
    public RdbmsRealmType createRdbmsRealmType() {
        return new RdbmsRealmType();
    }

    /**
     * Create an instance of {@link JmsTemplateType }
     * 
     */
    public JmsTemplateType createJmsTemplateType() {
        return new JmsTemplateType();
    }

    /**
     * Create an instance of {@link SingletonServiceBaseType }
     * 
     */
    public SingletonServiceBaseType createSingletonServiceBaseType() {
        return new SingletonServiceBaseType();
    }

    /**
     * Create an instance of {@link WtcExportType }
     * 
     */
    public WtcExportType createWtcExportType() {
        return new WtcExportType();
    }

    /**
     * Create an instance of {@link LdapRealmType }
     * 
     */
    public LdapRealmType createLdapRealmType() {
        return new LdapRealmType();
    }

    /**
     * Create an instance of {@link SecurityConfigurationType }
     * 
     */
    public SecurityConfigurationType createSecurityConfigurationType() {
        return new SecurityConfigurationType();
    }

    /**
     * Create an instance of {@link VirtualHostType }
     * 
     */
    public VirtualHostType createVirtualHostType() {
        return new VirtualHostType();
    }

    /**
     * Create an instance of {@link ConversationServiceType }
     * 
     */
    public ConversationServiceType createConversationServiceType() {
        return new ConversationServiceType();
    }

    /**
     * Create an instance of {@link WebserviceCredentialProviderType }
     * 
     */
    public WebserviceCredentialProviderType createWebserviceCredentialProviderType() {
        return new WebserviceCredentialProviderType();
    }

    /**
     * Create an instance of {@link UnixMachineType }
     * 
     */
    public UnixMachineType createUnixMachineType() {
        return new UnixMachineType();
    }

    /**
     * Create an instance of {@link WebDeploymentType }
     * 
     */
    public WebDeploymentType createWebDeploymentType() {
        return new WebDeploymentType();
    }

    /**
     * Create an instance of {@link MinThreadsConstraintType }
     * 
     */
    public MinThreadsConstraintType createMinThreadsConstraintType() {
        return new MinThreadsConstraintType();
    }

    /**
     * Create an instance of {@link WebServiceLogicalStoreType }
     * 
     */
    public WebServiceLogicalStoreType createWebServiceLogicalStoreType() {
        return new WebServiceLogicalStoreType();
    }

    /**
     * Create an instance of {@link JmsDistributedQueueType }
     * 
     */
    public JmsDistributedQueueType createJmsDistributedQueueType() {
        return new JmsDistributedQueueType();
    }

    /**
     * Create an instance of {@link KernelDebugType }
     * 
     */
    public KernelDebugType createKernelDebugType() {
        return new KernelDebugType();
    }

    /**
     * Create an instance of {@link WtcRemoteTuxDomType }
     * 
     */
    public WtcRemoteTuxDomType createWtcRemoteTuxDomType() {
        return new WtcRemoteTuxDomType();
    }

    /**
     * Create an instance of {@link SafAgentType }
     * 
     */
    public SafAgentType createSafAgentType() {
        return new SafAgentType();
    }

    /**
     * Create an instance of {@link ConnectorComponentType }
     * 
     */
    public ConnectorComponentType createConnectorComponentType() {
        return new ConnectorComponentType();
    }

    /**
     * Create an instance of {@link JmsConnectionConsumerType }
     * 
     */
    public JmsConnectionConsumerType createJmsConnectionConsumerType() {
        return new JmsConnectionConsumerType();
    }

    /**
     * Create an instance of {@link GenericFileStoreType }
     * 
     */
    public GenericFileStoreType createGenericFileStoreType() {
        return new GenericFileStoreType();
    }

    /**
     * Create an instance of {@link ForeignJndiLinkType }
     * 
     */
    public ForeignJndiLinkType createForeignJndiLinkType() {
        return new ForeignJndiLinkType();
    }

    /**
     * Create an instance of {@link JdbcMultiPoolType }
     * 
     */
    public JdbcMultiPoolType createJdbcMultiPoolType() {
        return new JdbcMultiPoolType();
    }

    /**
     * Create an instance of {@link WldfDataRetirementType }
     * 
     */
    public WldfDataRetirementType createWldfDataRetirementType() {
        return new WldfDataRetirementType();
    }

    /**
     * Create an instance of {@link JmsVirtualDestinationType }
     * 
     */
    public JmsVirtualDestinationType createJmsVirtualDestinationType() {
        return new JmsVirtualDestinationType();
    }

    /**
     * Create an instance of {@link WebserviceSecurityType }
     * 
     */
    public WebserviceSecurityType createWebserviceSecurityType() {
        return new WebserviceSecurityType();
    }

    /**
     * Create an instance of {@link WebServiceBufferingType }
     * 
     */
    public WebServiceBufferingType createWebServiceBufferingType() {
        return new WebServiceBufferingType();
    }

    /**
     * Create an instance of {@link NtRealmType }
     * 
     */
    public NtRealmType createNtRealmType() {
        return new NtRealmType();
    }

    /**
     * Create an instance of {@link ContextCaseType }
     * 
     */
    public ContextCaseType createContextCaseType() {
        return new ContextCaseType();
    }

    /**
     * Create an instance of {@link AuthenticatorType }
     * 
     */
    public AuthenticatorType createAuthenticatorType() {
        return new AuthenticatorType();
    }

    /**
     * Create an instance of {@link UserRemoverType }
     * 
     */
    public UserRemoverType createUserRemoverType() {
        return new UserRemoverType();
    }

    /**
     * Create an instance of {@link CertPathValidatorType }
     * 
     */
    public CertPathValidatorType createCertPathValidatorType() {
        return new CertPathValidatorType();
    }

    /**
     * Create an instance of {@link UserPasswordCredentialMapEditorType }
     * 
     */
    public UserPasswordCredentialMapEditorType createUserPasswordCredentialMapEditorType() {
        return new UserPasswordCredentialMapEditorType();
    }

    /**
     * Create an instance of {@link UserPasswordCredentialMapExtendedEditorType }
     * 
     */
    public UserPasswordCredentialMapExtendedEditorType createUserPasswordCredentialMapExtendedEditorType() {
        return new UserPasswordCredentialMapExtendedEditorType();
    }

    /**
     * Create an instance of {@link ServletAuthenticationFilterType }
     * 
     */
    public ServletAuthenticationFilterType createServletAuthenticationFilterType() {
        return new ServletAuthenticationFilterType();
    }

    /**
     * Create an instance of {@link UserAttributeReaderType }
     * 
     */
    public UserAttributeReaderType createUserAttributeReaderType() {
        return new UserAttributeReaderType();
    }

    /**
     * Create an instance of {@link NameListerType }
     * 
     */
    public NameListerType createNameListerType() {
        return new NameListerType();
    }

    /**
     * Create an instance of {@link GroupMemberListerType }
     * 
     */
    public GroupMemberListerType createGroupMemberListerType() {
        return new GroupMemberListerType();
    }

    /**
     * Create an instance of {@link RealmType }
     * 
     */
    public RealmType createRealmType() {
        return new RealmType();
    }

    /**
     * Create an instance of {@link DeployableAuthorizerType }
     * 
     */
    public DeployableAuthorizerType createDeployableAuthorizerType() {
        return new DeployableAuthorizerType();
    }

    /**
     * Create an instance of {@link PkiCredentialMapExtendedEditorType }
     * 
     */
    public PkiCredentialMapExtendedEditorType createPkiCredentialMapExtendedEditorType() {
        return new PkiCredentialMapExtendedEditorType();
    }

    /**
     * Create an instance of {@link RoleConsumerType }
     * 
     */
    public RoleConsumerType createRoleConsumerType() {
        return new RoleConsumerType();
    }

    /**
     * Create an instance of {@link AnyIdentityDomainAuthenticatorType }
     * 
     */
    public AnyIdentityDomainAuthenticatorType createAnyIdentityDomainAuthenticatorType() {
        return new AnyIdentityDomainAuthenticatorType();
    }

    /**
     * Create an instance of {@link PolicyListerType }
     * 
     */
    public PolicyListerType createPolicyListerType() {
        return new PolicyListerType();
    }

    /**
     * Create an instance of {@link PasswordValidatorType }
     * 
     */
    public PasswordValidatorType createPasswordValidatorType() {
        return new PasswordValidatorType();
    }

    /**
     * Create an instance of {@link AuditorType }
     * 
     */
    public AuditorType createAuditorType() {
        return new AuditorType();
    }

    /**
     * Create an instance of {@link GroupRemoverType }
     * 
     */
    public GroupRemoverType createGroupRemoverType() {
        return new GroupRemoverType();
    }

    /**
     * Create an instance of {@link RdbmsSecurityStoreType }
     * 
     */
    public RdbmsSecurityStoreType createRdbmsSecurityStoreType() {
        return new RdbmsSecurityStoreType();
    }

    /**
     * Create an instance of {@link IdentityAsserterType }
     * 
     */
    public IdentityAsserterType createIdentityAsserterType() {
        return new IdentityAsserterType();
    }

    /**
     * Create an instance of {@link RoleAuxiliaryType }
     * 
     */
    public RoleAuxiliaryType createRoleAuxiliaryType() {
        return new RoleAuxiliaryType();
    }

    /**
     * Create an instance of {@link MemberGroupListerType }
     * 
     */
    public MemberGroupListerType createMemberGroupListerType() {
        return new MemberGroupListerType();
    }

    /**
     * Create an instance of {@link UserEditorType }
     * 
     */
    public UserEditorType createUserEditorType() {
        return new UserEditorType();
    }

    /**
     * Create an instance of {@link CertPathProviderType }
     * 
     */
    public CertPathProviderType createCertPathProviderType() {
        return new CertPathProviderType();
    }

    /**
     * Create an instance of {@link PredicateEditorType }
     * 
     */
    public PredicateEditorType createPredicateEditorType() {
        return new PredicateEditorType();
    }

    /**
     * Create an instance of {@link GroupReaderType }
     * 
     */
    public GroupReaderType createGroupReaderType() {
        return new GroupReaderType();
    }

    /**
     * Create an instance of {@link PolicyStoreType }
     * 
     */
    public PolicyStoreType createPolicyStoreType() {
        return new PolicyStoreType();
    }

    /**
     * Create an instance of {@link PkiCredentialMapReaderType }
     * 
     */
    public PkiCredentialMapReaderType createPkiCredentialMapReaderType() {
        return new PkiCredentialMapReaderType();
    }

    /**
     * Create an instance of {@link PolicyReaderType }
     * 
     */
    public PolicyReaderType createPolicyReaderType() {
        return new PolicyReaderType();
    }

    /**
     * Create an instance of {@link AuthenticationProviderType }
     * 
     */
    public AuthenticationProviderType createAuthenticationProviderType() {
        return new AuthenticationProviderType();
    }

    /**
     * Create an instance of {@link PolicyAuxiliaryType }
     * 
     */
    public PolicyAuxiliaryType createPolicyAuxiliaryType() {
        return new PolicyAuxiliaryType();
    }

    /**
     * Create an instance of {@link DeployableCredentialMapperType }
     * 
     */
    public DeployableCredentialMapperType createDeployableCredentialMapperType() {
        return new DeployableCredentialMapperType();
    }

    /**
     * Create an instance of {@link MultiIdentityDomainAuthenticatorType }
     * 
     */
    public MultiIdentityDomainAuthenticatorType createMultiIdentityDomainAuthenticatorType() {
        return new MultiIdentityDomainAuthenticatorType();
    }

    /**
     * Create an instance of {@link PredicateReaderType }
     * 
     */
    public PredicateReaderType createPredicateReaderType() {
        return new PredicateReaderType();
    }

    /**
     * Create an instance of {@link CredentialCacheType }
     * 
     */
    public CredentialCacheType createCredentialCacheType() {
        return new CredentialCacheType();
    }

    /**
     * Create an instance of {@link GroupEditorType }
     * 
     */
    public GroupEditorType createGroupEditorType() {
        return new GroupEditorType();
    }

    /**
     * Create an instance of {@link ProviderType }
     * 
     */
    public ProviderType createProviderType() {
        return new ProviderType();
    }

    /**
     * Create an instance of {@link GroupUserListerType }
     * 
     */
    public GroupUserListerType createGroupUserListerType() {
        return new GroupUserListerType();
    }

    /**
     * Create an instance of {@link ImportType }
     * 
     */
    public ImportType createImportType() {
        return new ImportType();
    }

    /**
     * Create an instance of {@link RoleEditorType }
     * 
     */
    public RoleEditorType createRoleEditorType() {
        return new RoleEditorType();
    }

    /**
     * Create an instance of {@link CredentialMapperType }
     * 
     */
    public CredentialMapperType createCredentialMapperType() {
        return new CredentialMapperType();
    }

    /**
     * Create an instance of {@link UserPasswordCredentialMapExtendedReaderType }
     * 
     */
    public UserPasswordCredentialMapExtendedReaderType createUserPasswordCredentialMapExtendedReaderType() {
        return new UserPasswordCredentialMapExtendedReaderType();
    }

    /**
     * Create an instance of {@link IdentityDomainAwareProviderType }
     * 
     */
    public IdentityDomainAwareProviderType createIdentityDomainAwareProviderType() {
        return new IdentityDomainAwareProviderType();
    }

    /**
     * Create an instance of {@link ContextHandlerType }
     * 
     */
    public ContextHandlerType createContextHandlerType() {
        return new ContextHandlerType();
    }

    /**
     * Create an instance of {@link PkiCredentialMapEditorType }
     * 
     */
    public PkiCredentialMapEditorType createPkiCredentialMapEditorType() {
        return new PkiCredentialMapEditorType();
    }

    /**
     * Create an instance of {@link ApplicationVersionerType }
     * 
     */
    public ApplicationVersionerType createApplicationVersionerType() {
        return new ApplicationVersionerType();
    }

    /**
     * Create an instance of {@link GroupMembershipHierarchyCacheType }
     * 
     */
    public GroupMembershipHierarchyCacheType createGroupMembershipHierarchyCacheType() {
        return new GroupMembershipHierarchyCacheType();
    }

    /**
     * Create an instance of {@link AdjudicatorType }
     * 
     */
    public AdjudicatorType createAdjudicatorType() {
        return new AdjudicatorType();
    }

    /**
     * Create an instance of {@link RoleListerType }
     * 
     */
    public RoleListerType createRoleListerType() {
        return new RoleListerType();
    }

    /**
     * Create an instance of {@link UserPasswordCredentialMapReaderType }
     * 
     */
    public UserPasswordCredentialMapReaderType createUserPasswordCredentialMapReaderType() {
        return new UserPasswordCredentialMapReaderType();
    }

    /**
     * Create an instance of {@link UserPasswordCredentialMapExtendedV2ReaderType }
     * 
     */
    public UserPasswordCredentialMapExtendedV2ReaderType createUserPasswordCredentialMapExtendedV2ReaderType() {
        return new UserPasswordCredentialMapExtendedV2ReaderType();
    }

    /**
     * Create an instance of {@link PolicyEditorType }
     * 
     */
    public PolicyEditorType createPolicyEditorType() {
        return new PolicyEditorType();
    }

    /**
     * Create an instance of {@link ListerType }
     * 
     */
    public ListerType createListerType() {
        return new ListerType();
    }

    /**
     * Create an instance of {@link PolicyConsumerType }
     * 
     */
    public PolicyConsumerType createPolicyConsumerType() {
        return new PolicyConsumerType();
    }

    /**
     * Create an instance of {@link LdapServerType }
     * 
     */
    public LdapServerType createLdapServerType() {
        return new LdapServerType();
    }

    /**
     * Create an instance of {@link PkiCredentialMapExtendedReaderType }
     * 
     */
    public PkiCredentialMapExtendedReaderType createPkiCredentialMapExtendedReaderType() {
        return new PkiCredentialMapExtendedReaderType();
    }

    /**
     * Create an instance of {@link PropertiesListerType }
     * 
     */
    public PropertiesListerType createPropertiesListerType() {
        return new PropertiesListerType();
    }

    /**
     * Create an instance of {@link CertPathBuilderType }
     * 
     */
    public CertPathBuilderType createCertPathBuilderType() {
        return new CertPathBuilderType();
    }

    /**
     * Create an instance of {@link ExportType }
     * 
     */
    public ExportType createExportType() {
        return new ExportType();
    }

    /**
     * Create an instance of {@link IdentityDomainAuthenticatorType }
     * 
     */
    public IdentityDomainAuthenticatorType createIdentityDomainAuthenticatorType() {
        return new IdentityDomainAuthenticatorType();
    }

    /**
     * Create an instance of {@link UserLockoutManagerType }
     * 
     */
    public UserLockoutManagerType createUserLockoutManagerType() {
        return new UserLockoutManagerType();
    }

    /**
     * Create an instance of {@link UserAttributeEditorType }
     * 
     */
    public UserAttributeEditorType createUserAttributeEditorType() {
        return new UserAttributeEditorType();
    }

    /**
     * Create an instance of {@link UserReaderType }
     * 
     */
    public UserReaderType createUserReaderType() {
        return new UserReaderType();
    }

    /**
     * Create an instance of {@link DeployableRoleMapperType }
     * 
     */
    public DeployableRoleMapperType createDeployableRoleMapperType() {
        return new DeployableRoleMapperType();
    }

    /**
     * Create an instance of {@link RoleReaderType }
     * 
     */
    public RoleReaderType createRoleReaderType() {
        return new RoleReaderType();
    }

    /**
     * Create an instance of {@link KeyStoreType }
     * 
     */
    public KeyStoreType createKeyStoreType() {
        return new KeyStoreType();
    }

    /**
     * Create an instance of {@link RoleMapperType }
     * 
     */
    public RoleMapperType createRoleMapperType() {
        return new RoleMapperType();
    }

    /**
     * Create an instance of {@link UserPasswordEditorType }
     * 
     */
    public UserPasswordEditorType createUserPasswordEditorType() {
        return new UserPasswordEditorType();
    }

    /**
     * Create an instance of {@link AuthorizerType }
     * 
     */
    public AuthorizerType createAuthorizerType() {
        return new AuthorizerType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DomainType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "domain")
    public JAXBElement<DomainType> createDomain(DomainType value) {
        return new JAXBElement<DomainType>(_Domain_QNAME, DomainType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "max-idle-time", scope = ScaContainerType.class)
    public JAXBElement<String> createScaContainerTypeMaxIdleTime(String value) {
        return new JAXBElement<String>(_ScaContainerTypeMaxIdleTime_QNAME, String.class, ScaContainerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "max-age", scope = ScaContainerType.class)
    public JAXBElement<String> createScaContainerTypeMaxAge(String value) {
        return new JAXBElement<String>(_ScaContainerTypeMaxAge_QNAME, String.class, ScaContainerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "bug-report-service-wsdl-url", scope = ServerDebugType.class)
    public JAXBElement<String> createServerDebugTypeBugReportServiceWsdlUrl(String value) {
        return new JAXBElement<String>(_ServerDebugTypeBugReportServiceWsdlUrl_QNAME, String.class, ServerDebugType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "debug-xml-registry-debug-name", scope = ServerDebugType.class)
    public JAXBElement<String> createServerDebugTypeDebugXmlRegistryDebugName(String value) {
        return new JAXBElement<String>(_ServerDebugTypeDebugXmlRegistryDebugName_QNAME, String.class, ServerDebugType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "server", scope = ServerDebugType.class)
    public JAXBElement<String> createServerDebugTypeServer(String value) {
        return new JAXBElement<String>(_ServerDebugTypeServer_QNAME, String.class, ServerDebugType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "diagnostic-context-debug-mode", scope = ServerDebugType.class)
    public JAXBElement<String> createServerDebugTypeDiagnosticContextDebugMode(String value) {
        return new JAXBElement<String>(_ServerDebugTypeDiagnosticContextDebugMode_QNAME, String.class, ServerDebugType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "debug-xml-entity-cache-debug-name", scope = ServerDebugType.class)
    public JAXBElement<String> createServerDebugTypeDebugXmlEntityCacheDebugName(String value) {
        return new JAXBElement<String>(_ServerDebugTypeDebugXmlEntityCacheDebugName_QNAME, String.class, ServerDebugType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "magic-thread-dump-file", scope = ServerDebugType.class, defaultValue = "debugMagicThreadDumpFile")
    public JAXBElement<String> createServerDebugTypeMagicThreadDumpFile(String value) {
        return new JAXBElement<String>(_ServerDebugTypeMagicThreadDumpFile_QNAME, String.class, ServerDebugType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "debug-jta-resource-name", scope = ServerDebugType.class)
    public JAXBElement<String> createServerDebugTypeDebugJtaResourceName(String value) {
        return new JAXBElement<String>(_ServerDebugTypeDebugJtaResourceName_QNAME, String.class, ServerDebugType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "debug-jta-transaction-name", scope = ServerDebugType.class)
    public JAXBElement<String> createServerDebugTypeDebugJtaTransactionName(String value) {
        return new JAXBElement<String>(_ServerDebugTypeDebugJtaTransactionName_QNAME, String.class, ServerDebugType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "debug-jaxp-debug-name", scope = ServerDebugType.class)
    public JAXBElement<String> createServerDebugTypeDebugJaxpDebugName(String value) {
        return new JAXBElement<String>(_ServerDebugTypeDebugJaxpDebugName_QNAME, String.class, ServerDebugType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "jndi-username", scope = RdbmsSecurityStoreType.class)
    public JAXBElement<String> createRdbmsSecurityStoreTypeJndiUsername(String value) {
        return new JAXBElement<String>(_RdbmsSecurityStoreTypeJndiUsername_QNAME, String.class, RdbmsSecurityStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "jms-topic", scope = RdbmsSecurityStoreType.class)
    public JAXBElement<String> createRdbmsSecurityStoreTypeJmsTopic(String value) {
        return new JAXBElement<String>(_RdbmsSecurityStoreTypeJmsTopic_QNAME, String.class, RdbmsSecurityStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "notification-properties", scope = RdbmsSecurityStoreType.class)
    public JAXBElement<String> createRdbmsSecurityStoreTypeNotificationProperties(String value) {
        return new JAXBElement<String>(_RdbmsSecurityStoreTypeNotificationProperties_QNAME, String.class, RdbmsSecurityStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "connection-properties", scope = RdbmsSecurityStoreType.class)
    public JAXBElement<String> createRdbmsSecurityStoreTypeConnectionProperties(String value) {
        return new JAXBElement<String>(_RdbmsSecurityStoreTypeConnectionProperties_QNAME, String.class, RdbmsSecurityStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "jms-topic-connection-factory", scope = RdbmsSecurityStoreType.class)
    public JAXBElement<String> createRdbmsSecurityStoreTypeJmsTopicConnectionFactory(String value) {
        return new JAXBElement<String>(_RdbmsSecurityStoreTypeJmsTopicConnectionFactory_QNAME, String.class, RdbmsSecurityStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "compatibility-object-name", scope = RdbmsSecurityStoreType.class)
    public JAXBElement<String> createRdbmsSecurityStoreTypeCompatibilityObjectName(String value) {
        return new JAXBElement<String>(_RdbmsSecurityStoreTypeCompatibilityObjectName_QNAME, String.class, RdbmsSecurityStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "password-encrypted", scope = RdbmsSecurityStoreType.class)
    public JAXBElement<String> createRdbmsSecurityStoreTypePasswordEncrypted(String value) {
        return new JAXBElement<String>(_RdbmsSecurityStoreTypePasswordEncrypted_QNAME, String.class, RdbmsSecurityStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "jndi-password-encrypted", scope = RdbmsSecurityStoreType.class)
    public JAXBElement<String> createRdbmsSecurityStoreTypeJndiPasswordEncrypted(String value) {
        return new JAXBElement<String>(_RdbmsSecurityStoreTypeJndiPasswordEncrypted_QNAME, String.class, RdbmsSecurityStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "name", scope = RdbmsSecurityStoreType.class, defaultValue = "RDBMSSecurityStore")
    public JAXBElement<String> createRdbmsSecurityStoreTypeName(String value) {
        return new JAXBElement<String>(_RdbmsSecurityStoreTypeName_QNAME, String.class, RdbmsSecurityStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "used-assertion-cache-properties", scope = FederationServicesType.class)
    public JAXBElement<String> createFederationServicesTypeUsedAssertionCacheProperties(String value) {
        return new JAXBElement<String>(_FederationServicesTypeUsedAssertionCacheProperties_QNAME, String.class, FederationServicesType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "signing-key-pass-phrase-encrypted", scope = FederationServicesType.class)
    public JAXBElement<String> createFederationServicesTypeSigningKeyPassPhraseEncrypted(String value) {
        return new JAXBElement<String>(_FederationServicesTypeSigningKeyPassPhraseEncrypted_QNAME, String.class, FederationServicesType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "signing-key-alias", scope = FederationServicesType.class)
    public JAXBElement<String> createFederationServicesTypeSigningKeyAlias(String value) {
        return new JAXBElement<String>(_FederationServicesTypeSigningKeyAlias_QNAME, String.class, FederationServicesType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "assertion-store-class-name", scope = FederationServicesType.class)
    public JAXBElement<String> createFederationServicesTypeAssertionStoreClassName(String value) {
        return new JAXBElement<String>(_FederationServicesTypeAssertionStoreClassName_QNAME, String.class, FederationServicesType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "source-site-url", scope = FederationServicesType.class)
    public JAXBElement<String> createFederationServicesTypeSourceSiteUrl(String value) {
        return new JAXBElement<String>(_FederationServicesTypeSourceSiteUrl_QNAME, String.class, FederationServicesType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "ssl-client-identity-alias", scope = FederationServicesType.class)
    public JAXBElement<String> createFederationServicesTypeSslClientIdentityAlias(String value) {
        return new JAXBElement<String>(_FederationServicesTypeSslClientIdentityAlias_QNAME, String.class, FederationServicesType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "assertion-store-properties", scope = FederationServicesType.class)
    public JAXBElement<String> createFederationServicesTypeAssertionStoreProperties(String value) {
        return new JAXBElement<String>(_FederationServicesTypeAssertionStoreProperties_QNAME, String.class, FederationServicesType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "ssl-client-identity-pass-phrase-encrypted", scope = FederationServicesType.class)
    public JAXBElement<String> createFederationServicesTypeSslClientIdentityPassPhraseEncrypted(String value) {
        return new JAXBElement<String>(_FederationServicesTypeSslClientIdentityPassPhraseEncrypted_QNAME, String.class, FederationServicesType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "used-assertion-cache-class-name", scope = FederationServicesType.class)
    public JAXBElement<String> createFederationServicesTypeUsedAssertionCacheClassName(String value) {
        return new JAXBElement<String>(_FederationServicesTypeUsedAssertionCacheClassName_QNAME, String.class, FederationServicesType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "audit-provider-class-name", scope = SecurityType.class)
    public JAXBElement<String> createSecurityTypeAuditProviderClassName(String value) {
        return new JAXBElement<String>(_SecurityTypeAuditProviderClassName_QNAME, String.class, SecurityType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "password-policy", scope = SecurityType.class)
    public JAXBElement<String> createSecurityTypePasswordPolicy(String value) {
        return new JAXBElement<String>(_SecurityTypePasswordPolicy_QNAME, String.class, SecurityType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "realm", scope = SecurityType.class)
    public JAXBElement<String> createSecurityTypeRealm(String value) {
        return new JAXBElement<String>(_SecurityTypeRealm_QNAME, String.class, SecurityType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "properties", scope = MailSessionType.class)
    public JAXBElement<String> createMailSessionTypeProperties(String value) {
        return new JAXBElement<String>(_MailSessionTypeProperties_QNAME, String.class, MailSessionType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "file-realm", scope = OldRealmType.class)
    public JAXBElement<String> createOldRealmTypeFileRealm(String value) {
        return new JAXBElement<String>(_OldRealmTypeFileRealm_QNAME, String.class, OldRealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "caching-realm", scope = OldRealmType.class)
    public JAXBElement<String> createOldRealmTypeCachingRealm(String value) {
        return new JAXBElement<String>(_OldRealmTypeCachingRealm_QNAME, String.class, OldRealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "max-group-hierarchies-in-cache", scope = GroupMembershipHierarchyCacheType.class)
    public JAXBElement<Integer> createGroupMembershipHierarchyCacheTypeMaxGroupHierarchiesInCache(Integer value) {
        return new JAXBElement<Integer>(_GroupMembershipHierarchyCacheTypeMaxGroupHierarchiesInCache_QNAME, Integer.class, GroupMembershipHierarchyCacheType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "enable-group-membership-lookup-hierarchy-caching", scope = GroupMembershipHierarchyCacheType.class)
    public JAXBElement<Boolean> createGroupMembershipHierarchyCacheTypeEnableGroupMembershipLookupHierarchyCaching(Boolean value) {
        return new JAXBElement<Boolean>(_GroupMembershipHierarchyCacheTypeEnableGroupMembershipLookupHierarchyCaching_QNAME, Boolean.class, GroupMembershipHierarchyCacheType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "group-hierarchy-cache-ttl", scope = GroupMembershipHierarchyCacheType.class)
    public JAXBElement<Integer> createGroupMembershipHierarchyCacheTypeGroupHierarchyCacheTtl(Integer value) {
        return new JAXBElement<Integer>(_GroupMembershipHierarchyCacheTypeGroupHierarchyCacheTtl_QNAME, Integer.class, GroupMembershipHierarchyCacheType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "realm-class-name", scope = BasicRealmType.class)
    public JAXBElement<String> createBasicRealmTypeRealmClassName(String value) {
        return new JAXBElement<String>(_BasicRealmTypeRealmClassName_QNAME, String.class, BasicRealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "jms-queue", scope = JmsDistributedQueueMemberType.class)
    public JAXBElement<String> createJmsDistributedQueueMemberTypeJmsQueue(String value) {
        return new JAXBElement<String>(_JmsDistributedQueueMemberTypeJmsQueue_QNAME, String.class, JmsDistributedQueueMemberType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CacheLoaderType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "loader", scope = CacheType.class)
    public JAXBElement<CacheLoaderType> createCacheTypeLoader(CacheLoaderType value) {
        return new JAXBElement<CacheLoaderType>(_CacheTypeLoader_QNAME, CacheLoaderType.class, CacheType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "eviction-policy", scope = CacheType.class)
    public JAXBElement<String> createCacheTypeEvictionPolicy(String value) {
        return new JAXBElement<String>(_CacheTypeEvictionPolicy_QNAME, String.class, CacheType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CacheAsyncListenersType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "async-listeners", scope = CacheType.class)
    public JAXBElement<CacheAsyncListenersType> createCacheTypeAsyncListeners(CacheAsyncListenersType value) {
        return new JAXBElement<CacheAsyncListenersType>(_CacheTypeAsyncListeners_QNAME, CacheAsyncListenersType.class, CacheType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CacheTransactionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "transactional", scope = CacheType.class)
    public JAXBElement<CacheTransactionType> createCacheTypeTransactional(CacheTransactionType value) {
        return new JAXBElement<CacheTransactionType>(_CacheTypeTransactional_QNAME, CacheTransactionType.class, CacheType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CacheExpirationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "expiration", scope = CacheType.class)
    public JAXBElement<CacheExpirationType> createCacheTypeExpiration(CacheExpirationType value) {
        return new JAXBElement<CacheExpirationType>(_CacheTypeExpiration_QNAME, CacheExpirationType.class, CacheType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "work-manager", scope = CacheType.class)
    public JAXBElement<String> createCacheTypeWorkManager(String value) {
        return new JAXBElement<String>(_CacheTypeWorkManager_QNAME, String.class, CacheType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CacheStoreType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "store", scope = CacheType.class)
    public JAXBElement<CacheStoreType> createCacheTypeStore(CacheStoreType value) {
        return new JAXBElement<CacheStoreType>(_CacheTypeStore_QNAME, CacheStoreType.class, CacheType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "tp-usr-file", scope = WtcRemoteTuxDomType.class)
    public JAXBElement<String> createWtcRemoteTuxDomTypeTpUsrFile(String value) {
        return new JAXBElement<String>(_WtcRemoteTuxDomTypeTpUsrFile_QNAME, String.class, WtcRemoteTuxDomType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "nw-addr", scope = WtcRemoteTuxDomType.class, defaultValue = "//localhost:8902")
    public JAXBElement<String> createWtcRemoteTuxDomTypeNwAddr(String value) {
        return new JAXBElement<String>(_WtcRemoteTuxDomTypeNwAddr_QNAME, String.class, WtcRemoteTuxDomType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "tuxedo-uid-kw", scope = WtcRemoteTuxDomType.class, defaultValue = "TUXEDO_UID")
    public JAXBElement<String> createWtcRemoteTuxDomTypeTuxedoUidKw(String value) {
        return new JAXBElement<String>(_WtcRemoteTuxDomTypeTuxedoUidKw_QNAME, String.class, WtcRemoteTuxDomType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "federation-url", scope = WtcRemoteTuxDomType.class)
    public JAXBElement<String> createWtcRemoteTuxDomTypeFederationUrl(String value) {
        return new JAXBElement<String>(_WtcRemoteTuxDomTypeFederationUrl_QNAME, String.class, WtcRemoteTuxDomType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "connection-policy", scope = WtcRemoteTuxDomType.class)
    public JAXBElement<String> createWtcRemoteTuxDomTypeConnectionPolicy(String value) {
        return new JAXBElement<String>(_WtcRemoteTuxDomTypeConnectionPolicy_QNAME, String.class, WtcRemoteTuxDomType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "conn-principal-name", scope = WtcRemoteTuxDomType.class)
    public JAXBElement<String> createWtcRemoteTuxDomTypeConnPrincipalName(String value) {
        return new JAXBElement<String>(_WtcRemoteTuxDomTypeConnPrincipalName_QNAME, String.class, WtcRemoteTuxDomType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "acl-policy", scope = WtcRemoteTuxDomType.class)
    public JAXBElement<String> createWtcRemoteTuxDomTypeAclPolicy(String value) {
        return new JAXBElement<String>(_WtcRemoteTuxDomTypeAclPolicy_QNAME, String.class, WtcRemoteTuxDomType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "credential-policy", scope = WtcRemoteTuxDomType.class)
    public JAXBElement<String> createWtcRemoteTuxDomTypeCredentialPolicy(String value) {
        return new JAXBElement<String>(_WtcRemoteTuxDomTypeCredentialPolicy_QNAME, String.class, WtcRemoteTuxDomType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "federation-name", scope = WtcRemoteTuxDomType.class)
    public JAXBElement<String> createWtcRemoteTuxDomTypeFederationName(String value) {
        return new JAXBElement<String>(_WtcRemoteTuxDomTypeFederationName_QNAME, String.class, WtcRemoteTuxDomType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "min-encrypt-bits", scope = WtcRemoteTuxDomType.class)
    public JAXBElement<String> createWtcRemoteTuxDomTypeMinEncryptBits(String value) {
        return new JAXBElement<String>(_WtcRemoteTuxDomTypeMinEncryptBits_QNAME, String.class, WtcRemoteTuxDomType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "tuxedo-gid-kw", scope = WtcRemoteTuxDomType.class, defaultValue = "TUXEDO_GID")
    public JAXBElement<String> createWtcRemoteTuxDomTypeTuxedoGidKw(String value) {
        return new JAXBElement<String>(_WtcRemoteTuxDomTypeTuxedoGidKw_QNAME, String.class, WtcRemoteTuxDomType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "custom-app-key-class", scope = WtcRemoteTuxDomType.class)
    public JAXBElement<String> createWtcRemoteTuxDomTypeCustomAppKeyClass(String value) {
        return new JAXBElement<String>(_WtcRemoteTuxDomTypeCustomAppKeyClass_QNAME, String.class, WtcRemoteTuxDomType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "custom-app-key-class-param", scope = WtcRemoteTuxDomType.class)
    public JAXBElement<String> createWtcRemoteTuxDomTypeCustomAppKeyClassParam(String value) {
        return new JAXBElement<String>(_WtcRemoteTuxDomTypeCustomAppKeyClassParam_QNAME, String.class, WtcRemoteTuxDomType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "max-encrypt-bits", scope = WtcRemoteTuxDomType.class)
    public JAXBElement<String> createWtcRemoteTuxDomTypeMaxEncryptBits(String value) {
        return new JAXBElement<String>(_WtcRemoteTuxDomTypeMaxEncryptBits_QNAME, String.class, WtcRemoteTuxDomType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "app-key", scope = WtcRemoteTuxDomType.class)
    public JAXBElement<String> createWtcRemoteTuxDomTypeAppKey(String value) {
        return new JAXBElement<String>(_WtcRemoteTuxDomTypeAppKey_QNAME, String.class, WtcRemoteTuxDomType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "jndi-name", scope = VirtualDestinationType.class)
    public JAXBElement<String> createVirtualDestinationTypeJndiName(String value) {
        return new JAXBElement<String>(_VirtualDestinationTypeJndiName_QNAME, String.class, VirtualDestinationType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "create-table-ddl-file", scope = GenericJdbcStoreType.class)
    public JAXBElement<String> createGenericJdbcStoreTypeCreateTableDdlFile(String value) {
        return new JAXBElement<String>(_GenericJdbcStoreTypeCreateTableDdlFile_QNAME, String.class, GenericJdbcStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "prefix-name", scope = GenericJdbcStoreType.class)
    public JAXBElement<String> createGenericJdbcStoreTypePrefixName(String value) {
        return new JAXBElement<String>(_GenericJdbcStoreTypePrefixName_QNAME, String.class, GenericJdbcStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "enabled-server", scope = SnmpTrapSourceType.class)
    public JAXBElement<String> createSnmpTrapSourceTypeEnabledServer(String value) {
        return new JAXBElement<String>(_SnmpTrapSourceTypeEnabledServer_QNAME, String.class, SnmpTrapSourceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "persistent-store", scope = PathServiceType.class)
    public JAXBElement<String> createPathServiceTypePersistentStore(String value) {
        return new JAXBElement<String>(_PathServiceTypePersistentStore_QNAME, String.class, PathServiceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "attribute-name", scope = SnmpAttributeChangeType.class)
    public JAXBElement<String> createSnmpAttributeChangeTypeAttributeName(String value) {
        return new JAXBElement<String>(_SnmpAttributeChangeTypeAttributeName_QNAME, String.class, SnmpAttributeChangeType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "attribute-m-bean-type", scope = SnmpAttributeChangeType.class)
    public JAXBElement<String> createSnmpAttributeChangeTypeAttributeMBeanType(String value) {
        return new JAXBElement<String>(_SnmpAttributeChangeTypeAttributeMBeanType_QNAME, String.class, SnmpAttributeChangeType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "attribute-m-bean-name", scope = SnmpAttributeChangeType.class)
    public JAXBElement<String> createSnmpAttributeChangeTypeAttributeMBeanName(String value) {
        return new JAXBElement<String>(_SnmpAttributeChangeTypeAttributeMBeanName_QNAME, String.class, SnmpAttributeChangeType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "connection-pool", scope = JdbcStoreType.class)
    public JAXBElement<String> createJdbcStoreTypeConnectionPool(String value) {
        return new JAXBElement<String>(_JdbcStoreTypeConnectionPool_QNAME, String.class, JdbcStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "logical-name", scope = JdbcStoreType.class)
    public JAXBElement<String> createJdbcStoreTypeLogicalName(String value) {
        return new JAXBElement<String>(_JdbcStoreTypeLogicalName_QNAME, String.class, JdbcStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "target", scope = JdbcStoreType.class)
    public JAXBElement<String> createJdbcStoreTypeTarget(String value) {
        return new JAXBElement<String>(_JdbcStoreTypeTarget_QNAME, String.class, JdbcStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "data-source", scope = JdbcStoreType.class)
    public JAXBElement<String> createJdbcStoreTypeDataSource(String value) {
        return new JAXBElement<String>(_JdbcStoreTypeDataSource_QNAME, String.class, JdbcStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "xa-resource-name", scope = JdbcStoreType.class)
    public JAXBElement<String> createJdbcStoreTypeXaResourceName(String value) {
        return new JAXBElement<String>(_JdbcStoreTypeXaResourceName_QNAME, String.class, JdbcStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "auth-realm-name", scope = WebAppComponentType.class, defaultValue = "weblogic")
    public JAXBElement<String> createWebAppComponentTypeAuthRealmName(String value) {
        return new JAXBElement<String>(_WebAppComponentTypeAuthRealmName_QNAME, String.class, WebAppComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "virtual-host", scope = WebAppComponentType.class)
    public JAXBElement<String> createWebAppComponentTypeVirtualHost(String value) {
        return new JAXBElement<String>(_WebAppComponentTypeVirtualHost_QNAME, String.class, WebAppComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "auth-filter", scope = WebAppComponentType.class)
    public JAXBElement<String> createWebAppComponentTypeAuthFilter(String value) {
        return new JAXBElement<String>(_WebAppComponentTypeAuthFilter_QNAME, String.class, WebAppComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "credential-encrypted", scope = EmbeddedLdapType.class)
    public JAXBElement<String> createEmbeddedLdapTypeCredentialEncrypted(String value) {
        return new JAXBElement<String>(_EmbeddedLdapTypeCredentialEncrypted_QNAME, String.class, EmbeddedLdapType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "descriptor-file-name", scope = SystemResourceType.class)
    public JAXBElement<String> createSystemResourceTypeDescriptorFileName(String value) {
        return new JAXBElement<String>(_SystemResourceTypeDescriptorFileName_QNAME, String.class, SystemResourceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "tmp-path", scope = EjbContainerType.class, defaultValue = "tmp_ejb")
    public JAXBElement<String> createEjbContainerTypeTmpPath(String value) {
        return new JAXBElement<String>(_EjbContainerTypeTmpPath_QNAME, String.class, EjbContainerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "java-compiler", scope = EjbContainerType.class)
    public JAXBElement<String> createEjbContainerTypeJavaCompiler(String value) {
        return new JAXBElement<String>(_EjbContainerTypeJavaCompiler_QNAME, String.class, EjbContainerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "java-compiler-post-class-path", scope = EjbContainerType.class)
    public JAXBElement<String> createEjbContainerTypeJavaCompilerPostClassPath(String value) {
        return new JAXBElement<String>(_EjbContainerTypeJavaCompilerPostClassPath_QNAME, String.class, EjbContainerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "extra-ejbc-options", scope = EjbContainerType.class)
    public JAXBElement<String> createEjbContainerTypeExtraEjbcOptions(String value) {
        return new JAXBElement<String>(_EjbContainerTypeExtraEjbcOptions_QNAME, String.class, EjbContainerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "verbose-ejb-deployment-enabled", scope = EjbContainerType.class, defaultValue = "false")
    public JAXBElement<String> createEjbContainerTypeVerboseEjbDeploymentEnabled(String value) {
        return new JAXBElement<String>(_EjbContainerTypeVerboseEjbDeploymentEnabled_QNAME, String.class, EjbContainerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "java-compiler-pre-class-path", scope = EjbContainerType.class)
    public JAXBElement<String> createEjbContainerTypeJavaCompilerPreClassPath(String value) {
        return new JAXBElement<String>(_EjbContainerTypeJavaCompilerPreClassPath_QNAME, String.class, EjbContainerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "extra-rmic-options", scope = EjbContainerType.class)
    public JAXBElement<String> createEjbContainerTypeExtraRmicOptions(String value) {
        return new JAXBElement<String>(_EjbContainerTypeExtraRmicOptions_QNAME, String.class, EjbContainerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "remote-name", scope = WtcImportType.class)
    public JAXBElement<String> createWtcImportTypeRemoteName(String value) {
        return new JAXBElement<String>(_WtcImportTypeRemoteName_QNAME, String.class, WtcImportType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "compatibility-object-name", scope = ProviderType.class)
    public JAXBElement<String> createProviderTypeCompatibilityObjectName(String value) {
        return new JAXBElement<String>(_RdbmsSecurityStoreTypeCompatibilityObjectName_QNAME, String.class, ProviderType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "name", scope = ProviderType.class, defaultValue = "Provider")
    public JAXBElement<String> createProviderTypeName(String value) {
        return new JAXBElement<String>(_RdbmsSecurityStoreTypeName_QNAME, String.class, ProviderType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "translate-fml", scope = WtcTbridgeRedirectType.class)
    public JAXBElement<String> createWtcTbridgeRedirectTypeTranslateFml(String value) {
        return new JAXBElement<String>(_WtcTbridgeRedirectTypeTranslateFml_QNAME, String.class, WtcTbridgeRedirectType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "meta-data-file", scope = WtcTbridgeRedirectType.class)
    public JAXBElement<String> createWtcTbridgeRedirectTypeMetaDataFile(String value) {
        return new JAXBElement<String>(_WtcTbridgeRedirectTypeMetaDataFile_QNAME, String.class, WtcTbridgeRedirectType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "source-access-point", scope = WtcTbridgeRedirectType.class)
    public JAXBElement<String> createWtcTbridgeRedirectTypeSourceAccessPoint(String value) {
        return new JAXBElement<String>(_WtcTbridgeRedirectTypeSourceAccessPoint_QNAME, String.class, WtcTbridgeRedirectType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "target-qspace", scope = WtcTbridgeRedirectType.class)
    public JAXBElement<String> createWtcTbridgeRedirectTypeTargetQspace(String value) {
        return new JAXBElement<String>(_WtcTbridgeRedirectTypeTargetQspace_QNAME, String.class, WtcTbridgeRedirectType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "target-access-point", scope = WtcTbridgeRedirectType.class)
    public JAXBElement<String> createWtcTbridgeRedirectTypeTargetAccessPoint(String value) {
        return new JAXBElement<String>(_WtcTbridgeRedirectTypeTargetAccessPoint_QNAME, String.class, WtcTbridgeRedirectType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "source-qspace", scope = WtcTbridgeRedirectType.class)
    public JAXBElement<String> createWtcTbridgeRedirectTypeSourceQspace(String value) {
        return new JAXBElement<String>(_WtcTbridgeRedirectTypeSourceQspace_QNAME, String.class, WtcTbridgeRedirectType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "replyq", scope = WtcTbridgeRedirectType.class)
    public JAXBElement<String> createWtcTbridgeRedirectTypeReplyq(String value) {
        return new JAXBElement<String>(_WtcTbridgeRedirectTypeReplyq_QNAME, String.class, WtcTbridgeRedirectType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "contact-person-given-name", scope = SingleSignOnServicesType.class)
    public JAXBElement<String> createSingleSignOnServicesTypeContactPersonGivenName(String value) {
        return new JAXBElement<String>(_SingleSignOnServicesTypeContactPersonGivenName_QNAME, String.class, SingleSignOnServicesType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "published-site-url", scope = SingleSignOnServicesType.class)
    public JAXBElement<String> createSingleSignOnServicesTypePublishedSiteUrl(String value) {
        return new JAXBElement<String>(_SingleSignOnServicesTypePublishedSiteUrl_QNAME, String.class, SingleSignOnServicesType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "contact-person-telephone-number", scope = SingleSignOnServicesType.class)
    public JAXBElement<String> createSingleSignOnServicesTypeContactPersonTelephoneNumber(String value) {
        return new JAXBElement<String>(_SingleSignOnServicesTypeContactPersonTelephoneNumber_QNAME, String.class, SingleSignOnServicesType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "organization-name", scope = SingleSignOnServicesType.class)
    public JAXBElement<String> createSingleSignOnServicesTypeOrganizationName(String value) {
        return new JAXBElement<String>(_SingleSignOnServicesTypeOrganizationName_QNAME, String.class, SingleSignOnServicesType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "organization-url", scope = SingleSignOnServicesType.class)
    public JAXBElement<String> createSingleSignOnServicesTypeOrganizationUrl(String value) {
        return new JAXBElement<String>(_SingleSignOnServicesTypeOrganizationUrl_QNAME, String.class, SingleSignOnServicesType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "entity-id", scope = SingleSignOnServicesType.class)
    public JAXBElement<String> createSingleSignOnServicesTypeEntityId(String value) {
        return new JAXBElement<String>(_SingleSignOnServicesTypeEntityId_QNAME, String.class, SingleSignOnServicesType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "contact-person-type", scope = SingleSignOnServicesType.class)
    public JAXBElement<String> createSingleSignOnServicesTypeContactPersonType(String value) {
        return new JAXBElement<String>(_SingleSignOnServicesTypeContactPersonType_QNAME, String.class, SingleSignOnServicesType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "contact-person-sur-name", scope = SingleSignOnServicesType.class)
    public JAXBElement<String> createSingleSignOnServicesTypeContactPersonSurName(String value) {
        return new JAXBElement<String>(_SingleSignOnServicesTypeContactPersonSurName_QNAME, String.class, SingleSignOnServicesType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "contact-person-company", scope = SingleSignOnServicesType.class)
    public JAXBElement<String> createSingleSignOnServicesTypeContactPersonCompany(String value) {
        return new JAXBElement<String>(_SingleSignOnServicesTypeContactPersonCompany_QNAME, String.class, SingleSignOnServicesType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "login-return-query-parameter", scope = SingleSignOnServicesType.class)
    public JAXBElement<String> createSingleSignOnServicesTypeLoginReturnQueryParameter(String value) {
        return new JAXBElement<String>(_SingleSignOnServicesTypeLoginReturnQueryParameter_QNAME, String.class, SingleSignOnServicesType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "contact-person-email-address", scope = SingleSignOnServicesType.class)
    public JAXBElement<String> createSingleSignOnServicesTypeContactPersonEmailAddress(String value) {
        return new JAXBElement<String>(_SingleSignOnServicesTypeContactPersonEmailAddress_QNAME, String.class, SingleSignOnServicesType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "default-url", scope = SingleSignOnServicesType.class)
    public JAXBElement<String> createSingleSignOnServicesTypeDefaultUrl(String value) {
        return new JAXBElement<String>(_SingleSignOnServicesTypeDefaultUrl_QNAME, String.class, SingleSignOnServicesType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "sso-signing-key-alias", scope = SingleSignOnServicesType.class)
    public JAXBElement<String> createSingleSignOnServicesTypeSsoSigningKeyAlias(String value) {
        return new JAXBElement<String>(_SingleSignOnServicesTypeSsoSigningKeyAlias_QNAME, String.class, SingleSignOnServicesType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "sso-signing-key-pass-phrase-encrypted", scope = SingleSignOnServicesType.class)
    public JAXBElement<String> createSingleSignOnServicesTypeSsoSigningKeyPassPhraseEncrypted(String value) {
        return new JAXBElement<String>(_SingleSignOnServicesTypeSsoSigningKeyPassPhraseEncrypted_QNAME, String.class, SingleSignOnServicesType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "transport-layer-security-key-pass-phrase-encrypted", scope = SingleSignOnServicesType.class)
    public JAXBElement<String> createSingleSignOnServicesTypeTransportLayerSecurityKeyPassPhraseEncrypted(String value) {
        return new JAXBElement<String>(_SingleSignOnServicesTypeTransportLayerSecurityKeyPassPhraseEncrypted_QNAME, String.class, SingleSignOnServicesType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "transport-layer-security-key-alias", scope = SingleSignOnServicesType.class)
    public JAXBElement<String> createSingleSignOnServicesTypeTransportLayerSecurityKeyAlias(String value) {
        return new JAXBElement<String>(_SingleSignOnServicesTypeTransportLayerSecurityKeyAlias_QNAME, String.class, SingleSignOnServicesType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "basic-auth-password-encrypted", scope = SingleSignOnServicesType.class)
    public JAXBElement<String> createSingleSignOnServicesTypeBasicAuthPasswordEncrypted(String value) {
        return new JAXBElement<String>(_SingleSignOnServicesTypeBasicAuthPasswordEncrypted_QNAME, String.class, SingleSignOnServicesType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "error-path", scope = SingleSignOnServicesType.class)
    public JAXBElement<String> createSingleSignOnServicesTypeErrorPath(String value) {
        return new JAXBElement<String>(_SingleSignOnServicesTypeErrorPath_QNAME, String.class, SingleSignOnServicesType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "basic-auth-username", scope = SingleSignOnServicesType.class)
    public JAXBElement<String> createSingleSignOnServicesTypeBasicAuthUsername(String value) {
        return new JAXBElement<String>(_SingleSignOnServicesTypeBasicAuthUsername_QNAME, String.class, SingleSignOnServicesType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "primary-domain", scope = NtRealmType.class)
    public JAXBElement<String> createNtRealmTypePrimaryDomain(String value) {
        return new JAXBElement<String>(_NtRealmTypePrimaryDomain_QNAME, String.class, NtRealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "virtual-host", scope = WebDeploymentType.class)
    public JAXBElement<String> createWebDeploymentTypeVirtualHost(String value) {
        return new JAXBElement<String>(_WebAppComponentTypeVirtualHost_QNAME, String.class, WebDeploymentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "basic-realm", scope = CachingRealmType.class)
    public JAXBElement<String> createCachingRealmTypeBasicRealm(String value) {
        return new JAXBElement<String>(_CachingRealmTypeBasicRealm_QNAME, String.class, CachingRealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "server-key-file-name", scope = SslType.class, defaultValue = "server-key.der")
    public JAXBElement<String> createSslTypeServerKeyFileName(String value) {
        return new JAXBElement<String>(_SslTypeServerKeyFileName_QNAME, String.class, SslType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "server-certificate-file-name", scope = SslType.class, defaultValue = "server-cert.der")
    public JAXBElement<String> createSslTypeServerCertificateFileName(String value) {
        return new JAXBElement<String>(_SslTypeServerCertificateFileName_QNAME, String.class, SslType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "server-private-key-pass-phrase-encrypted", scope = SslType.class)
    public JAXBElement<String> createSslTypeServerPrivateKeyPassPhraseEncrypted(String value) {
        return new JAXBElement<String>(_SslTypeServerPrivateKeyPassPhraseEncrypted_QNAME, String.class, SslType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "identity-and-trust-locations", scope = SslType.class)
    public JAXBElement<String> createSslTypeIdentityAndTrustLocations(String value) {
        return new JAXBElement<String>(_SslTypeIdentityAndTrustLocations_QNAME, String.class, SslType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "server-private-key-alias", scope = SslType.class)
    public JAXBElement<String> createSslTypeServerPrivateKeyAlias(String value) {
        return new JAXBElement<String>(_SslTypeServerPrivateKeyAlias_QNAME, String.class, SslType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "cert-authenticator", scope = SslType.class)
    public JAXBElement<String> createSslTypeCertAuthenticator(String value) {
        return new JAXBElement<String>(_SslTypeCertAuthenticator_QNAME, String.class, SslType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "trusted-ca-file-name", scope = SslType.class, defaultValue = "trusted-ca.pem")
    public JAXBElement<String> createSslTypeTrustedCaFileName(String value) {
        return new JAXBElement<String>(_SslTypeTrustedCaFileName_QNAME, String.class, SslType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "outbound-certificate-validation", scope = SslType.class)
    public JAXBElement<String> createSslTypeOutboundCertificateValidation(String value) {
        return new JAXBElement<String>(_SslTypeOutboundCertificateValidation_QNAME, String.class, SslType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "hostname-verifier", scope = SslType.class)
    public JAXBElement<String> createSslTypeHostnameVerifier(String value) {
        return new JAXBElement<String>(_SslTypeHostnameVerifier_QNAME, String.class, SslType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "inbound-certificate-validation", scope = SslType.class)
    public JAXBElement<String> createSslTypeInboundCertificateValidation(String value) {
        return new JAXBElement<String>(_SslTypeInboundCertificateValidation_QNAME, String.class, SslType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "server-certificate-chain-file-name", scope = SslType.class, defaultValue = "server-certchain.pem")
    public JAXBElement<String> createSslTypeServerCertificateChainFileName(String value) {
        return new JAXBElement<String>(_SslTypeServerCertificateChainFileName_QNAME, String.class, SslType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "default-wide-char-codeset", scope = IiopType.class)
    public JAXBElement<String> createIiopTypeDefaultWideCharCodeset(String value) {
        return new JAXBElement<String>(_IiopTypeDefaultWideCharCodeset_QNAME, String.class, IiopType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "system-security", scope = IiopType.class)
    public JAXBElement<String> createIiopTypeSystemSecurity(String value) {
        return new JAXBElement<String>(_IiopTypeSystemSecurity_QNAME, String.class, IiopType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "tx-mechanism", scope = IiopType.class)
    public JAXBElement<String> createIiopTypeTxMechanism(String value) {
        return new JAXBElement<String>(_IiopTypeTxMechanism_QNAME, String.class, IiopType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "location-forward-policy", scope = IiopType.class)
    public JAXBElement<String> createIiopTypeLocationForwardPolicy(String value) {
        return new JAXBElement<String>(_IiopTypeLocationForwardPolicy_QNAME, String.class, IiopType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "default-char-codeset", scope = IiopType.class)
    public JAXBElement<String> createIiopTypeDefaultCharCodeset(String value) {
        return new JAXBElement<String>(_IiopTypeDefaultCharCodeset_QNAME, String.class, IiopType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "log-file-format", scope = WebServerLogType.class)
    public JAXBElement<String> createWebServerLogTypeLogFileFormat(String value) {
        return new JAXBElement<String>(_WebServerLogTypeLogFileFormat_QNAME, String.class, WebServerLogType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "elf-fields", scope = WebServerLogType.class, defaultValue = "date time cs-method cs-uri sc-status")
    public JAXBElement<String> createWebServerLogTypeElfFields(String value) {
        return new JAXBElement<String>(_WebServerLogTypeElfFields_QNAME, String.class, WebServerLogType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "classname", scope = MigratableRmiServiceType.class)
    public JAXBElement<String> createMigratableRmiServiceTypeClassname(String value) {
        return new JAXBElement<String>(_MigratableRmiServiceTypeClassname_QNAME, String.class, MigratableRmiServiceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "argument", scope = MigratableRmiServiceType.class)
    public JAXBElement<String> createMigratableRmiServiceTypeArgument(String value) {
        return new JAXBElement<String>(_MigratableRmiServiceTypeArgument_QNAME, String.class, MigratableRmiServiceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "logical-name", scope = PersistentStoreType.class)
    public JAXBElement<String> createPersistentStoreTypeLogicalName(String value) {
        return new JAXBElement<String>(_JdbcStoreTypeLogicalName_QNAME, String.class, PersistentStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "xa-resource-name", scope = PersistentStoreType.class)
    public JAXBElement<String> createPersistentStoreTypeXaResourceName(String value) {
        return new JAXBElement<String>(_JdbcStoreTypeXaResourceName_QNAME, String.class, PersistentStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "concurrency", scope = CacheTransactionType.class)
    public JAXBElement<String> createCacheTransactionTypeConcurrency(String value) {
        return new JAXBElement<String>(_CacheTransactionTypeConcurrency_QNAME, String.class, CacheTransactionType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "isolation-level", scope = CacheTransactionType.class)
    public JAXBElement<String> createCacheTransactionTypeIsolationLevel(String value) {
        return new JAXBElement<String>(_CacheTransactionTypeIsolationLevel_QNAME, String.class, CacheTransactionType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "custom-cluster-configuration-file-name", scope = CoherenceClusterSystemResourceType.class)
    public JAXBElement<String> createCoherenceClusterSystemResourceTypeCustomClusterConfigurationFileName(String value) {
        return new JAXBElement<String>(_CoherenceClusterSystemResourceTypeCustomClusterConfigurationFileName_QNAME, String.class, CoherenceClusterSystemResourceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "user-name", scope = ContextCaseType.class)
    public JAXBElement<String> createContextCaseTypeUserName(String value) {
        return new JAXBElement<String>(_ContextCaseTypeUserName_QNAME, String.class, ContextCaseType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "group-name", scope = ContextCaseType.class)
    public JAXBElement<String> createContextCaseTypeGroupName(String value) {
        return new JAXBElement<String>(_ContextCaseTypeGroupName_QNAME, String.class, ContextCaseType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "request-class-name", scope = ContextCaseType.class)
    public JAXBElement<String> createContextCaseTypeRequestClassName(String value) {
        return new JAXBElement<String>(_ContextCaseTypeRequestClassName_QNAME, String.class, ContextCaseType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "post-bind-gid", scope = UnixMachineType.class, defaultValue = "nobody")
    public JAXBElement<String> createUnixMachineTypePostBindGid(String value) {
        return new JAXBElement<String>(_UnixMachineTypePostBindGid_QNAME, String.class, UnixMachineType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "post-bind-uid", scope = UnixMachineType.class, defaultValue = "nobody")
    public JAXBElement<String> createUnixMachineTypePostBindUid(String value) {
        return new JAXBElement<String>(_UnixMachineTypePostBindUid_QNAME, String.class, UnixMachineType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "temporary-template-name", scope = JmsServerType.class)
    public JAXBElement<String> createJmsServerTypeTemporaryTemplateName(String value) {
        return new JAXBElement<String>(_JmsServerTypeTemporaryTemplateName_QNAME, String.class, JmsServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "insertion-paused-at-startup", scope = JmsServerType.class, defaultValue = "default")
    public JAXBElement<String> createJmsServerTypeInsertionPausedAtStartup(String value) {
        return new JAXBElement<String>(_JmsServerTypeInsertionPausedAtStartup_QNAME, String.class, JmsServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "persistent-store", scope = JmsServerType.class)
    public JAXBElement<String> createJmsServerTypePersistentStore(String value) {
        return new JAXBElement<String>(_PathServiceTypePersistentStore_QNAME, String.class, JmsServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "paging-directory", scope = JmsServerType.class)
    public JAXBElement<String> createJmsServerTypePagingDirectory(String value) {
        return new JAXBElement<String>(_JmsServerTypePagingDirectory_QNAME, String.class, JmsServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "temporary-template-resource", scope = JmsServerType.class)
    public JAXBElement<String> createJmsServerTypeTemporaryTemplateResource(String value) {
        return new JAXBElement<String>(_JmsServerTypeTemporaryTemplateResource_QNAME, String.class, JmsServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "consumption-paused-at-startup", scope = JmsServerType.class, defaultValue = "default")
    public JAXBElement<String> createJmsServerTypeConsumptionPausedAtStartup(String value) {
        return new JAXBElement<String>(_JmsServerTypeConsumptionPausedAtStartup_QNAME, String.class, JmsServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link JmsMessageLogFileType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "jms-message-log-file", scope = JmsServerType.class)
    public JAXBElement<JmsMessageLogFileType> createJmsServerTypeJmsMessageLogFile(JmsMessageLogFileType value) {
        return new JAXBElement<JmsMessageLogFileType>(_JmsServerTypeJmsMessageLogFile_QNAME, JmsMessageLogFileType.class, JmsServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "blocking-send-policy", scope = JmsServerType.class)
    public JAXBElement<String> createJmsServerTypeBlockingSendPolicy(String value) {
        return new JAXBElement<String>(_JmsServerTypeBlockingSendPolicy_QNAME, String.class, JmsServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "production-paused-at-startup", scope = JmsServerType.class, defaultValue = "default")
    public JAXBElement<String> createJmsServerTypeProductionPausedAtStartup(String value) {
        return new JAXBElement<String>(_JmsServerTypeProductionPausedAtStartup_QNAME, String.class, JmsServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "compatibility-preference", scope = WebserviceSecurityType.class)
    public JAXBElement<String> createWebserviceSecurityTypeCompatibilityPreference(String value) {
        return new JAXBElement<String>(_WebserviceSecurityTypeCompatibilityPreference_QNAME, String.class, WebserviceSecurityType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "default-credential-provider-stsuri", scope = WebserviceSecurityType.class)
    public JAXBElement<String> createWebserviceSecurityTypeDefaultCredentialProviderStsuri(String value) {
        return new JAXBElement<String>(_WebserviceSecurityTypeDefaultCredentialProviderStsuri_QNAME, String.class, WebserviceSecurityType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "policy-selection-preference", scope = WebserviceSecurityType.class)
    public JAXBElement<String> createWebserviceSecurityTypePolicySelectionPreference(String value) {
        return new JAXBElement<String>(_WebserviceSecurityTypePolicySelectionPreference_QNAME, String.class, WebserviceSecurityType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WebserviceTimestampType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "webservice-timestamp", scope = WebserviceSecurityType.class)
    public JAXBElement<WebserviceTimestampType> createWebserviceSecurityTypeWebserviceTimestamp(WebserviceTimestampType value) {
        return new JAXBElement<WebserviceTimestampType>(_WebserviceSecurityTypeWebserviceTimestamp_QNAME, WebserviceTimestampType.class, WebserviceSecurityType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "compatibility-ordering-preference", scope = WebserviceSecurityType.class)
    public JAXBElement<String> createWebserviceSecurityTypeCompatibilityOrderingPreference(String value) {
        return new JAXBElement<String>(_WebserviceSecurityTypeCompatibilityOrderingPreference_QNAME, String.class, WebserviceSecurityType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "oid-root", scope = SnmpProxyType.class)
    public JAXBElement<String> createSnmpProxyTypeOidRoot(String value) {
        return new JAXBElement<String>(_SnmpProxyTypeOidRoot_QNAME, String.class, SnmpProxyType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "community", scope = SnmpProxyType.class, defaultValue = "public")
    public JAXBElement<String> createSnmpProxyTypeCommunity(String value) {
        return new JAXBElement<String>(_SnmpProxyTypeCommunity_QNAME, String.class, SnmpProxyType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "security-name", scope = SnmpProxyType.class)
    public JAXBElement<String> createSnmpProxyTypeSecurityName(String value) {
        return new JAXBElement<String>(_SnmpProxyTypeSecurityName_QNAME, String.class, SnmpProxyType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "jms-server", scope = WsReliableDeliveryPolicyType.class)
    public JAXBElement<String> createWsReliableDeliveryPolicyTypeJmsServer(String value) {
        return new JAXBElement<String>(_WsReliableDeliveryPolicyTypeJmsServer_QNAME, String.class, WsReliableDeliveryPolicyType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "descriptor-file-name", scope = ConfigurationExtensionType.class)
    public JAXBElement<String> createConfigurationExtensionTypeDescriptorFileName(String value) {
        return new JAXBElement<String>(_SystemResourceTypeDescriptorFileName_QNAME, String.class, ConfigurationExtensionType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "default-jpa-provider", scope = JpaType.class)
    public JAXBElement<String> createJpaTypeDefaultJpaProvider(String value) {
        return new JAXBElement<String>(_JpaTypeDefaultJpaProvider_QNAME, String.class, JpaType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "authentication-mechanisms", scope = ConnectorComponentType.class)
    public JAXBElement<String> createConnectorComponentTypeAuthenticationMechanisms(String value) {
        return new JAXBElement<String>(_ConnectorComponentTypeAuthenticationMechanisms_QNAME, String.class, ConnectorComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "context-request-class", scope = WorkManagerType.class)
    public JAXBElement<String> createWorkManagerTypeContextRequestClass(String value) {
        return new JAXBElement<String>(_WorkManagerTypeContextRequestClass_QNAME, String.class, WorkManagerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "min-threads-constraint", scope = WorkManagerType.class)
    public JAXBElement<String> createWorkManagerTypeMinThreadsConstraint(String value) {
        return new JAXBElement<String>(_WorkManagerTypeMinThreadsConstraint_QNAME, String.class, WorkManagerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "max-threads-constraint", scope = WorkManagerType.class)
    public JAXBElement<String> createWorkManagerTypeMaxThreadsConstraint(String value) {
        return new JAXBElement<String>(_WorkManagerTypeMaxThreadsConstraint_QNAME, String.class, WorkManagerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "fair-share-request-class", scope = WorkManagerType.class)
    public JAXBElement<String> createWorkManagerTypeFairShareRequestClass(String value) {
        return new JAXBElement<String>(_WorkManagerTypeFairShareRequestClass_QNAME, String.class, WorkManagerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "capacity", scope = WorkManagerType.class)
    public JAXBElement<String> createWorkManagerTypeCapacity(String value) {
        return new JAXBElement<String>(_WorkManagerTypeCapacity_QNAME, String.class, WorkManagerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WorkManagerShutdownTriggerType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "work-manager-shutdown-trigger", scope = WorkManagerType.class)
    public JAXBElement<WorkManagerShutdownTriggerType> createWorkManagerTypeWorkManagerShutdownTrigger(WorkManagerShutdownTriggerType value) {
        return new JAXBElement<WorkManagerShutdownTriggerType>(_WorkManagerTypeWorkManagerShutdownTrigger_QNAME, WorkManagerShutdownTriggerType.class, WorkManagerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "response-time-request-class", scope = WorkManagerType.class)
    public JAXBElement<String> createWorkManagerTypeResponseTimeRequestClass(String value) {
        return new JAXBElement<String>(_WorkManagerTypeResponseTimeRequestClass_QNAME, String.class, WorkManagerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "properties", scope = BridgeDestinationType.class)
    public JAXBElement<String> createBridgeDestinationTypeProperties(String value) {
        return new JAXBElement<String>(_MailSessionTypeProperties_QNAME, String.class, BridgeDestinationType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "connection-pool-name", scope = MaxThreadsConstraintType.class)
    public JAXBElement<String> createMaxThreadsConstraintTypeConnectionPoolName(String value) {
        return new JAXBElement<String>(_MaxThreadsConstraintTypeConnectionPoolName_QNAME, String.class, MaxThreadsConstraintType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "work-manager-name", scope = StuckThreadActionType.class)
    public JAXBElement<String> createStuckThreadActionTypeWorkManagerName(String value) {
        return new JAXBElement<String>(_StuckThreadActionTypeWorkManagerName_QNAME, String.class, StuckThreadActionType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "application-name", scope = StuckThreadActionType.class)
    public JAXBElement<String> createStuckThreadActionTypeApplicationName(String value) {
        return new JAXBElement<String>(_StuckThreadActionTypeApplicationName_QNAME, String.class, StuckThreadActionType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "module-name", scope = StuckThreadActionType.class)
    public JAXBElement<String> createStuckThreadActionTypeModuleName(String value) {
        return new JAXBElement<String>(_StuckThreadActionTypeModuleName_QNAME, String.class, StuckThreadActionType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "action-code", scope = StuckThreadActionType.class)
    public JAXBElement<String> createStuckThreadActionTypeActionCode(String value) {
        return new JAXBElement<String>(_StuckThreadActionTypeActionCode_QNAME, String.class, StuckThreadActionType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "xml-registry", scope = ServerType.class)
    public JAXBElement<String> createServerTypeXmlRegistry(String value) {
        return new JAXBElement<String>(_ServerTypeXmlRegistry_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "default-tgiop-password-encrypted", scope = ServerType.class)
    public JAXBElement<String> createServerTypeDefaultTgiopPasswordEncrypted(String value) {
        return new JAXBElement<String>(_ServerTypeDefaultTgiopPasswordEncrypted_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "coherence-cluster-system-resource", scope = ServerType.class)
    public JAXBElement<String> createServerTypeCoherenceClusterSystemResource(String value) {
        return new JAXBElement<String>(_ServerTypeCoherenceClusterSystemResource_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "extra-rmic-options", scope = ServerType.class)
    public JAXBElement<String> createServerTypeExtraRmicOptions(String value) {
        return new JAXBElement<String>(_EjbContainerTypeExtraRmicOptions_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "startup-mode", scope = ServerType.class, defaultValue = "RUNNING")
    public JAXBElement<String> createServerTypeStartupMode(String value) {
        return new JAXBElement<String>(_ServerTypeStartupMode_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "listen-address", scope = ServerType.class)
    public JAXBElement<String> createServerTypeListenAddress(String value) {
        return new JAXBElement<String>(_ServerTypeListenAddress_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ServerStartType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "server-start", scope = ServerType.class)
    public JAXBElement<ServerStartType> createServerTypeServerStart(ServerStartType value) {
        return new JAXBElement<ServerStartType>(_ServerTypeServerStart_QNAME, ServerStartType.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "java-standard-trust-key-store-pass-phrase-encrypted", scope = ServerType.class)
    public JAXBElement<String> createServerTypeJavaStandardTrustKeyStorePassPhraseEncrypted(String value) {
        return new JAXBElement<String>(_ServerTypeJavaStandardTrustKeyStorePassPhraseEncrypted_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "default-iiop-password-encrypted", scope = ServerType.class)
    public JAXBElement<String> createServerTypeDefaultIiopPasswordEncrypted(String value) {
        return new JAXBElement<String>(_ServerTypeDefaultIiopPasswordEncrypted_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "java-compiler-pre-class-path", scope = ServerType.class)
    public JAXBElement<String> createServerTypeJavaCompilerPreClassPath(String value) {
        return new JAXBElement<String>(_EjbContainerTypeJavaCompilerPreClassPath_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "custom-identity-key-store-pass-phrase-encrypted", scope = ServerType.class)
    public JAXBElement<String> createServerTypeCustomIdentityKeyStorePassPhraseEncrypted(String value) {
        return new JAXBElement<String>(_ServerTypeCustomIdentityKeyStorePassPhraseEncrypted_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "extra-ejbc-options", scope = ServerType.class)
    public JAXBElement<String> createServerTypeExtraEjbcOptions(String value) {
        return new JAXBElement<String>(_EjbContainerTypeExtraEjbcOptions_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link JtaMigratableTargetType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "jta-migratable-target", scope = ServerType.class)
    public JAXBElement<JtaMigratableTargetType> createServerTypeJtaMigratableTarget(JtaMigratableTargetType value) {
        return new JAXBElement<JtaMigratableTargetType>(_ServerTypeJtaMigratableTarget_QNAME, JtaMigratableTargetType.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "reliable-delivery-policy", scope = ServerType.class)
    public JAXBElement<String> createServerTypeReliableDeliveryPolicy(String value) {
        return new JAXBElement<String>(_ServerTypeReliableDeliveryPolicy_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "iiop-connection-pools", scope = ServerType.class)
    public JAXBElement<String> createServerTypeIiopConnectionPools(String value) {
        return new JAXBElement<String>(_ServerTypeIiopConnectionPools_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "server-version", scope = ServerType.class, defaultValue = "unknown")
    public JAXBElement<String> createServerTypeServerVersion(String value) {
        return new JAXBElement<String>(_ServerTypeServerVersion_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "upload-directory-name", scope = ServerType.class)
    public JAXBElement<String> createServerTypeUploadDirectoryName(String value) {
        return new JAXBElement<String>(_ServerTypeUploadDirectoryName_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ComType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "com", scope = ServerType.class)
    public JAXBElement<ComType> createServerTypeCom(ComType value) {
        return new JAXBElement<ComType>(_ServerTypeCom_QNAME, ComType.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "cluster", scope = ServerType.class)
    public JAXBElement<String> createServerTypeCluster(String value) {
        return new JAXBElement<String>(_ServerTypeCluster_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "key-stores", scope = ServerType.class)
    public JAXBElement<String> createServerTypeKeyStores(String value) {
        return new JAXBElement<String>(_ServerTypeKeyStores_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WebServerType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "web-server", scope = ServerType.class)
    public JAXBElement<WebServerType> createServerTypeWebServer(WebServerType value) {
        return new JAXBElement<WebServerType>(_ServerTypeWebServer_QNAME, WebServerType.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "external-dns-name", scope = ServerType.class)
    public JAXBElement<String> createServerTypeExternalDnsName(String value) {
        return new JAXBElement<String>(_ServerTypeExternalDnsName_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "jdbcllr-table-name", scope = ServerType.class)
    public JAXBElement<String> createServerTypeJdbcllrTableName(String value) {
        return new JAXBElement<String>(_ServerTypeJdbcllrTableName_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "auto-jdbc-connection-close", scope = ServerType.class, defaultValue = "false")
    public JAXBElement<String> createServerTypeAutoJdbcConnectionClose(String value) {
        return new JAXBElement<String>(_ServerTypeAutoJdbcConnectionClose_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "machine", scope = ServerType.class)
    public JAXBElement<String> createServerTypeMachine(String value) {
        return new JAXBElement<String>(_ServerTypeMachine_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "preferred-secondary-group", scope = ServerType.class)
    public JAXBElement<String> createServerTypePreferredSecondaryGroup(String value) {
        return new JAXBElement<String>(_ServerTypePreferredSecondaryGroup_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "java-compiler", scope = ServerType.class, defaultValue = "javac")
    public JAXBElement<String> createServerTypeJavaCompiler(String value) {
        return new JAXBElement<String>(_EjbContainerTypeJavaCompiler_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "java-compiler-post-class-path", scope = ServerType.class)
    public JAXBElement<String> createServerTypeJavaCompilerPostClassPath(String value) {
        return new JAXBElement<String>(_EjbContainerTypeJavaCompilerPostClassPath_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "staging-mode", scope = ServerType.class)
    public JAXBElement<String> createServerTypeStagingMode(String value) {
        return new JAXBElement<String>(_ServerTypeStagingMode_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "custom-trust-key-store-pass-phrase-encrypted", scope = ServerType.class)
    public JAXBElement<String> createServerTypeCustomTrustKeyStorePassPhraseEncrypted(String value) {
        return new JAXBElement<String>(_ServerTypeCustomTrustKeyStorePassPhraseEncrypted_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "staging-directory-name", scope = ServerType.class)
    public JAXBElement<String> createServerTypeStagingDirectoryName(String value) {
        return new JAXBElement<String>(_ServerTypeStagingDirectoryName_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SingleSignOnServicesType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "single-sign-on-services", scope = ServerType.class)
    public JAXBElement<SingleSignOnServicesType> createServerTypeSingleSignOnServices(SingleSignOnServicesType value) {
        return new JAXBElement<SingleSignOnServicesType>(_ServerTypeSingleSignOnServices_QNAME, SingleSignOnServicesType.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WldfServerDiagnosticType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "server-diagnostic-config", scope = ServerType.class)
    public JAXBElement<WldfServerDiagnosticType> createServerTypeServerDiagnosticConfig(WldfServerDiagnosticType value) {
        return new JAXBElement<WldfServerDiagnosticType>(_ServerTypeServerDiagnosticConfig_QNAME, WldfServerDiagnosticType.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OverloadProtectionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "overload-protection", scope = ServerType.class)
    public JAXBElement<OverloadProtectionType> createServerTypeOverloadProtection(OverloadProtectionType value) {
        return new JAXBElement<OverloadProtectionType>(_ServerTypeOverloadProtection_QNAME, OverloadProtectionType.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FederationServicesType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "federation-services", scope = ServerType.class)
    public JAXBElement<FederationServicesType> createServerTypeFederationServices(FederationServicesType value) {
        return new JAXBElement<FederationServicesType>(_ServerTypeFederationServices_QNAME, FederationServicesType.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WebServiceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "web-service", scope = ServerType.class)
    public JAXBElement<WebServiceType> createServerTypeWebService(WebServiceType value) {
        return new JAXBElement<WebServiceType>(_ServerTypeWebService_QNAME, WebServiceType.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ServerDebugType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "server-debug", scope = ServerType.class)
    public JAXBElement<ServerDebugType> createServerTypeServerDebug(ServerDebugType value) {
        return new JAXBElement<ServerDebugType>(_ServerTypeServerDebug_QNAME, ServerDebugType.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "transaction-log-file-prefix", scope = ServerType.class, defaultValue = "./")
    public JAXBElement<String> createServerTypeTransactionLogFilePrefix(String value) {
        return new JAXBElement<String>(_ServerTypeTransactionLogFilePrefix_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "xml-entity-cache", scope = ServerType.class)
    public JAXBElement<String> createServerTypeXmlEntityCache(String value) {
        return new JAXBElement<String>(_ServerTypeXmlEntityCache_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "custom-identity-key-store-file-name", scope = ServerType.class)
    public JAXBElement<String> createServerTypeCustomIdentityKeyStoreFileName(String value) {
        return new JAXBElement<String>(_ServerTypeCustomIdentityKeyStoreFileName_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "replication-group", scope = ServerType.class)
    public JAXBElement<String> createServerTypeReplicationGroup(String value) {
        return new JAXBElement<String>(_ServerTypeReplicationGroup_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "verbose-ejb-deployment-enabled", scope = ServerType.class, defaultValue = "false")
    public JAXBElement<String> createServerTypeVerboseEjbDeploymentEnabled(String value) {
        return new JAXBElement<String>(_EjbContainerTypeVerboseEjbDeploymentEnabled_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "custom-identity-key-store-type", scope = ServerType.class)
    public JAXBElement<String> createServerTypeCustomIdentityKeyStoreType(String value) {
        return new JAXBElement<String>(_ServerTypeCustomIdentityKeyStoreType_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "default-iiop-user", scope = ServerType.class)
    public JAXBElement<String> createServerTypeDefaultIiopUser(String value) {
        return new JAXBElement<String>(_ServerTypeDefaultIiopUser_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "custom-trust-key-store-type", scope = ServerType.class)
    public JAXBElement<String> createServerTypeCustomTrustKeyStoreType(String value) {
        return new JAXBElement<String>(_ServerTypeCustomTrustKeyStoreType_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "interface-address", scope = ServerType.class)
    public JAXBElement<String> createServerTypeInterfaceAddress(String value) {
        return new JAXBElement<String>(_ServerTypeInterfaceAddress_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "system-password-encrypted", scope = ServerType.class)
    public JAXBElement<String> createServerTypeSystemPasswordEncrypted(String value) {
        return new JAXBElement<String>(_ServerTypeSystemPasswordEncrypted_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "custom-trust-key-store-file-name", scope = ServerType.class)
    public JAXBElement<String> createServerTypeCustomTrustKeyStoreFileName(String value) {
        return new JAXBElement<String>(_ServerTypeCustomTrustKeyStoreFileName_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "default-tgiop-user", scope = ServerType.class, defaultValue = "guest")
    public JAXBElement<String> createServerTypeDefaultTgiopUser(String value) {
        return new JAXBElement<String>(_ServerTypeDefaultTgiopUser_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DefaultFileStoreType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "default-file-store", scope = ServerType.class)
    public JAXBElement<DefaultFileStoreType> createServerTypeDefaultFileStore(DefaultFileStoreType value) {
        return new JAXBElement<DefaultFileStoreType>(_ServerTypeDefaultFileStore_QNAME, DefaultFileStoreType.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "candidate-machine", scope = ServerType.class)
    public JAXBElement<String> createServerTypeCandidateMachine(String value) {
        return new JAXBElement<String>(_ServerTypeCandidateMachine_QNAME, String.class, ServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "security-interop-mode", scope = JtaType.class)
    public JAXBElement<String> createJtaTypeSecurityInteropMode(String value) {
        return new JAXBElement<String>(_JtaTypeSecurityInteropMode_QNAME, String.class, JtaType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "wsat-transport-security-mode", scope = JtaType.class)
    public JAXBElement<String> createJtaTypeWsatTransportSecurityMode(String value) {
        return new JAXBElement<String>(_JtaTypeWsatTransportSecurityMode_QNAME, String.class, JtaType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "parallel-xa-dispatch-policy", scope = JtaType.class)
    public JAXBElement<String> createJtaTypeParallelXaDispatchPolicy(String value) {
        return new JAXBElement<String>(_JtaTypeParallelXaDispatchPolicy_QNAME, String.class, JtaType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WtcResourcesType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "wtc-resources", scope = WtcServerType.class)
    public JAXBElement<WtcResourcesType> createWtcServerTypeWtcResources(WtcResourcesType value) {
        return new JAXBElement<WtcResourcesType>(_WtcServerTypeWtcResources_QNAME, WtcResourcesType.class, WtcServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WtcTbridgeGlobalType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "wtc-tbridge-global", scope = WtcServerType.class)
    public JAXBElement<WtcTbridgeGlobalType> createWtcServerTypeWtcTbridgeGlobal(WtcTbridgeGlobalType value) {
        return new JAXBElement<WtcTbridgeGlobalType>(_WtcServerTypeWtcTbridgeGlobal_QNAME, WtcTbridgeGlobalType.class, WtcServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "realm-boot-strap-version", scope = SecurityConfigurationType.class)
    public JAXBElement<String> createSecurityConfigurationTypeRealmBootStrapVersion(String value) {
        return new JAXBElement<String>(_SecurityConfigurationTypeRealmBootStrapVersion_QNAME, String.class, SecurityConfigurationType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "web-app-files-case-insensitive", scope = SecurityConfigurationType.class)
    public JAXBElement<String> createSecurityConfigurationTypeWebAppFilesCaseInsensitive(String value) {
        return new JAXBElement<String>(_SecurityConfigurationTypeWebAppFilesCaseInsensitive_QNAME, String.class, SecurityConfigurationType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "connection-filter", scope = SecurityConfigurationType.class)
    public JAXBElement<String> createSecurityConfigurationTypeConnectionFilter(String value) {
        return new JAXBElement<String>(_SecurityConfigurationTypeConnectionFilter_QNAME, String.class, SecurityConfigurationType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "default-realm", scope = SecurityConfigurationType.class)
    public JAXBElement<String> createSecurityConfigurationTypeDefaultRealm(String value) {
        return new JAXBElement<String>(_SecurityConfigurationTypeDefaultRealm_QNAME, String.class, SecurityConfigurationType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "credential-encrypted", scope = SecurityConfigurationType.class)
    public JAXBElement<String> createSecurityConfigurationTypeCredentialEncrypted(String value) {
        return new JAXBElement<String>(_EmbeddedLdapTypeCredentialEncrypted_QNAME, String.class, SecurityConfigurationType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "node-manager-password-encrypted", scope = SecurityConfigurationType.class)
    public JAXBElement<String> createSecurityConfigurationTypeNodeManagerPasswordEncrypted(String value) {
        return new JAXBElement<String>(_SecurityConfigurationTypeNodeManagerPasswordEncrypted_QNAME, String.class, SecurityConfigurationType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "node-manager-username", scope = SecurityConfigurationType.class)
    public JAXBElement<String> createSecurityConfigurationTypeNodeManagerUsername(String value) {
        return new JAXBElement<String>(_SecurityConfigurationTypeNodeManagerUsername_QNAME, String.class, SecurityConfigurationType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "default-realm-internal", scope = SecurityConfigurationType.class)
    public JAXBElement<String> createSecurityConfigurationTypeDefaultRealmInternal(String value) {
        return new JAXBElement<String>(_SecurityConfigurationTypeDefaultRealmInternal_QNAME, String.class, SecurityConfigurationType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "severity-level", scope = SnmpLogFilterType.class, defaultValue = "Notice")
    public JAXBElement<String> createSnmpLogFilterTypeSeverityLevel(String value) {
        return new JAXBElement<String>(_SnmpLogFilterTypeSeverityLevel_QNAME, String.class, SnmpLogFilterType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "message-substring", scope = SnmpLogFilterType.class)
    public JAXBElement<String> createSnmpLogFilterTypeMessageSubstring(String value) {
        return new JAXBElement<String>(_SnmpLogFilterTypeMessageSubstring_QNAME, String.class, SnmpLogFilterType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "nt-auth-host", scope = ComType.class)
    public JAXBElement<String> createComTypeNtAuthHost(String value) {
        return new JAXBElement<String>(_ComTypeNtAuthHost_QNAME, String.class, ComType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "plan-path", scope = AppDeploymentType.class)
    public JAXBElement<String> createAppDeploymentTypePlanPath(String value) {
        return new JAXBElement<String>(_AppDeploymentTypePlanPath_QNAME, String.class, AppDeploymentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "plan-dir", scope = AppDeploymentType.class)
    public JAXBElement<String> createAppDeploymentTypePlanDir(String value) {
        return new JAXBElement<String>(_AppDeploymentTypePlanDir_QNAME, String.class, AppDeploymentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "security-dd-model", scope = AppDeploymentType.class)
    public JAXBElement<String> createAppDeploymentTypeSecurityDdModel(String value) {
        return new JAXBElement<String>(_AppDeploymentTypeSecurityDdModel_QNAME, String.class, AppDeploymentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "application-identifier", scope = AppDeploymentType.class)
    public JAXBElement<String> createAppDeploymentTypeApplicationIdentifier(String value) {
        return new JAXBElement<String>(_AppDeploymentTypeApplicationIdentifier_QNAME, String.class, AppDeploymentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "application-name", scope = AppDeploymentType.class)
    public JAXBElement<String> createAppDeploymentTypeApplicationName(String value) {
        return new JAXBElement<String>(_StuckThreadActionTypeApplicationName_QNAME, String.class, AppDeploymentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "staging-mode", scope = AppDeploymentType.class)
    public JAXBElement<String> createAppDeploymentTypeStagingMode(String value) {
        return new JAXBElement<String>(_ServerTypeStagingMode_QNAME, String.class, AppDeploymentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "version-identifier", scope = AppDeploymentType.class)
    public JAXBElement<String> createAppDeploymentTypeVersionIdentifier(String value) {
        return new JAXBElement<String>(_AppDeploymentTypeVersionIdentifier_QNAME, String.class, AppDeploymentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "alt-wls-descriptor-path", scope = AppDeploymentType.class)
    public JAXBElement<String> createAppDeploymentTypeAltWlsDescriptorPath(String value) {
        return new JAXBElement<String>(_AppDeploymentTypeAltWlsDescriptorPath_QNAME, String.class, AppDeploymentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "alt-descriptor-path", scope = AppDeploymentType.class)
    public JAXBElement<String> createAppDeploymentTypeAltDescriptorPath(String value) {
        return new JAXBElement<String>(_AppDeploymentTypeAltDescriptorPath_QNAME, String.class, AppDeploymentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "install-dir", scope = AppDeploymentType.class)
    public JAXBElement<String> createAppDeploymentTypeInstallDir(String value) {
        return new JAXBElement<String>(_AppDeploymentTypeInstallDir_QNAME, String.class, AppDeploymentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "user-name", scope = JoltConnectionPoolType.class)
    public JAXBElement<String> createJoltConnectionPoolTypeUserName(String value) {
        return new JAXBElement<String>(_ContextCaseTypeUserName_QNAME, String.class, JoltConnectionPoolType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "trust-store-name", scope = JoltConnectionPoolType.class)
    public JAXBElement<String> createJoltConnectionPoolTypeTrustStoreName(String value) {
        return new JAXBElement<String>(_JoltConnectionPoolTypeTrustStoreName_QNAME, String.class, JoltConnectionPoolType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "key-pass-phrase-encrypted", scope = JoltConnectionPoolType.class)
    public JAXBElement<String> createJoltConnectionPoolTypeKeyPassPhraseEncrypted(String value) {
        return new JAXBElement<String>(_JoltConnectionPoolTypeKeyPassPhraseEncrypted_QNAME, String.class, JoltConnectionPoolType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "user-password-encrypted", scope = JoltConnectionPoolType.class)
    public JAXBElement<String> createJoltConnectionPoolTypeUserPasswordEncrypted(String value) {
        return new JAXBElement<String>(_JoltConnectionPoolTypeUserPasswordEncrypted_QNAME, String.class, JoltConnectionPoolType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "trust-store-pass-phrase-encrypted", scope = JoltConnectionPoolType.class)
    public JAXBElement<String> createJoltConnectionPoolTypeTrustStorePassPhraseEncrypted(String value) {
        return new JAXBElement<String>(_JoltConnectionPoolTypeTrustStorePassPhraseEncrypted_QNAME, String.class, JoltConnectionPoolType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "application-password-encrypted", scope = JoltConnectionPoolType.class)
    public JAXBElement<String> createJoltConnectionPoolTypeApplicationPasswordEncrypted(String value) {
        return new JAXBElement<String>(_JoltConnectionPoolTypeApplicationPasswordEncrypted_QNAME, String.class, JoltConnectionPoolType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "user-role", scope = JoltConnectionPoolType.class)
    public JAXBElement<String> createJoltConnectionPoolTypeUserRole(String value) {
        return new JAXBElement<String>(_JoltConnectionPoolTypeUserRole_QNAME, String.class, JoltConnectionPoolType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "key-store-pass-phrase-encrypted", scope = JoltConnectionPoolType.class)
    public JAXBElement<String> createJoltConnectionPoolTypeKeyStorePassPhraseEncrypted(String value) {
        return new JAXBElement<String>(_JoltConnectionPoolTypeKeyStorePassPhraseEncrypted_QNAME, String.class, JoltConnectionPoolType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "key-store-name", scope = JoltConnectionPoolType.class)
    public JAXBElement<String> createJoltConnectionPoolTypeKeyStoreName(String value) {
        return new JAXBElement<String>(_JoltConnectionPoolTypeKeyStoreName_QNAME, String.class, JoltConnectionPoolType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "log-policy", scope = ErrorHandlingType.class)
    public JAXBElement<String> createErrorHandlingTypeLogPolicy(String value) {
        return new JAXBElement<String>(_ErrorHandlingTypeLogPolicy_QNAME, String.class, ErrorHandlingType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "policy", scope = ErrorHandlingType.class)
    public JAXBElement<String> createErrorHandlingTypePolicy(String value) {
        return new JAXBElement<String>(_ErrorHandlingTypePolicy_QNAME, String.class, ErrorHandlingType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "compatibility-object-name", scope = UserLockoutManagerType.class)
    public JAXBElement<String> createUserLockoutManagerTypeCompatibilityObjectName(String value) {
        return new JAXBElement<String>(_RdbmsSecurityStoreTypeCompatibilityObjectName_QNAME, String.class, UserLockoutManagerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "name", scope = UserLockoutManagerType.class, defaultValue = "UserLockoutManager")
    public JAXBElement<String> createUserLockoutManagerTypeName(String value) {
        return new JAXBElement<String>(_RdbmsSecurityStoreTypeName_QNAME, String.class, UserLockoutManagerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "base-retransmission-interval", scope = WebServiceReliabilityType.class, defaultValue = "P0DT3S")
    public JAXBElement<String> createWebServiceReliabilityTypeBaseRetransmissionInterval(String value) {
        return new JAXBElement<String>(_WebServiceReliabilityTypeBaseRetransmissionInterval_QNAME, String.class, WebServiceReliabilityType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "retransmission-exponential-backoff", scope = WebServiceReliabilityType.class)
    public JAXBElement<Boolean> createWebServiceReliabilityTypeRetransmissionExponentialBackoff(Boolean value) {
        return new JAXBElement<Boolean>(_WebServiceReliabilityTypeRetransmissionExponentialBackoff_QNAME, Boolean.class, WebServiceReliabilityType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "non-buffered-source", scope = WebServiceReliabilityType.class)
    public JAXBElement<Boolean> createWebServiceReliabilityTypeNonBufferedSource(Boolean value) {
        return new JAXBElement<Boolean>(_WebServiceReliabilityTypeNonBufferedSource_QNAME, Boolean.class, WebServiceReliabilityType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "acknowledgement-interval", scope = WebServiceReliabilityType.class, defaultValue = "P0DT0.2S")
    public JAXBElement<String> createWebServiceReliabilityTypeAcknowledgementInterval(String value) {
        return new JAXBElement<String>(_WebServiceReliabilityTypeAcknowledgementInterval_QNAME, String.class, WebServiceReliabilityType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "sequence-expiration", scope = WebServiceReliabilityType.class, defaultValue = "P1D")
    public JAXBElement<String> createWebServiceReliabilityTypeSequenceExpiration(String value) {
        return new JAXBElement<String>(_WebServiceReliabilityTypeSequenceExpiration_QNAME, String.class, WebServiceReliabilityType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "non-buffered-destination", scope = WebServiceReliabilityType.class)
    public JAXBElement<Boolean> createWebServiceReliabilityTypeNonBufferedDestination(Boolean value) {
        return new JAXBElement<Boolean>(_WebServiceReliabilityTypeNonBufferedDestination_QNAME, Boolean.class, WebServiceReliabilityType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "inactivity-timeout", scope = WebServiceReliabilityType.class, defaultValue = "P0DT600S")
    public JAXBElement<String> createWebServiceReliabilityTypeInactivityTimeout(String value) {
        return new JAXBElement<String>(_WebServiceReliabilityTypeInactivityTimeout_QNAME, String.class, WebServiceReliabilityType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "service-type", scope = SafAgentType.class)
    public JAXBElement<String> createSafAgentTypeServiceType(String value) {
        return new JAXBElement<String>(_SafAgentTypeServiceType_QNAME, String.class, SafAgentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "paging-directory", scope = SafAgentType.class)
    public JAXBElement<String> createSafAgentTypePagingDirectory(String value) {
        return new JAXBElement<String>(_JmsServerTypePagingDirectory_QNAME, String.class, SafAgentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link JmssafMessageLogFileType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "jmssaf-message-log-file", scope = SafAgentType.class)
    public JAXBElement<JmssafMessageLogFileType> createSafAgentTypeJmssafMessageLogFile(JmssafMessageLogFileType value) {
        return new JAXBElement<JmssafMessageLogFileType>(_SafAgentTypeJmssafMessageLogFile_QNAME, JmssafMessageLogFileType.class, SafAgentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "store", scope = SafAgentType.class)
    public JAXBElement<String> createSafAgentTypeStore(String value) {
        return new JAXBElement<String>(_CacheTypeStore_QNAME, String.class, SafAgentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "database-password-encrypted", scope = RdbmsRealmType.class)
    public JAXBElement<String> createRdbmsRealmTypeDatabasePasswordEncrypted(String value) {
        return new JAXBElement<String>(_RdbmsRealmTypeDatabasePasswordEncrypted_QNAME, String.class, RdbmsRealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "database-user-name", scope = RdbmsRealmType.class)
    public JAXBElement<String> createRdbmsRealmTypeDatabaseUserName(String value) {
        return new JAXBElement<String>(_RdbmsRealmTypeDatabaseUserName_QNAME, String.class, RdbmsRealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "database-driver", scope = RdbmsRealmType.class)
    public JAXBElement<String> createRdbmsRealmTypeDatabaseDriver(String value) {
        return new JAXBElement<String>(_RdbmsRealmTypeDatabaseDriver_QNAME, String.class, RdbmsRealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "database-url", scope = RdbmsRealmType.class)
    public JAXBElement<String> createRdbmsRealmTypeDatabaseUrl(String value) {
        return new JAXBElement<String>(_RdbmsRealmTypeDatabaseUrl_QNAME, String.class, RdbmsRealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "schema-properties", scope = RdbmsRealmType.class)
    public JAXBElement<String> createRdbmsRealmTypeSchemaProperties(String value) {
        return new JAXBElement<String>(_RdbmsRealmTypeSchemaProperties_QNAME, String.class, RdbmsRealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "constrained-candidate-server", scope = SingletonServiceType.class)
    public JAXBElement<String> createSingletonServiceTypeConstrainedCandidateServer(String value) {
        return new JAXBElement<String>(_SingletonServiceTypeConstrainedCandidateServer_QNAME, String.class, SingletonServiceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "cluster", scope = SingletonServiceType.class)
    public JAXBElement<String> createSingletonServiceTypeCluster(String value) {
        return new JAXBElement<String>(_ServerTypeCluster_QNAME, String.class, SingletonServiceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "destination", scope = JmsConnectionConsumerType.class)
    public JAXBElement<String> createJmsConnectionConsumerTypeDestination(String value) {
        return new JAXBElement<String>(_JmsConnectionConsumerTypeDestination_QNAME, String.class, JmsConnectionConsumerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "selector", scope = JmsConnectionConsumerType.class)
    public JAXBElement<String> createJmsConnectionConsumerTypeSelector(String value) {
        return new JAXBElement<String>(_JmsConnectionConsumerTypeSelector_QNAME, String.class, JmsConnectionConsumerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "source-path", scope = BasicDeploymentType.class)
    public JAXBElement<String> createBasicDeploymentTypeSourcePath(String value) {
        return new JAXBElement<String>(_BasicDeploymentTypeSourcePath_QNAME, String.class, BasicDeploymentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "deployment-principal-name", scope = BasicDeploymentType.class)
    public JAXBElement<String> createBasicDeploymentTypeDeploymentPrincipalName(String value) {
        return new JAXBElement<String>(_BasicDeploymentTypeDeploymentPrincipalName_QNAME, String.class, BasicDeploymentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "user-id", scope = WtcTbridgeGlobalType.class)
    public JAXBElement<String> createWtcTbridgeGlobalTypeUserId(String value) {
        return new JAXBElement<String>(_WtcTbridgeGlobalTypeUserId_QNAME, String.class, WtcTbridgeGlobalType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "tux-to-jms-priority-map", scope = WtcTbridgeGlobalType.class)
    public JAXBElement<String> createWtcTbridgeGlobalTypeTuxToJmsPriorityMap(String value) {
        return new JAXBElement<String>(_WtcTbridgeGlobalTypeTuxToJmsPriorityMap_QNAME, String.class, WtcTbridgeGlobalType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "default-reply-delivery-mode", scope = WtcTbridgeGlobalType.class)
    public JAXBElement<String> createWtcTbridgeGlobalTypeDefaultReplyDeliveryMode(String value) {
        return new JAXBElement<String>(_WtcTbridgeGlobalTypeDefaultReplyDeliveryMode_QNAME, String.class, WtcTbridgeGlobalType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "transactional", scope = WtcTbridgeGlobalType.class)
    public JAXBElement<String> createWtcTbridgeGlobalTypeTransactional(String value) {
        return new JAXBElement<String>(_CacheTypeTransactional_QNAME, String.class, WtcTbridgeGlobalType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "tux-error-queue", scope = WtcTbridgeGlobalType.class)
    public JAXBElement<String> createWtcTbridgeGlobalTypeTuxErrorQueue(String value) {
        return new JAXBElement<String>(_WtcTbridgeGlobalTypeTuxErrorQueue_QNAME, String.class, WtcTbridgeGlobalType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "allow-non-standard-types", scope = WtcTbridgeGlobalType.class)
    public JAXBElement<String> createWtcTbridgeGlobalTypeAllowNonStandardTypes(String value) {
        return new JAXBElement<String>(_WtcTbridgeGlobalTypeAllowNonStandardTypes_QNAME, String.class, WtcTbridgeGlobalType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "jms-to-tux-priority-map", scope = WtcTbridgeGlobalType.class)
    public JAXBElement<String> createWtcTbridgeGlobalTypeJmsToTuxPriorityMap(String value) {
        return new JAXBElement<String>(_WtcTbridgeGlobalTypeJmsToTuxPriorityMap_QNAME, String.class, WtcTbridgeGlobalType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "wls-error-destination", scope = WtcTbridgeGlobalType.class)
    public JAXBElement<String> createWtcTbridgeGlobalTypeWlsErrorDestination(String value) {
        return new JAXBElement<String>(_WtcTbridgeGlobalTypeWlsErrorDestination_QNAME, String.class, WtcTbridgeGlobalType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "delivery-mode-override", scope = WtcTbridgeGlobalType.class)
    public JAXBElement<String> createWtcTbridgeGlobalTypeDeliveryModeOverride(String value) {
        return new JAXBElement<String>(_WtcTbridgeGlobalTypeDeliveryModeOverride_QNAME, String.class, WtcTbridgeGlobalType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "root-directory", scope = ServerStartType.class)
    public JAXBElement<String> createServerStartTypeRootDirectory(String value) {
        return new JAXBElement<String>(_ServerStartTypeRootDirectory_QNAME, String.class, ServerStartType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "bea-home", scope = ServerStartType.class)
    public JAXBElement<String> createServerStartTypeBeaHome(String value) {
        return new JAXBElement<String>(_ServerStartTypeBeaHome_QNAME, String.class, ServerStartType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "java-home", scope = ServerStartType.class)
    public JAXBElement<String> createServerStartTypeJavaHome(String value) {
        return new JAXBElement<String>(_ServerStartTypeJavaHome_QNAME, String.class, ServerStartType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "username", scope = ServerStartType.class)
    public JAXBElement<String> createServerStartTypeUsername(String value) {
        return new JAXBElement<String>(_ServerStartTypeUsername_QNAME, String.class, ServerStartType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "password-encrypted", scope = ServerStartType.class)
    public JAXBElement<String> createServerStartTypePasswordEncrypted(String value) {
        return new JAXBElement<String>(_ServerStartTypePasswordEncrypted_QNAME, String.class, ServerStartType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "java-vendor", scope = ServerStartType.class)
    public JAXBElement<String> createServerStartTypeJavaVendor(String value) {
        return new JAXBElement<String>(_ServerStartTypeJavaVendor_QNAME, String.class, ServerStartType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "class-path", scope = ServerStartType.class)
    public JAXBElement<String> createServerStartTypeClassPath(String value) {
        return new JAXBElement<String>(_ServerStartTypeClassPath_QNAME, String.class, ServerStartType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "arguments", scope = ServerStartType.class)
    public JAXBElement<String> createServerStartTypeArguments(String value) {
        return new JAXBElement<String>(_ServerStartTypeArguments_QNAME, String.class, ServerStartType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "security-policy-file", scope = ServerStartType.class)
    public JAXBElement<String> createServerStartTypeSecurityPolicyFile(String value) {
        return new JAXBElement<String>(_ServerStartTypeSecurityPolicyFile_QNAME, String.class, ServerStartType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "directory", scope = JmsFileStoreType.class)
    public JAXBElement<String> createJmsFileStoreTypeDirectory(String value) {
        return new JAXBElement<String>(_JmsFileStoreTypeDirectory_QNAME, String.class, JmsFileStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "synchronous-write-policy", scope = JmsFileStoreType.class)
    public JAXBElement<String> createJmsFileStoreTypeSynchronousWritePolicy(String value) {
        return new JAXBElement<String>(_JmsFileStoreTypeSynchronousWritePolicy_QNAME, String.class, JmsFileStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "cache-directory", scope = JmsFileStoreType.class)
    public JAXBElement<String> createJmsFileStoreTypeCacheDirectory(String value) {
        return new JAXBElement<String>(_JmsFileStoreTypeCacheDirectory_QNAME, String.class, JmsFileStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "description", scope = WldfSystemResourceType.class)
    public JAXBElement<String> createWldfSystemResourceTypeDescription(String value) {
        return new JAXBElement<String>(_WldfSystemResourceTypeDescription_QNAME, String.class, WldfSystemResourceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "listen-address", scope = NetworkAccessPointType.class)
    public JAXBElement<String> createNetworkAccessPointTypeListenAddress(String value) {
        return new JAXBElement<String>(_ServerTypeListenAddress_QNAME, String.class, NetworkAccessPointType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "custom-private-key-pass-phrase-encrypted", scope = NetworkAccessPointType.class)
    public JAXBElement<String> createNetworkAccessPointTypeCustomPrivateKeyPassPhraseEncrypted(String value) {
        return new JAXBElement<String>(_NetworkAccessPointTypeCustomPrivateKeyPassPhraseEncrypted_QNAME, String.class, NetworkAccessPointType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "private-key-alias", scope = NetworkAccessPointType.class)
    public JAXBElement<String> createNetworkAccessPointTypePrivateKeyAlias(String value) {
        return new JAXBElement<String>(_NetworkAccessPointTypePrivateKeyAlias_QNAME, String.class, NetworkAccessPointType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "custom-properties", scope = NetworkAccessPointType.class)
    public JAXBElement<String> createNetworkAccessPointTypeCustomProperties(String value) {
        return new JAXBElement<String>(_NetworkAccessPointTypeCustomProperties_QNAME, String.class, NetworkAccessPointType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "protocol", scope = NetworkAccessPointType.class, defaultValue = "t3")
    public JAXBElement<String> createNetworkAccessPointTypeProtocol(String value) {
        return new JAXBElement<String>(_NetworkAccessPointTypeProtocol_QNAME, String.class, NetworkAccessPointType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "proxy-address", scope = NetworkAccessPointType.class)
    public JAXBElement<String> createNetworkAccessPointTypeProxyAddress(String value) {
        return new JAXBElement<String>(_NetworkAccessPointTypeProxyAddress_QNAME, String.class, NetworkAccessPointType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "custom-private-key-alias", scope = NetworkAccessPointType.class)
    public JAXBElement<String> createNetworkAccessPointTypeCustomPrivateKeyAlias(String value) {
        return new JAXBElement<String>(_NetworkAccessPointTypeCustomPrivateKeyAlias_QNAME, String.class, NetworkAccessPointType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "private-key-pass-phrase", scope = NetworkAccessPointType.class)
    public JAXBElement<String> createNetworkAccessPointTypePrivateKeyPassPhrase(String value) {
        return new JAXBElement<String>(_NetworkAccessPointTypePrivateKeyPassPhrase_QNAME, String.class, NetworkAccessPointType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "public-address", scope = NetworkAccessPointType.class)
    public JAXBElement<String> createNetworkAccessPointTypePublicAddress(String value) {
        return new JAXBElement<String>(_NetworkAccessPointTypePublicAddress_QNAME, String.class, NetworkAccessPointType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "external-dns-name", scope = NetworkAccessPointType.class)
    public JAXBElement<String> createNetworkAccessPointTypeExternalDnsName(String value) {
        return new JAXBElement<String>(_ServerTypeExternalDnsName_QNAME, String.class, NetworkAccessPointType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "cluster-address", scope = NetworkAccessPointType.class)
    public JAXBElement<String> createNetworkAccessPointTypeClusterAddress(String value) {
        return new JAXBElement<String>(_NetworkAccessPointTypeClusterAddress_QNAME, String.class, NetworkAccessPointType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "private-key-store-pass-phrase-encrypted", scope = KeyStoreType.class)
    public JAXBElement<String> createKeyStoreTypePrivateKeyStorePassPhraseEncrypted(String value) {
        return new JAXBElement<String>(_KeyStoreTypePrivateKeyStorePassPhraseEncrypted_QNAME, String.class, KeyStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "root-ca-key-store-pass-phrase-encrypted", scope = KeyStoreType.class)
    public JAXBElement<String> createKeyStoreTypeRootCaKeyStorePassPhraseEncrypted(String value) {
        return new JAXBElement<String>(_KeyStoreTypeRootCaKeyStorePassPhraseEncrypted_QNAME, String.class, KeyStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "private-key-store-location", scope = KeyStoreType.class)
    public JAXBElement<String> createKeyStoreTypePrivateKeyStoreLocation(String value) {
        return new JAXBElement<String>(_KeyStoreTypePrivateKeyStoreLocation_QNAME, String.class, KeyStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "root-ca-key-store-location", scope = KeyStoreType.class)
    public JAXBElement<String> createKeyStoreTypeRootCaKeyStoreLocation(String value) {
        return new JAXBElement<String>(_KeyStoreTypeRootCaKeyStoreLocation_QNAME, String.class, KeyStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "target-destination", scope = MessagingBridgeType.class)
    public JAXBElement<String> createMessagingBridgeTypeTargetDestination(String value) {
        return new JAXBElement<String>(_MessagingBridgeTypeTargetDestination_QNAME, String.class, MessagingBridgeType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "quality-of-service", scope = MessagingBridgeType.class)
    public JAXBElement<String> createMessagingBridgeTypeQualityOfService(String value) {
        return new JAXBElement<String>(_MessagingBridgeTypeQualityOfService_QNAME, String.class, MessagingBridgeType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "source-destination", scope = MessagingBridgeType.class)
    public JAXBElement<String> createMessagingBridgeTypeSourceDestination(String value) {
        return new JAXBElement<String>(_MessagingBridgeTypeSourceDestination_QNAME, String.class, MessagingBridgeType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "selector", scope = MessagingBridgeType.class)
    public JAXBElement<String> createMessagingBridgeTypeSelector(String value) {
        return new JAXBElement<String>(_JmsConnectionConsumerTypeSelector_QNAME, String.class, MessagingBridgeType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "string-to-compare", scope = SnmpStringMonitorType.class)
    public JAXBElement<String> createSnmpStringMonitorTypeStringToCompare(String value) {
        return new JAXBElement<String>(_SnmpStringMonitorTypeStringToCompare_QNAME, String.class, SnmpStringMonitorType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "system-id", scope = XmlParserSelectRegistryEntryType.class)
    public JAXBElement<String> createXmlParserSelectRegistryEntryTypeSystemId(String value) {
        return new JAXBElement<String>(_XmlParserSelectRegistryEntryTypeSystemId_QNAME, String.class, XmlParserSelectRegistryEntryType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "transformer-factory", scope = XmlParserSelectRegistryEntryType.class)
    public JAXBElement<String> createXmlParserSelectRegistryEntryTypeTransformerFactory(String value) {
        return new JAXBElement<String>(_XmlParserSelectRegistryEntryTypeTransformerFactory_QNAME, String.class, XmlParserSelectRegistryEntryType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "public-id", scope = XmlParserSelectRegistryEntryType.class)
    public JAXBElement<String> createXmlParserSelectRegistryEntryTypePublicId(String value) {
        return new JAXBElement<String>(_XmlParserSelectRegistryEntryTypePublicId_QNAME, String.class, XmlParserSelectRegistryEntryType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "parser-class-name", scope = XmlParserSelectRegistryEntryType.class)
    public JAXBElement<String> createXmlParserSelectRegistryEntryTypeParserClassName(String value) {
        return new JAXBElement<String>(_XmlParserSelectRegistryEntryTypeParserClassName_QNAME, String.class, XmlParserSelectRegistryEntryType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "sax-parser-factory", scope = XmlParserSelectRegistryEntryType.class)
    public JAXBElement<String> createXmlParserSelectRegistryEntryTypeSaxParserFactory(String value) {
        return new JAXBElement<String>(_XmlParserSelectRegistryEntryTypeSaxParserFactory_QNAME, String.class, XmlParserSelectRegistryEntryType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "root-element-tag", scope = XmlParserSelectRegistryEntryType.class)
    public JAXBElement<String> createXmlParserSelectRegistryEntryTypeRootElementTag(String value) {
        return new JAXBElement<String>(_XmlParserSelectRegistryEntryTypeRootElementTag_QNAME, String.class, XmlParserSelectRegistryEntryType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "document-builder-factory", scope = XmlParserSelectRegistryEntryType.class)
    public JAXBElement<String> createXmlParserSelectRegistryEntryTypeDocumentBuilderFactory(String value) {
        return new JAXBElement<String>(_XmlParserSelectRegistryEntryTypeDocumentBuilderFactory_QNAME, String.class, XmlParserSelectRegistryEntryType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "target-class", scope = WtcExportType.class)
    public JAXBElement<String> createWtcExportTypeTargetClass(String value) {
        return new JAXBElement<String>(_WtcExportTypeTargetClass_QNAME, String.class, WtcExportType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "target-jar", scope = WtcExportType.class)
    public JAXBElement<String> createWtcExportTypeTargetJar(String value) {
        return new JAXBElement<String>(_WtcExportTypeTargetJar_QNAME, String.class, WtcExportType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "remote-name", scope = WtcExportType.class)
    public JAXBElement<String> createWtcExportTypeRemoteName(String value) {
        return new JAXBElement<String>(_WtcImportTypeRemoteName_QNAME, String.class, WtcExportType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "ejb-name", scope = WtcExportType.class)
    public JAXBElement<String> createWtcExportTypeEjbName(String value) {
        return new JAXBElement<String>(_WtcExportTypeEjbName_QNAME, String.class, WtcExportType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WebServiceRequestBufferingQueueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "web-service-request-buffering-queue", scope = WebServiceBufferingType.class)
    public JAXBElement<WebServiceRequestBufferingQueueType> createWebServiceBufferingTypeWebServiceRequestBufferingQueue(WebServiceRequestBufferingQueueType value) {
        return new JAXBElement<WebServiceRequestBufferingQueueType>(_WebServiceBufferingTypeWebServiceRequestBufferingQueue_QNAME, WebServiceRequestBufferingQueueType.class, WebServiceBufferingType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "retry-delay", scope = WebServiceBufferingType.class, defaultValue = "P0DT30S")
    public JAXBElement<String> createWebServiceBufferingTypeRetryDelay(String value) {
        return new JAXBElement<String>(_WebServiceBufferingTypeRetryDelay_QNAME, String.class, WebServiceBufferingType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WebServiceResponseBufferingQueueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "web-service-response-buffering-queue", scope = WebServiceBufferingType.class)
    public JAXBElement<WebServiceResponseBufferingQueueType> createWebServiceBufferingTypeWebServiceResponseBufferingQueue(WebServiceResponseBufferingQueueType value) {
        return new JAXBElement<WebServiceResponseBufferingQueueType>(_WebServiceBufferingTypeWebServiceResponseBufferingQueue_QNAME, WebServiceResponseBufferingQueueType.class, WebServiceBufferingType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "default-load-algorithm", scope = ClusterType.class)
    public JAXBElement<String> createClusterTypeDefaultLoadAlgorithm(String value) {
        return new JAXBElement<String>(_ClusterTypeDefaultLoadAlgorithm_QNAME, String.class, ClusterType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "cluster-broadcast-channel", scope = ClusterType.class)
    public JAXBElement<String> createClusterTypeClusterBroadcastChannel(String value) {
        return new JAXBElement<String>(_ClusterTypeClusterBroadcastChannel_QNAME, String.class, ClusterType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "remote-cluster-address", scope = ClusterType.class)
    public JAXBElement<String> createClusterTypeRemoteClusterAddress(String value) {
        return new JAXBElement<String>(_ClusterTypeRemoteClusterAddress_QNAME, String.class, ClusterType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "job-scheduler-table-name", scope = ClusterType.class, defaultValue = "weblogic_timers")
    public JAXBElement<String> createClusterTypeJobSchedulerTableName(String value) {
        return new JAXBElement<String>(_ClusterTypeJobSchedulerTableName_QNAME, String.class, ClusterType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "frontend-host", scope = ClusterType.class)
    public JAXBElement<String> createClusterTypeFrontendHost(String value) {
        return new JAXBElement<String>(_ClusterTypeFrontendHost_QNAME, String.class, ClusterType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "data-source-for-job-scheduler", scope = ClusterType.class)
    public JAXBElement<String> createClusterTypeDataSourceForJobScheduler(String value) {
        return new JAXBElement<String>(_ClusterTypeDataSourceForJobScheduler_QNAME, String.class, ClusterType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "cluster-type", scope = ClusterType.class)
    public JAXBElement<String> createClusterTypeClusterType(String value) {
        return new JAXBElement<String>(_ClusterTypeClusterType_QNAME, String.class, ClusterType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "replication-channel", scope = ClusterType.class, defaultValue = "ReplicationChannel")
    public JAXBElement<String> createClusterTypeReplicationChannel(String value) {
        return new JAXBElement<String>(_ClusterTypeReplicationChannel_QNAME, String.class, ClusterType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "cluster-messaging-mode", scope = ClusterType.class)
    public JAXBElement<String> createClusterTypeClusterMessagingMode(String value) {
        return new JAXBElement<String>(_ClusterTypeClusterMessagingMode_QNAME, String.class, ClusterType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "data-source-for-automatic-migration", scope = ClusterType.class)
    public JAXBElement<String> createClusterTypeDataSourceForAutomaticMigration(String value) {
        return new JAXBElement<String>(_ClusterTypeDataSourceForAutomaticMigration_QNAME, String.class, ClusterType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "cluster-address", scope = ClusterType.class)
    public JAXBElement<String> createClusterTypeClusterAddress(String value) {
        return new JAXBElement<String>(_NetworkAccessPointTypeClusterAddress_QNAME, String.class, ClusterType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "migration-basis", scope = ClusterType.class)
    public JAXBElement<String> createClusterTypeMigrationBasis(String value) {
        return new JAXBElement<String>(_ClusterTypeMigrationBasis_QNAME, String.class, ClusterType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "singleton-sql-query-helper", scope = ClusterType.class)
    public JAXBElement<String> createClusterTypeSingletonSqlQueryHelper(String value) {
        return new JAXBElement<String>(_ClusterTypeSingletonSqlQueryHelper_QNAME, String.class, ClusterType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "wan-session-persistence-table-name", scope = ClusterType.class, defaultValue = "WLS_WAN_PERSISTENCE_TABLE")
    public JAXBElement<String> createClusterTypeWanSessionPersistenceTableName(String value) {
        return new JAXBElement<String>(_ClusterTypeWanSessionPersistenceTableName_QNAME, String.class, ClusterType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DatabaseLessLeasingBasisType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "database-less-leasing-basis", scope = ClusterType.class)
    public JAXBElement<DatabaseLessLeasingBasisType> createClusterTypeDatabaseLessLeasingBasis(DatabaseLessLeasingBasisType value) {
        return new JAXBElement<DatabaseLessLeasingBasisType>(_ClusterTypeDatabaseLessLeasingBasis_QNAME, DatabaseLessLeasingBasisType.class, ClusterType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "data-source-for-session-persistence", scope = ClusterType.class)
    public JAXBElement<String> createClusterTypeDataSourceForSessionPersistence(String value) {
        return new JAXBElement<String>(_ClusterTypeDataSourceForSessionPersistence_QNAME, String.class, ClusterType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "candidate-machines-for-migratable-server", scope = ClusterType.class)
    public JAXBElement<String> createClusterTypeCandidateMachinesForMigratableServer(String value) {
        return new JAXBElement<String>(_ClusterTypeCandidateMachinesForMigratableServer_QNAME, String.class, ClusterType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "multicast-address", scope = ClusterType.class, defaultValue = "239.192.0.0")
    public JAXBElement<String> createClusterTypeMulticastAddress(String value) {
        return new JAXBElement<String>(_ClusterTypeMulticastAddress_QNAME, String.class, ClusterType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OverloadProtectionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "overload-protection", scope = ClusterType.class)
    public JAXBElement<OverloadProtectionType> createClusterTypeOverloadProtection(OverloadProtectionType value) {
        return new JAXBElement<OverloadProtectionType>(_ServerTypeOverloadProtection_QNAME, OverloadProtectionType.class, ClusterType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "auto-migration-table-name", scope = ClusterType.class, defaultValue = "ACTIVE")
    public JAXBElement<String> createClusterTypeAutoMigrationTableName(String value) {
        return new JAXBElement<String>(_ClusterTypeAutoMigrationTableName_QNAME, String.class, ClusterType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "identity-domain", scope = IdentityDomainAuthenticatorType.class)
    public JAXBElement<String> createIdentityDomainAuthenticatorTypeIdentityDomain(String value) {
        return new JAXBElement<String>(_IdentityDomainAuthenticatorTypeIdentityDomain_QNAME, String.class, IdentityDomainAuthenticatorType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WebServerLogType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "web-server-log", scope = WebServerType.class)
    public JAXBElement<WebServerLogType> createWebServerTypeWebServerLog(WebServerLogType value) {
        return new JAXBElement<WebServerLogType>(_WebServerTypeWebServerLog_QNAME, WebServerLogType.class, WebServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "work-manager-for-remote-session-fetching", scope = WebServerType.class)
    public JAXBElement<String> createWebServerTypeWorkManagerForRemoteSessionFetching(String value) {
        return new JAXBElement<String>(_WebServerTypeWorkManagerForRemoteSessionFetching_QNAME, String.class, WebServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "client-ip-header", scope = WebServerType.class)
    public JAXBElement<String> createWebServerTypeClientIpHeader(String value) {
        return new JAXBElement<String>(_WebServerTypeClientIpHeader_QNAME, String.class, WebServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "web-deployment", scope = WebServerType.class)
    public JAXBElement<String> createWebServerTypeWebDeployment(String value) {
        return new JAXBElement<String>(_WebServerTypeWebDeployment_QNAME, String.class, WebServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "default-web-app-context-root", scope = WebServerType.class)
    public JAXBElement<String> createWebServerTypeDefaultWebAppContextRoot(String value) {
        return new JAXBElement<String>(_WebServerTypeDefaultWebAppContextRoot_QNAME, String.class, WebServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "frontend-host", scope = WebServerType.class)
    public JAXBElement<String> createWebServerTypeFrontendHost(String value) {
        return new JAXBElement<String>(_ClusterTypeFrontendHost_QNAME, String.class, WebServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "charsets", scope = WebServerType.class)
    public JAXBElement<String> createWebServerTypeCharsets(String value) {
        return new JAXBElement<String>(_WebServerTypeCharsets_QNAME, String.class, WebServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "url-resource", scope = WebServerType.class)
    public JAXBElement<String> createWebServerTypeUrlResource(String value) {
        return new JAXBElement<String>(_WebServerTypeUrlResource_QNAME, String.class, WebServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "hosting-server", scope = SingletonServiceBaseType.class)
    public JAXBElement<String> createSingletonServiceBaseTypeHostingServer(String value) {
        return new JAXBElement<String>(_SingletonServiceBaseTypeHostingServer_QNAME, String.class, SingletonServiceBaseType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "user-preferred-server", scope = SingletonServiceBaseType.class)
    public JAXBElement<String> createSingletonServiceBaseTypeUserPreferredServer(String value) {
        return new JAXBElement<String>(_SingletonServiceBaseTypeUserPreferredServer_QNAME, String.class, SingletonServiceBaseType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "wldf-diagnostic-volume", scope = WldfServerDiagnosticType.class)
    public JAXBElement<String> createWldfServerDiagnosticTypeWldfDiagnosticVolume(String value) {
        return new JAXBElement<String>(_WldfServerDiagnosticTypeWldfDiagnosticVolume_QNAME, String.class, WldfServerDiagnosticType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "diagnostic-data-archive-type", scope = WldfServerDiagnosticType.class)
    public JAXBElement<String> createWldfServerDiagnosticTypeDiagnosticDataArchiveType(String value) {
        return new JAXBElement<String>(_WldfServerDiagnosticTypeDiagnosticDataArchiveType_QNAME, String.class, WldfServerDiagnosticType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "diagnostic-jdbc-resource", scope = WldfServerDiagnosticType.class)
    public JAXBElement<String> createWldfServerDiagnosticTypeDiagnosticJdbcResource(String value) {
        return new JAXBElement<String>(_WldfServerDiagnosticTypeDiagnosticJdbcResource_QNAME, String.class, WldfServerDiagnosticType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "diagnostic-store-dir", scope = WldfServerDiagnosticType.class, defaultValue = "data/store/diagnostics")
    public JAXBElement<String> createWldfServerDiagnosticTypeDiagnosticStoreDir(String value) {
        return new JAXBElement<String>(_WldfServerDiagnosticTypeDiagnosticStoreDir_QNAME, String.class, WldfServerDiagnosticType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "image-dir", scope = WldfServerDiagnosticType.class)
    public JAXBElement<String> createWldfServerDiagnosticTypeImageDir(String value) {
        return new JAXBElement<String>(_WldfServerDiagnosticTypeImageDir_QNAME, String.class, WldfServerDiagnosticType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "default-logical-store-name", scope = WebServicePersistenceType.class, defaultValue = "WseeStore")
    public JAXBElement<String> createWebServicePersistenceTypeDefaultLogicalStoreName(String value) {
        return new JAXBElement<String>(_WebServicePersistenceTypeDefaultLogicalStoreName_QNAME, String.class, WebServicePersistenceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "principal", scope = LdapServerType.class)
    public JAXBElement<String> createLdapServerTypePrincipal(String value) {
        return new JAXBElement<String>(_LdapServerTypePrincipal_QNAME, String.class, LdapServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "credential-encrypted", scope = LdapServerType.class)
    public JAXBElement<String> createLdapServerTypeCredentialEncrypted(String value) {
        return new JAXBElement<String>(_LdapServerTypeCredentialEncrypted_QNAME, String.class, LdapServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "host", scope = LdapServerType.class, defaultValue = "localhost")
    public JAXBElement<String> createLdapServerTypeHost(String value) {
        return new JAXBElement<String>(_LdapServerTypeHost_QNAME, String.class, LdapServerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "token-type", scope = WebserviceSecurityConfigurationType.class)
    public JAXBElement<String> createWebserviceSecurityConfigurationTypeTokenType(String value) {
        return new JAXBElement<String>(_WebserviceSecurityConfigurationTypeTokenType_QNAME, String.class, WebserviceSecurityConfigurationType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "class-name", scope = WebserviceSecurityConfigurationType.class)
    public JAXBElement<String> createWebserviceSecurityConfigurationTypeClassName(String value) {
        return new JAXBElement<String>(_WebserviceSecurityConfigurationTypeClassName_QNAME, String.class, WebserviceSecurityConfigurationType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "logger-severity", scope = CommonLogType.class)
    public JAXBElement<String> createCommonLogTypeLoggerSeverity(String value) {
        return new JAXBElement<String>(_CommonLogTypeLoggerSeverity_QNAME, String.class, CommonLogType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "log-file-severity", scope = CommonLogType.class)
    public JAXBElement<String> createCommonLogTypeLogFileSeverity(String value) {
        return new JAXBElement<String>(_CommonLogTypeLogFileSeverity_QNAME, String.class, CommonLogType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "stdout-severity", scope = CommonLogType.class)
    public JAXBElement<String> createCommonLogTypeStdoutSeverity(String value) {
        return new JAXBElement<String>(_CommonLogTypeStdoutSeverity_QNAME, String.class, CommonLogType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "stdout-format", scope = CommonLogType.class)
    public JAXBElement<String> createCommonLogTypeStdoutFormat(String value) {
        return new JAXBElement<String>(_CommonLogTypeStdoutFormat_QNAME, String.class, CommonLogType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "logger-severity-properties", scope = CommonLogType.class)
    public JAXBElement<String> createCommonLogTypeLoggerSeverityProperties(String value) {
        return new JAXBElement<String>(_CommonLogTypeLoggerSeverityProperties_QNAME, String.class, CommonLogType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "panic-action", scope = OverloadProtectionType.class)
    public JAXBElement<String> createOverloadProtectionTypePanicAction(String value) {
        return new JAXBElement<String>(_OverloadProtectionTypePanicAction_QNAME, String.class, OverloadProtectionType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "failure-action", scope = OverloadProtectionType.class)
    public JAXBElement<String> createOverloadProtectionTypeFailureAction(String value) {
        return new JAXBElement<String>(_OverloadProtectionTypeFailureAction_QNAME, String.class, OverloadProtectionType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ServerFailureTriggerType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "server-failure-trigger", scope = OverloadProtectionType.class)
    public JAXBElement<ServerFailureTriggerType> createOverloadProtectionTypeServerFailureTrigger(ServerFailureTriggerType value) {
        return new JAXBElement<ServerFailureTriggerType>(_OverloadProtectionTypeServerFailureTrigger_QNAME, ServerFailureTriggerType.class, OverloadProtectionType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "callback-queue-mdb-run-as-principal-name", scope = WebServiceType.class)
    public JAXBElement<String> createWebServiceTypeCallbackQueueMdbRunAsPrincipalName(String value) {
        return new JAXBElement<String>(_WebServiceTypeCallbackQueueMdbRunAsPrincipalName_QNAME, String.class, WebServiceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "messaging-queue", scope = WebServiceType.class, defaultValue = "weblogic.wsee.DefaultQueue")
    public JAXBElement<String> createWebServiceTypeMessagingQueue(String value) {
        return new JAXBElement<String>(_WebServiceTypeMessagingQueue_QNAME, String.class, WebServiceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "callback-queue", scope = WebServiceType.class, defaultValue = "weblogic.wsee.DefaultCallbackQueue")
    public JAXBElement<String> createWebServiceTypeCallbackQueue(String value) {
        return new JAXBElement<String>(_WebServiceTypeCallbackQueue_QNAME, String.class, WebServiceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "jms-connection-factory", scope = WebServiceType.class, defaultValue = "weblogic.jms.XAConnectionFactory")
    public JAXBElement<String> createWebServiceTypeJmsConnectionFactory(String value) {
        return new JAXBElement<String>(_WebServiceTypeJmsConnectionFactory_QNAME, String.class, WebServiceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WebServiceBufferingType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "web-service-buffering", scope = WebServiceType.class)
    public JAXBElement<WebServiceBufferingType> createWebServiceTypeWebServiceBuffering(WebServiceBufferingType value) {
        return new JAXBElement<WebServiceBufferingType>(_WebServiceTypeWebServiceBuffering_QNAME, WebServiceBufferingType.class, WebServiceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WebServicePersistenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "web-service-persistence", scope = WebServiceType.class)
    public JAXBElement<WebServicePersistenceType> createWebServiceTypeWebServicePersistence(WebServicePersistenceType value) {
        return new JAXBElement<WebServicePersistenceType>(_WebServiceTypeWebServicePersistence_QNAME, WebServicePersistenceType.class, WebServiceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WebServiceReliabilityType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "web-service-reliability", scope = WebServiceType.class)
    public JAXBElement<WebServiceReliabilityType> createWebServiceTypeWebServiceReliability(WebServiceReliabilityType value) {
        return new JAXBElement<WebServiceReliabilityType>(_WebServiceTypeWebServiceReliability_QNAME, WebServiceReliabilityType.class, WebServiceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "messaging-queue-mdb-run-as-principal-name", scope = WebServiceType.class)
    public JAXBElement<String> createWebServiceTypeMessagingQueueMdbRunAsPrincipalName(String value) {
        return new JAXBElement<String>(_WebServiceTypeMessagingQueueMdbRunAsPrincipalName_QNAME, String.class, WebServiceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "user-name", scope = BridgeDestinationCommonType.class)
    public JAXBElement<String> createBridgeDestinationCommonTypeUserName(String value) {
        return new JAXBElement<String>(_ContextCaseTypeUserName_QNAME, String.class, BridgeDestinationCommonType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "classpath", scope = BridgeDestinationCommonType.class)
    public JAXBElement<String> createBridgeDestinationCommonTypeClasspath(String value) {
        return new JAXBElement<String>(_BridgeDestinationCommonTypeClasspath_QNAME, String.class, BridgeDestinationCommonType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "user-password-encrypted", scope = BridgeDestinationCommonType.class)
    public JAXBElement<String> createBridgeDestinationCommonTypeUserPasswordEncrypted(String value) {
        return new JAXBElement<String>(_JoltConnectionPoolTypeUserPasswordEncrypted_QNAME, String.class, BridgeDestinationCommonType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "default-iiop-user", scope = NetworkChannelType.class)
    public JAXBElement<String> createNetworkChannelTypeDefaultIiopUser(String value) {
        return new JAXBElement<String>(_ServerTypeDefaultIiopUser_QNAME, String.class, NetworkChannelType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "default-iiop-password-encrypted", scope = NetworkChannelType.class)
    public JAXBElement<String> createNetworkChannelTypeDefaultIiopPasswordEncrypted(String value) {
        return new JAXBElement<String>(_ServerTypeDefaultIiopPasswordEncrypted_QNAME, String.class, NetworkChannelType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "description", scope = NetworkChannelType.class)
    public JAXBElement<String> createNetworkChannelTypeDescription(String value) {
        return new JAXBElement<String>(_WldfSystemResourceTypeDescription_QNAME, String.class, NetworkChannelType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "cluster-address", scope = NetworkChannelType.class)
    public JAXBElement<String> createNetworkChannelTypeClusterAddress(String value) {
        return new JAXBElement<String>(_NetworkAccessPointTypeClusterAddress_QNAME, String.class, NetworkChannelType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "protocol", scope = RemoteSafContextType.class)
    public JAXBElement<String> createRemoteSafContextTypeProtocol(String value) {
        return new JAXBElement<String>(_NetworkAccessPointTypeProtocol_QNAME, String.class, RemoteSafContextType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "password", scope = RemoteSafContextType.class)
    public JAXBElement<String> createRemoteSafContextTypePassword(String value) {
        return new JAXBElement<String>(_RemoteSafContextTypePassword_QNAME, String.class, RemoteSafContextType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "jndi-initial-context-factory", scope = RemoteSafContextType.class)
    public JAXBElement<String> createRemoteSafContextTypeJndiInitialContextFactory(String value) {
        return new JAXBElement<String>(_RemoteSafContextTypeJndiInitialContextFactory_QNAME, String.class, RemoteSafContextType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "url", scope = RemoteSafContextType.class)
    public JAXBElement<String> createRemoteSafContextTypeUrl(String value) {
        return new JAXBElement<String>(_RemoteSafContextTypeUrl_QNAME, String.class, RemoteSafContextType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "username", scope = RemoteSafContextType.class)
    public JAXBElement<String> createRemoteSafContextTypeUsername(String value) {
        return new JAXBElement<String>(_ServerStartTypeUsername_QNAME, String.class, RemoteSafContextType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "jndi-property", scope = RemoteSafContextType.class)
    public JAXBElement<String> createRemoteSafContextTypeJndiProperty(String value) {
        return new JAXBElement<String>(_RemoteSafContextTypeJndiProperty_QNAME, String.class, RemoteSafContextType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "archive-name", scope = WldfDataRetirementType.class)
    public JAXBElement<String> createWldfDataRetirementTypeArchiveName(String value) {
        return new JAXBElement<String>(_WldfDataRetirementTypeArchiveName_QNAME, String.class, WldfDataRetirementType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "directory", scope = GenericFileStoreType.class)
    public JAXBElement<String> createGenericFileStoreTypeDirectory(String value) {
        return new JAXBElement<String>(_JmsFileStoreTypeDirectory_QNAME, String.class, GenericFileStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "synchronous-write-policy", scope = GenericFileStoreType.class)
    public JAXBElement<String> createGenericFileStoreTypeSynchronousWritePolicy(String value) {
        return new JAXBElement<String>(_JmsFileStoreTypeSynchronousWritePolicy_QNAME, String.class, GenericFileStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "cache-directory", scope = GenericFileStoreType.class)
    public JAXBElement<String> createGenericFileStoreTypeCacheDirectory(String value) {
        return new JAXBElement<String>(_JmsFileStoreTypeCacheDirectory_QNAME, String.class, GenericFileStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "cache-location", scope = XmlEntityCacheType.class, defaultValue = "xmlcache")
    public JAXBElement<String> createXmlEntityCacheTypeCacheLocation(String value) {
        return new JAXBElement<String>(_XmlEntityCacheTypeCacheLocation_QNAME, String.class, XmlEntityCacheType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "domain-log-broadcast-filter", scope = LogType.class)
    public JAXBElement<String> createLogTypeDomainLogBroadcastFilter(String value) {
        return new JAXBElement<String>(_LogTypeDomainLogBroadcastFilter_QNAME, String.class, LogType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "memory-buffer-filter", scope = LogType.class)
    public JAXBElement<String> createLogTypeMemoryBufferFilter(String value) {
        return new JAXBElement<String>(_LogTypeMemoryBufferFilter_QNAME, String.class, LogType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "domain-log-broadcast-severity", scope = LogType.class)
    public JAXBElement<String> createLogTypeDomainLogBroadcastSeverity(String value) {
        return new JAXBElement<String>(_LogTypeDomainLogBroadcastSeverity_QNAME, String.class, LogType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "log-file-filter", scope = LogType.class)
    public JAXBElement<String> createLogTypeLogFileFilter(String value) {
        return new JAXBElement<String>(_LogTypeLogFileFilter_QNAME, String.class, LogType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "stdout-filter", scope = LogType.class)
    public JAXBElement<String> createLogTypeStdoutFilter(String value) {
        return new JAXBElement<String>(_LogTypeStdoutFilter_QNAME, String.class, LogType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "memory-buffer-severity", scope = LogType.class)
    public JAXBElement<String> createLogTypeMemoryBufferSeverity(String value) {
        return new JAXBElement<String>(_LogTypeMemoryBufferSeverity_QNAME, String.class, LogType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "provider-url", scope = ForeignJndiProviderType.class)
    public JAXBElement<String> createForeignJndiProviderTypeProviderUrl(String value) {
        return new JAXBElement<String>(_ForeignJndiProviderTypeProviderUrl_QNAME, String.class, ForeignJndiProviderType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "initial-context-factory", scope = ForeignJndiProviderType.class)
    public JAXBElement<String> createForeignJndiProviderTypeInitialContextFactory(String value) {
        return new JAXBElement<String>(_ForeignJndiProviderTypeInitialContextFactory_QNAME, String.class, ForeignJndiProviderType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "user", scope = ForeignJndiProviderType.class)
    public JAXBElement<String> createForeignJndiProviderTypeUser(String value) {
        return new JAXBElement<String>(_ForeignJndiProviderTypeUser_QNAME, String.class, ForeignJndiProviderType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "properties", scope = ForeignJndiProviderType.class)
    public JAXBElement<String> createForeignJndiProviderTypeProperties(String value) {
        return new JAXBElement<String>(_MailSessionTypeProperties_QNAME, String.class, ForeignJndiProviderType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "password-encrypted", scope = ForeignJndiProviderType.class)
    public JAXBElement<String> createForeignJndiProviderTypePasswordEncrypted(String value) {
        return new JAXBElement<String>(_ServerStartTypePasswordEncrypted_QNAME, String.class, ForeignJndiProviderType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "p3p-header-value", scope = WebAppContainerType.class)
    public JAXBElement<String> createWebAppContainerTypeP3PHeaderValue(String value) {
        return new JAXBElement<String>(_WebAppContainerTypeP3PHeaderValue_QNAME, String.class, WebAppContainerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "x-powered-by-header-level", scope = WebAppContainerType.class)
    public JAXBElement<String> createWebAppContainerTypeXPoweredByHeaderLevel(String value) {
        return new JAXBElement<String>(_WebAppContainerTypeXPoweredByHeaderLevel_QNAME, String.class, WebAppContainerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "mime-mapping-file", scope = WebAppContainerType.class, defaultValue = "./config/mimemappings.properties")
    public JAXBElement<String> createWebAppContainerTypeMimeMappingFile(String value) {
        return new JAXBElement<String>(_WebAppContainerTypeMimeMappingFile_QNAME, String.class, WebAppContainerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "custom-loader", scope = CacheLoaderType.class)
    public JAXBElement<String> createCacheLoaderTypeCustomLoader(String value) {
        return new JAXBElement<String>(_CacheLoaderTypeCustomLoader_QNAME, String.class, CacheLoaderType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "cookie-name", scope = AdminConsoleType.class, defaultValue = "ADMINCONSOLESESSION")
    public JAXBElement<String> createAdminConsoleTypeCookieName(String value) {
        return new JAXBElement<String>(_AdminConsoleTypeCookieName_QNAME, String.class, AdminConsoleType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "system-id", scope = XmlEntitySpecRegistryEntryType.class)
    public JAXBElement<String> createXmlEntitySpecRegistryEntryTypeSystemId(String value) {
        return new JAXBElement<String>(_XmlParserSelectRegistryEntryTypeSystemId_QNAME, String.class, XmlEntitySpecRegistryEntryType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "public-id", scope = XmlEntitySpecRegistryEntryType.class)
    public JAXBElement<String> createXmlEntitySpecRegistryEntryTypePublicId(String value) {
        return new JAXBElement<String>(_XmlParserSelectRegistryEntryTypePublicId_QNAME, String.class, XmlEntitySpecRegistryEntryType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "handle-entity-invalidation", scope = XmlEntitySpecRegistryEntryType.class)
    public JAXBElement<String> createXmlEntitySpecRegistryEntryTypeHandleEntityInvalidation(String value) {
        return new JAXBElement<String>(_XmlEntitySpecRegistryEntryTypeHandleEntityInvalidation_QNAME, String.class, XmlEntitySpecRegistryEntryType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "when-to-cache", scope = XmlEntitySpecRegistryEntryType.class)
    public JAXBElement<String> createXmlEntitySpecRegistryEntryTypeWhenToCache(String value) {
        return new JAXBElement<String>(_XmlEntitySpecRegistryEntryTypeWhenToCache_QNAME, String.class, XmlEntitySpecRegistryEntryType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "entity-uri", scope = XmlEntitySpecRegistryEntryType.class)
    public JAXBElement<String> createXmlEntitySpecRegistryEntryTypeEntityUri(String value) {
        return new JAXBElement<String>(_XmlEntitySpecRegistryEntryTypeEntityUri_QNAME, String.class, XmlEntitySpecRegistryEntryType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "default-maximum-object-lifetime", scope = WebServiceLogicalStoreType.class, defaultValue = "P1D")
    public JAXBElement<String> createWebServiceLogicalStoreTypeDefaultMaximumObjectLifetime(String value) {
        return new JAXBElement<String>(_WebServiceLogicalStoreTypeDefaultMaximumObjectLifetime_QNAME, String.class, WebServiceLogicalStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "cleaner-interval", scope = WebServiceLogicalStoreType.class, defaultValue = "PT10M")
    public JAXBElement<String> createWebServiceLogicalStoreTypeCleanerInterval(String value) {
        return new JAXBElement<String>(_WebServiceLogicalStoreTypeCleanerInterval_QNAME, String.class, WebServiceLogicalStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "physical-store-name", scope = WebServiceLogicalStoreType.class)
    public JAXBElement<String> createWebServiceLogicalStoreTypePhysicalStoreName(String value) {
        return new JAXBElement<String>(_WebServiceLogicalStoreTypePhysicalStoreName_QNAME, String.class, WebServiceLogicalStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "request-buffering-queue-jndi-name", scope = WebServiceLogicalStoreType.class)
    public JAXBElement<String> createWebServiceLogicalStoreTypeRequestBufferingQueueJndiName(String value) {
        return new JAXBElement<String>(_WebServiceLogicalStoreTypeRequestBufferingQueueJndiName_QNAME, String.class, WebServiceLogicalStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "response-buffering-queue-jndi-name", scope = WebServiceLogicalStoreType.class)
    public JAXBElement<String> createWebServiceLogicalStoreTypeResponseBufferingQueueJndiName(String value) {
        return new JAXBElement<String>(_WebServiceLogicalStoreTypeResponseBufferingQueueJndiName_QNAME, String.class, WebServiceLogicalStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "persistence-strategy", scope = WebServiceLogicalStoreType.class)
    public JAXBElement<String> createWebServiceLogicalStoreTypePersistenceStrategy(String value) {
        return new JAXBElement<String>(_WebServiceLogicalStoreTypePersistenceStrategy_QNAME, String.class, WebServiceLogicalStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "name", scope = WeblogicType.class)
    public JAXBElement<String> createWeblogicTypeName(String value) {
        return new JAXBElement<String>(_WeblogicTypeName_QNAME, String.class, WeblogicType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "filter-expression", scope = LogFilterType.class)
    public JAXBElement<String> createLogFilterTypeFilterExpression(String value) {
        return new JAXBElement<String>(_LogFilterTypeFilterExpression_QNAME, String.class, LogFilterType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "configuration-data", scope = CustomRealmType.class)
    public JAXBElement<String> createCustomRealmTypeConfigurationData(String value) {
        return new JAXBElement<String>(_CustomRealmTypeConfigurationData_QNAME, String.class, CustomRealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "password-encrypted", scope = CustomRealmType.class)
    public JAXBElement<String> createCustomRealmTypePasswordEncrypted(String value) {
        return new JAXBElement<String>(_ServerStartTypePasswordEncrypted_QNAME, String.class, CustomRealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "tp-usr-file", scope = WtcResourcesType.class)
    public JAXBElement<String> createWtcResourcesTypeTpUsrFile(String value) {
        return new JAXBElement<String>(_WtcRemoteTuxDomTypeTpUsrFile_QNAME, String.class, WtcResourcesType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "app-password", scope = WtcResourcesType.class)
    public JAXBElement<String> createWtcResourcesTypeAppPassword(String value) {
        return new JAXBElement<String>(_WtcResourcesTypeAppPassword_QNAME, String.class, WtcResourcesType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "app-password-iv", scope = WtcResourcesType.class)
    public JAXBElement<String> createWtcResourcesTypeAppPasswordIv(String value) {
        return new JAXBElement<String>(_WtcResourcesTypeAppPasswordIv_QNAME, String.class, WtcResourcesType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "remote-mb-encoding", scope = WtcResourcesType.class)
    public JAXBElement<String> createWtcResourcesTypeRemoteMbEncoding(String value) {
        return new JAXBElement<String>(_WtcResourcesTypeRemoteMbEncoding_QNAME, String.class, WtcResourcesType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "mb-encoding-map-file", scope = WtcResourcesType.class)
    public JAXBElement<String> createWtcResourcesTypeMbEncodingMapFile(String value) {
        return new JAXBElement<String>(_WtcResourcesTypeMbEncodingMapFile_QNAME, String.class, WtcResourcesType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "nw-addr", scope = WtcLocalTuxDomType.class, defaultValue = "//localhost:8901")
    public JAXBElement<String> createWtcLocalTuxDomTypeNwAddr(String value) {
        return new JAXBElement<String>(_WtcRemoteTuxDomTypeNwAddr_QNAME, String.class, WtcLocalTuxDomType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "identity-key-store-file-name", scope = WtcLocalTuxDomType.class)
    public JAXBElement<String> createWtcLocalTuxDomTypeIdentityKeyStoreFileName(String value) {
        return new JAXBElement<String>(_WtcLocalTuxDomTypeIdentityKeyStoreFileName_QNAME, String.class, WtcLocalTuxDomType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "identity-key-store-pass-phrase-encrypted", scope = WtcLocalTuxDomType.class)
    public JAXBElement<String> createWtcLocalTuxDomTypeIdentityKeyStorePassPhraseEncrypted(String value) {
        return new JAXBElement<String>(_WtcLocalTuxDomTypeIdentityKeyStorePassPhraseEncrypted_QNAME, String.class, WtcLocalTuxDomType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "security", scope = WtcLocalTuxDomType.class)
    public JAXBElement<String> createWtcLocalTuxDomTypeSecurity(String value) {
        return new JAXBElement<String>(_WtcLocalTuxDomTypeSecurity_QNAME, String.class, WtcLocalTuxDomType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "private-key-pass-phrase-encrypted", scope = WtcLocalTuxDomType.class)
    public JAXBElement<String> createWtcLocalTuxDomTypePrivateKeyPassPhraseEncrypted(String value) {
        return new JAXBElement<String>(_WtcLocalTuxDomTypePrivateKeyPassPhraseEncrypted_QNAME, String.class, WtcLocalTuxDomType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "key-stores-location", scope = WtcLocalTuxDomType.class)
    public JAXBElement<String> createWtcLocalTuxDomTypeKeyStoresLocation(String value) {
        return new JAXBElement<String>(_WtcLocalTuxDomTypeKeyStoresLocation_QNAME, String.class, WtcLocalTuxDomType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "connection-policy", scope = WtcLocalTuxDomType.class)
    public JAXBElement<String> createWtcLocalTuxDomTypeConnectionPolicy(String value) {
        return new JAXBElement<String>(_WtcRemoteTuxDomTypeConnectionPolicy_QNAME, String.class, WtcLocalTuxDomType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "use-ssl", scope = WtcLocalTuxDomType.class)
    public JAXBElement<String> createWtcLocalTuxDomTypeUseSsl(String value) {
        return new JAXBElement<String>(_WtcLocalTuxDomTypeUseSsl_QNAME, String.class, WtcLocalTuxDomType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "conn-principal-name", scope = WtcLocalTuxDomType.class)
    public JAXBElement<String> createWtcLocalTuxDomTypeConnPrincipalName(String value) {
        return new JAXBElement<String>(_WtcRemoteTuxDomTypeConnPrincipalName_QNAME, String.class, WtcLocalTuxDomType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "min-encrypt-bits", scope = WtcLocalTuxDomType.class)
    public JAXBElement<String> createWtcLocalTuxDomTypeMinEncryptBits(String value) {
        return new JAXBElement<String>(_WtcRemoteTuxDomTypeMinEncryptBits_QNAME, String.class, WtcLocalTuxDomType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "private-key-alias", scope = WtcLocalTuxDomType.class)
    public JAXBElement<String> createWtcLocalTuxDomTypePrivateKeyAlias(String value) {
        return new JAXBElement<String>(_NetworkAccessPointTypePrivateKeyAlias_QNAME, String.class, WtcLocalTuxDomType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "trust-key-store-file-name", scope = WtcLocalTuxDomType.class)
    public JAXBElement<String> createWtcLocalTuxDomTypeTrustKeyStoreFileName(String value) {
        return new JAXBElement<String>(_WtcLocalTuxDomTypeTrustKeyStoreFileName_QNAME, String.class, WtcLocalTuxDomType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "max-encrypt-bits", scope = WtcLocalTuxDomType.class)
    public JAXBElement<String> createWtcLocalTuxDomTypeMaxEncryptBits(String value) {
        return new JAXBElement<String>(_WtcRemoteTuxDomTypeMaxEncryptBits_QNAME, String.class, WtcLocalTuxDomType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "interoperate", scope = WtcLocalTuxDomType.class)
    public JAXBElement<String> createWtcLocalTuxDomTypeInteroperate(String value) {
        return new JAXBElement<String>(_WtcLocalTuxDomTypeInteroperate_QNAME, String.class, WtcLocalTuxDomType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "trust-key-store-pass-phrase-encrypted", scope = WtcLocalTuxDomType.class)
    public JAXBElement<String> createWtcLocalTuxDomTypeTrustKeyStorePassPhraseEncrypted(String value) {
        return new JAXBElement<String>(_WtcLocalTuxDomTypeTrustKeyStorePassPhraseEncrypted_QNAME, String.class, WtcLocalTuxDomType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "listener-class", scope = JmsSessionPoolType.class)
    public JAXBElement<String> createJmsSessionPoolTypeListenerClass(String value) {
        return new JAXBElement<String>(_JmsSessionPoolTypeListenerClass_QNAME, String.class, JmsSessionPoolType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "connection-factory", scope = JmsSessionPoolType.class)
    public JAXBElement<String> createJmsSessionPoolTypeConnectionFactory(String value) {
        return new JAXBElement<String>(_JmsSessionPoolTypeConnectionFactory_QNAME, String.class, JmsSessionPoolType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "acknowledge-mode", scope = JmsSessionPoolType.class)
    public JAXBElement<String> createJmsSessionPoolTypeAcknowledgeMode(String value) {
        return new JAXBElement<String>(_JmsSessionPoolTypeAcknowledgeMode_QNAME, String.class, JmsSessionPoolType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "auth-program", scope = UnixRealmType.class, defaultValue = "wlauth")
    public JAXBElement<String> createUnixRealmTypeAuthProgram(String value) {
        return new JAXBElement<String>(_UnixRealmTypeAuthProgram_QNAME, String.class, UnixRealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "module-type", scope = TargetInfoType.class)
    public JAXBElement<String> createTargetInfoTypeModuleType(String value) {
        return new JAXBElement<String>(_TargetInfoTypeModuleType_QNAME, String.class, TargetInfoType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "target", scope = TargetInfoType.class)
    public JAXBElement<String> createTargetInfoTypeTarget(String value) {
        return new JAXBElement<String>(_JdbcStoreTypeTarget_QNAME, String.class, TargetInfoType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "compatibility-name", scope = TargetInfoType.class)
    public JAXBElement<String> createTargetInfoTypeCompatibilityName(String value) {
        return new JAXBElement<String>(_TargetInfoTypeCompatibilityName_QNAME, String.class, TargetInfoType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "resource-class", scope = CustomResourceType.class)
    public JAXBElement<String> createCustomResourceTypeResourceClass(String value) {
        return new JAXBElement<String>(_CustomResourceTypeResourceClass_QNAME, String.class, CustomResourceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "descriptor-bean-class", scope = CustomResourceType.class)
    public JAXBElement<String> createCustomResourceTypeDescriptorBeanClass(String value) {
        return new JAXBElement<String>(_CustomResourceTypeDescriptorBeanClass_QNAME, String.class, CustomResourceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "tmp-path", scope = EjbComponentType.class, defaultValue = "tmp_ejb")
    public JAXBElement<String> createEjbComponentTypeTmpPath(String value) {
        return new JAXBElement<String>(_EjbContainerTypeTmpPath_QNAME, String.class, EjbComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "java-compiler", scope = EjbComponentType.class)
    public JAXBElement<String> createEjbComponentTypeJavaCompiler(String value) {
        return new JAXBElement<String>(_EjbContainerTypeJavaCompiler_QNAME, String.class, EjbComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "java-compiler-post-class-path", scope = EjbComponentType.class)
    public JAXBElement<String> createEjbComponentTypeJavaCompilerPostClassPath(String value) {
        return new JAXBElement<String>(_EjbContainerTypeJavaCompilerPostClassPath_QNAME, String.class, EjbComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "extra-ejbc-options", scope = EjbComponentType.class)
    public JAXBElement<String> createEjbComponentTypeExtraEjbcOptions(String value) {
        return new JAXBElement<String>(_EjbContainerTypeExtraEjbcOptions_QNAME, String.class, EjbComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "verbose-ejb-deployment-enabled", scope = EjbComponentType.class, defaultValue = "false")
    public JAXBElement<String> createEjbComponentTypeVerboseEjbDeploymentEnabled(String value) {
        return new JAXBElement<String>(_EjbContainerTypeVerboseEjbDeploymentEnabled_QNAME, String.class, EjbComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "java-compiler-pre-class-path", scope = EjbComponentType.class)
    public JAXBElement<String> createEjbComponentTypeJavaCompilerPreClassPath(String value) {
        return new JAXBElement<String>(_EjbContainerTypeJavaCompilerPreClassPath_QNAME, String.class, EjbComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "extra-rmic-options", scope = EjbComponentType.class)
    public JAXBElement<String> createEjbComponentTypeExtraRmicOptions(String value) {
        return new JAXBElement<String>(_EjbContainerTypeExtraRmicOptions_QNAME, String.class, EjbComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "transformer-factory", scope = XmlRegistryType.class, defaultValue = "weblogic.xml.jaxp.WebLogicTransformerFactory")
    public JAXBElement<String> createXmlRegistryTypeTransformerFactory(String value) {
        return new JAXBElement<String>(_XmlParserSelectRegistryEntryTypeTransformerFactory_QNAME, String.class, XmlRegistryType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "sax-parser-factory", scope = XmlRegistryType.class, defaultValue = "weblogic.apache.xerces.jaxp.SAXParserFactoryImpl")
    public JAXBElement<String> createXmlRegistryTypeSaxParserFactory(String value) {
        return new JAXBElement<String>(_XmlParserSelectRegistryEntryTypeSaxParserFactory_QNAME, String.class, XmlRegistryType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "when-to-cache", scope = XmlRegistryType.class)
    public JAXBElement<String> createXmlRegistryTypeWhenToCache(String value) {
        return new JAXBElement<String>(_XmlEntitySpecRegistryEntryTypeWhenToCache_QNAME, String.class, XmlRegistryType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "document-builder-factory", scope = XmlRegistryType.class, defaultValue = "weblogic.apache.xerces.jaxp.DocumentBuilderFactoryImpl")
    public JAXBElement<String> createXmlRegistryTypeDocumentBuilderFactory(String value) {
        return new JAXBElement<String>(_XmlParserSelectRegistryEntryTypeDocumentBuilderFactory_QNAME, String.class, XmlRegistryType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "network-access-point", scope = VirtualHostType.class)
    public JAXBElement<String> createVirtualHostTypeNetworkAccessPoint(String value) {
        return new JAXBElement<String>(_VirtualHostTypeNetworkAccessPoint_QNAME, String.class, VirtualHostType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "user-name", scope = JdbcDataSourceFactoryType.class)
    public JAXBElement<String> createJdbcDataSourceFactoryTypeUserName(String value) {
        return new JAXBElement<String>(_ContextCaseTypeUserName_QNAME, String.class, JdbcDataSourceFactoryType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "factory-name", scope = JdbcDataSourceFactoryType.class)
    public JAXBElement<String> createJdbcDataSourceFactoryTypeFactoryName(String value) {
        return new JAXBElement<String>(_JdbcDataSourceFactoryTypeFactoryName_QNAME, String.class, JdbcDataSourceFactoryType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "driver-class-name", scope = JdbcDataSourceFactoryType.class)
    public JAXBElement<String> createJdbcDataSourceFactoryTypeDriverClassName(String value) {
        return new JAXBElement<String>(_JdbcDataSourceFactoryTypeDriverClassName_QNAME, String.class, JdbcDataSourceFactoryType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "url", scope = JdbcDataSourceFactoryType.class)
    public JAXBElement<String> createJdbcDataSourceFactoryTypeUrl(String value) {
        return new JAXBElement<String>(_RemoteSafContextTypeUrl_QNAME, String.class, JdbcDataSourceFactoryType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "properties", scope = JdbcDataSourceFactoryType.class)
    public JAXBElement<String> createJdbcDataSourceFactoryTypeProperties(String value) {
        return new JAXBElement<String>(_MailSessionTypeProperties_QNAME, String.class, JdbcDataSourceFactoryType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "password-encrypted", scope = JdbcDataSourceFactoryType.class)
    public JAXBElement<String> createJdbcDataSourceFactoryTypePasswordEncrypted(String value) {
        return new JAXBElement<String>(_ServerStartTypePasswordEncrypted_QNAME, String.class, JdbcDataSourceFactoryType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "value", scope = ConfigurationPropertyType.class)
    public JAXBElement<String> createConfigurationPropertyTypeValue(String value) {
        return new JAXBElement<String>(_ConfigurationPropertyTypeValue_QNAME, String.class, ConfigurationPropertyType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "encrypted-value-encrypted", scope = ConfigurationPropertyType.class)
    public JAXBElement<String> createConfigurationPropertyTypeEncryptedValueEncrypted(String value) {
        return new JAXBElement<String>(_ConfigurationPropertyTypeEncryptedValueEncrypted_QNAME, String.class, ConfigurationPropertyType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "jms-topic", scope = JmsDistributedTopicMemberType.class)
    public JAXBElement<String> createJmsDistributedTopicMemberTypeJmsTopic(String value) {
        return new JAXBElement<String>(_JmsDistributedTopicMemberTypeJmsTopic_QNAME, String.class, JmsDistributedTopicMemberType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "system-id", scope = XmlRegistryEntryType.class)
    public JAXBElement<String> createXmlRegistryEntryTypeSystemId(String value) {
        return new JAXBElement<String>(_XmlParserSelectRegistryEntryTypeSystemId_QNAME, String.class, XmlRegistryEntryType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "public-id", scope = XmlRegistryEntryType.class)
    public JAXBElement<String> createXmlRegistryEntryTypePublicId(String value) {
        return new JAXBElement<String>(_XmlParserSelectRegistryEntryTypePublicId_QNAME, String.class, XmlRegistryEntryType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "parser-class-name", scope = XmlRegistryEntryType.class)
    public JAXBElement<String> createXmlRegistryEntryTypeParserClassName(String value) {
        return new JAXBElement<String>(_XmlParserSelectRegistryEntryTypeParserClassName_QNAME, String.class, XmlRegistryEntryType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "entity-path", scope = XmlRegistryEntryType.class)
    public JAXBElement<String> createXmlRegistryEntryTypeEntityPath(String value) {
        return new JAXBElement<String>(_XmlRegistryEntryTypeEntityPath_QNAME, String.class, XmlRegistryEntryType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "sax-parser-factory", scope = XmlRegistryEntryType.class)
    public JAXBElement<String> createXmlRegistryEntryTypeSaxParserFactory(String value) {
        return new JAXBElement<String>(_XmlParserSelectRegistryEntryTypeSaxParserFactory_QNAME, String.class, XmlRegistryEntryType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "root-element-tag", scope = XmlRegistryEntryType.class)
    public JAXBElement<String> createXmlRegistryEntryTypeRootElementTag(String value) {
        return new JAXBElement<String>(_XmlParserSelectRegistryEntryTypeRootElementTag_QNAME, String.class, XmlRegistryEntryType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "document-builder-factory", scope = XmlRegistryEntryType.class)
    public JAXBElement<String> createXmlRegistryEntryTypeDocumentBuilderFactory(String value) {
        return new JAXBElement<String>(_XmlParserSelectRegistryEntryTypeDocumentBuilderFactory_QNAME, String.class, XmlRegistryEntryType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "monitored-m-bean-type", scope = SnmpJmxMonitorType.class)
    public JAXBElement<String> createSnmpJmxMonitorTypeMonitoredMBeanType(String value) {
        return new JAXBElement<String>(_SnmpJmxMonitorTypeMonitoredMBeanType_QNAME, String.class, SnmpJmxMonitorType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "monitored-attribute-name", scope = SnmpJmxMonitorType.class)
    public JAXBElement<String> createSnmpJmxMonitorTypeMonitoredAttributeName(String value) {
        return new JAXBElement<String>(_SnmpJmxMonitorTypeMonitoredAttributeName_QNAME, String.class, SnmpJmxMonitorType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "monitored-m-bean-name", scope = SnmpJmxMonitorType.class)
    public JAXBElement<String> createSnmpJmxMonitorTypeMonitoredMBeanName(String value) {
        return new JAXBElement<String>(_SnmpJmxMonitorTypeMonitoredMBeanName_QNAME, String.class, SnmpJmxMonitorType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NodeManagerType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "node-manager", scope = MachineType.class)
    public JAXBElement<NodeManagerType> createMachineTypeNodeManager(NodeManagerType value) {
        return new JAXBElement<NodeManagerType>(_MachineTypeNodeManager_QNAME, NodeManagerType.class, MachineType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "path", scope = FileT3Type.class)
    public JAXBElement<String> createFileT3TypePath(String value) {
        return new JAXBElement<String>(_FileT3TypePath_QNAME, String.class, FileT3Type.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "community-prefix", scope = SnmpAgentType.class, defaultValue = "public")
    public JAXBElement<String> createSnmpAgentTypeCommunityPrefix(String value) {
        return new JAXBElement<String>(_SnmpAgentTypeCommunityPrefix_QNAME, String.class, SnmpAgentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "user-defined-mib", scope = SnmpAgentType.class, defaultValue = "na")
    public JAXBElement<String> createSnmpAgentTypeUserDefinedMib(String value) {
        return new JAXBElement<String>(_SnmpAgentTypeUserDefinedMib_QNAME, String.class, SnmpAgentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "deployable-provider-synchronization-timeout", scope = RealmType.class)
    public JAXBElement<Integer> createRealmTypeDeployableProviderSynchronizationTimeout(Integer value) {
        return new JAXBElement<Integer>(_RealmTypeDeployableProviderSynchronizationTimeout_QNAME, Integer.class, RealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AdjudicatorType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "adjudicator", scope = RealmType.class)
    public JAXBElement<AdjudicatorType> createRealmTypeAdjudicator(AdjudicatorType value) {
        return new JAXBElement<AdjudicatorType>(_RealmTypeAdjudicator_QNAME, AdjudicatorType.class, RealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "security-dd-model", scope = RealmType.class)
    public JAXBElement<String> createRealmTypeSecurityDdModel(String value) {
        return new JAXBElement<String>(_RealmTypeSecurityDdModel_QNAME, String.class, RealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "auth-methods", scope = RealmType.class)
    public JAXBElement<String> createRealmTypeAuthMethods(String value) {
        return new JAXBElement<String>(_RealmTypeAuthMethods_QNAME, String.class, RealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RdbmsSecurityStoreType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "rdbms-security-store", scope = RealmType.class)
    public JAXBElement<RdbmsSecurityStoreType> createRealmTypeRdbmsSecurityStore(RdbmsSecurityStoreType value) {
        return new JAXBElement<RdbmsSecurityStoreType>(_RealmTypeRdbmsSecurityStore_QNAME, RdbmsSecurityStoreType.class, RealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "management-identity-domain", scope = RealmType.class)
    public JAXBElement<String> createRealmTypeManagementIdentityDomain(String value) {
        return new JAXBElement<String>(_RealmTypeManagementIdentityDomain_QNAME, String.class, RealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "cert-path-builder", scope = RealmType.class)
    public JAXBElement<String> createRealmTypeCertPathBuilder(String value) {
        return new JAXBElement<String>(_RealmTypeCertPathBuilder_QNAME, String.class, RealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "compatibility-object-name", scope = RealmType.class)
    public JAXBElement<String> createRealmTypeCompatibilityObjectName(String value) {
        return new JAXBElement<String>(_RdbmsSecurityStoreTypeCompatibilityObjectName_QNAME, String.class, RealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "max-web-logic-principals-in-cache", scope = RealmType.class)
    public JAXBElement<Integer> createRealmTypeMaxWebLogicPrincipalsInCache(Integer value) {
        return new JAXBElement<Integer>(_RealmTypeMaxWebLogicPrincipalsInCache_QNAME, Integer.class, RealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link UserLockoutManagerType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "user-lockout-manager", scope = RealmType.class)
    public JAXBElement<UserLockoutManagerType> createRealmTypeUserLockoutManager(UserLockoutManagerType value) {
        return new JAXBElement<UserLockoutManagerType>(_RealmTypeUserLockoutManager_QNAME, UserLockoutManagerType.class, RealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "name", scope = RealmType.class, defaultValue = "Realm")
    public JAXBElement<String> createRealmTypeName(String value) {
        return new JAXBElement<String>(_RdbmsSecurityStoreTypeName_QNAME, String.class, RealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "create-table-ddl-file", scope = JmsJdbcStoreType.class)
    public JAXBElement<String> createJmsJdbcStoreTypeCreateTableDdlFile(String value) {
        return new JAXBElement<String>(_GenericJdbcStoreTypeCreateTableDdlFile_QNAME, String.class, JmsJdbcStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "prefix-name", scope = JmsJdbcStoreType.class)
    public JAXBElement<String> createJmsJdbcStoreTypePrefixName(String value) {
        return new JAXBElement<String>(_GenericJdbcStoreTypePrefixName_QNAME, String.class, JmsJdbcStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "module-type", scope = SingletonServiceAppScopedType.class)
    public JAXBElement<String> createSingletonServiceAppScopedTypeModuleType(String value) {
        return new JAXBElement<String>(_TargetInfoTypeModuleType_QNAME, String.class, SingletonServiceAppScopedType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "target", scope = SingletonServiceAppScopedType.class)
    public JAXBElement<String> createSingletonServiceAppScopedTypeTarget(String value) {
        return new JAXBElement<String>(_JdbcStoreTypeTarget_QNAME, String.class, SingletonServiceAppScopedType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "compatibility-name", scope = SingletonServiceAppScopedType.class)
    public JAXBElement<String> createSingletonServiceAppScopedTypeCompatibilityName(String value) {
        return new JAXBElement<String>(_TargetInfoTypeCompatibilityName_QNAME, String.class, SingletonServiceAppScopedType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "uri", scope = ComponentType.class)
    public JAXBElement<String> createComponentTypeUri(String value) {
        return new JAXBElement<String>(_ComponentTypeUri_QNAME, String.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "arguments", scope = ClassDeploymentType.class)
    public JAXBElement<String> createClassDeploymentTypeArguments(String value) {
        return new JAXBElement<String>(_ServerStartTypeArguments_QNAME, String.class, ClassDeploymentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "custom-store", scope = CacheStoreType.class)
    public JAXBElement<String> createCacheStoreTypeCustomStore(String value) {
        return new JAXBElement<String>(_CacheStoreTypeCustomStore_QNAME, String.class, CacheStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "write-policy", scope = CacheStoreType.class)
    public JAXBElement<String> createCacheStoreTypeWritePolicy(String value) {
        return new JAXBElement<String>(_CacheStoreTypeWritePolicy_QNAME, String.class, CacheStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "group-dn", scope = LdapRealmType.class)
    public JAXBElement<String> createLdapRealmTypeGroupDn(String value) {
        return new JAXBElement<String>(_LdapRealmTypeGroupDn_QNAME, String.class, LdapRealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "user-dn", scope = LdapRealmType.class)
    public JAXBElement<String> createLdapRealmTypeUserDn(String value) {
        return new JAXBElement<String>(_LdapRealmTypeUserDn_QNAME, String.class, LdapRealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "ldap-provider", scope = LdapRealmType.class, defaultValue = "com.sun.jndi.ldap.LdapCtxFactory")
    public JAXBElement<String> createLdapRealmTypeLdapProvider(String value) {
        return new JAXBElement<String>(_LdapRealmTypeLdapProvider_QNAME, String.class, LdapRealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "principal", scope = LdapRealmType.class)
    public JAXBElement<String> createLdapRealmTypePrincipal(String value) {
        return new JAXBElement<String>(_LdapRealmTypePrincipal_QNAME, String.class, LdapRealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "user-authentication", scope = LdapRealmType.class)
    public JAXBElement<String> createLdapRealmTypeUserAuthentication(String value) {
        return new JAXBElement<String>(_LdapRealmTypeUserAuthentication_QNAME, String.class, LdapRealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "user-password-attribute", scope = LdapRealmType.class, defaultValue = "userpassword")
    public JAXBElement<String> createLdapRealmTypeUserPasswordAttribute(String value) {
        return new JAXBElement<String>(_LdapRealmTypeUserPasswordAttribute_QNAME, String.class, LdapRealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "auth-protocol", scope = LdapRealmType.class)
    public JAXBElement<String> createLdapRealmTypeAuthProtocol(String value) {
        return new JAXBElement<String>(_LdapRealmTypeAuthProtocol_QNAME, String.class, LdapRealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "credential-encrypted", scope = LdapRealmType.class)
    public JAXBElement<String> createLdapRealmTypeCredentialEncrypted(String value) {
        return new JAXBElement<String>(_EmbeddedLdapTypeCredentialEncrypted_QNAME, String.class, LdapRealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "user-name-attribute", scope = LdapRealmType.class)
    public JAXBElement<String> createLdapRealmTypeUserNameAttribute(String value) {
        return new JAXBElement<String>(_LdapRealmTypeUserNameAttribute_QNAME, String.class, LdapRealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "ldapurl", scope = LdapRealmType.class, defaultValue = "ldap://ldapserver:389")
    public JAXBElement<String> createLdapRealmTypeLdapurl(String value) {
        return new JAXBElement<String>(_LdapRealmTypeLdapurl_QNAME, String.class, LdapRealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "group-username-attribute", scope = LdapRealmType.class, defaultValue = "member")
    public JAXBElement<String> createLdapRealmTypeGroupUsernameAttribute(String value) {
        return new JAXBElement<String>(_LdapRealmTypeGroupUsernameAttribute_QNAME, String.class, LdapRealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "group-name-attribute", scope = LdapRealmType.class, defaultValue = "cn")
    public JAXBElement<String> createLdapRealmTypeGroupNameAttribute(String value) {
        return new JAXBElement<String>(_LdapRealmTypeGroupNameAttribute_QNAME, String.class, LdapRealmType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "connection-url", scope = JmsBridgeDestinationType.class)
    public JAXBElement<String> createJmsBridgeDestinationTypeConnectionUrl(String value) {
        return new JAXBElement<String>(_JmsBridgeDestinationTypeConnectionUrl_QNAME, String.class, JmsBridgeDestinationType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "destination-type", scope = JmsBridgeDestinationType.class)
    public JAXBElement<String> createJmsBridgeDestinationTypeDestinationType(String value) {
        return new JAXBElement<String>(_JmsBridgeDestinationTypeDestinationType_QNAME, String.class, JmsBridgeDestinationType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "initial-context-factory", scope = JmsBridgeDestinationType.class, defaultValue = "weblogic.jndi.WLInitialContextFactory")
    public JAXBElement<String> createJmsBridgeDestinationTypeInitialContextFactory(String value) {
        return new JAXBElement<String>(_ForeignJndiProviderTypeInitialContextFactory_QNAME, String.class, JmsBridgeDestinationType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "connection-factory-jndi-name", scope = JmsBridgeDestinationType.class)
    public JAXBElement<String> createJmsBridgeDestinationTypeConnectionFactoryJndiName(String value) {
        return new JAXBElement<String>(_JmsBridgeDestinationTypeConnectionFactoryJndiName_QNAME, String.class, JmsBridgeDestinationType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "destination-jndi-name", scope = JmsBridgeDestinationType.class)
    public JAXBElement<String> createJmsBridgeDestinationTypeDestinationJndiName(String value) {
        return new JAXBElement<String>(_JmsBridgeDestinationTypeDestinationJndiName_QNAME, String.class, JmsBridgeDestinationType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "server-list", scope = HttpProxyType.class)
    public JAXBElement<String> createHttpProxyTypeServerList(String value) {
        return new JAXBElement<String>(_HttpProxyTypeServerList_QNAME, String.class, HttpProxyType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "logical-name", scope = FileStoreType.class)
    public JAXBElement<String> createFileStoreTypeLogicalName(String value) {
        return new JAXBElement<String>(_JdbcStoreTypeLogicalName_QNAME, String.class, FileStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "target", scope = FileStoreType.class)
    public JAXBElement<String> createFileStoreTypeTarget(String value) {
        return new JAXBElement<String>(_JdbcStoreTypeTarget_QNAME, String.class, FileStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "xa-resource-name", scope = FileStoreType.class)
    public JAXBElement<String> createFileStoreTypeXaResourceName(String value) {
        return new JAXBElement<String>(_JdbcStoreTypeXaResourceName_QNAME, String.class, FileStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "notes", scope = ConfigurationType.class)
    public JAXBElement<String> createConfigurationTypeNotes(String value) {
        return new JAXBElement<String>(_ConfigurationTypeNotes_QNAME, String.class, ConfigurationType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "target", scope = DeploymentType.class)
    public JAXBElement<String> createDeploymentTypeTarget(String value) {
        return new JAXBElement<String>(_JdbcStoreTypeTarget_QNAME, String.class, DeploymentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/security", name = "control-flag", scope = AuthenticatorType.class)
    public JAXBElement<String> createAuthenticatorTypeControlFlag(String value) {
        return new JAXBElement<String>(_AuthenticatorTypeControlFlag_QNAME, String.class, AuthenticatorType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "store-type", scope = WebServicePhysicalStoreType.class)
    public JAXBElement<String> createWebServicePhysicalStoreTypeStoreType(String value) {
        return new JAXBElement<String>(_WebServicePhysicalStoreTypeStoreType_QNAME, String.class, WebServicePhysicalStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "synchronous-write-policy", scope = WebServicePhysicalStoreType.class)
    public JAXBElement<String> createWebServicePhysicalStoreTypeSynchronousWritePolicy(String value) {
        return new JAXBElement<String>(_JmsFileStoreTypeSynchronousWritePolicy_QNAME, String.class, WebServicePhysicalStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "location", scope = WebServicePhysicalStoreType.class)
    public JAXBElement<String> createWebServicePhysicalStoreTypeLocation(String value) {
        return new JAXBElement<String>(_WebServicePhysicalStoreTypeLocation_QNAME, String.class, WebServicePhysicalStoreType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "connection-factory-jndi-name", scope = WebServiceBufferingQueueType.class)
    public JAXBElement<String> createWebServiceBufferingQueueTypeConnectionFactoryJndiName(String value) {
        return new JAXBElement<String>(_JmsBridgeDestinationTypeConnectionFactoryJndiName_QNAME, String.class, WebServiceBufferingQueueType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "enabled", scope = WebServiceBufferingQueueType.class)
    public JAXBElement<Boolean> createWebServiceBufferingQueueTypeEnabled(Boolean value) {
        return new JAXBElement<Boolean>(_WebServiceBufferingQueueTypeEnabled_QNAME, Boolean.class, WebServiceBufferingQueueType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "transaction-enabled", scope = WebServiceBufferingQueueType.class)
    public JAXBElement<Boolean> createWebServiceBufferingQueueTypeTransactionEnabled(Boolean value) {
        return new JAXBElement<Boolean>(_WebServiceBufferingQueueTypeTransactionEnabled_QNAME, Boolean.class, WebServiceBufferingQueueType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "target", scope = SnmpAgentDeploymentType.class)
    public JAXBElement<String> createSnmpAgentDeploymentTypeTarget(String value) {
        return new JAXBElement<String>(_JdbcStoreTypeTarget_QNAME, String.class, SnmpAgentDeploymentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "log-file-rotation-dir", scope = LogFileType.class)
    public JAXBElement<String> createLogFileTypeLogFileRotationDir(String value) {
        return new JAXBElement<String>(_LogFileTypeLogFileRotationDir_QNAME, String.class, LogFileType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "rotation-time", scope = LogFileType.class, defaultValue = "00:00")
    public JAXBElement<String> createLogFileTypeRotationTime(String value) {
        return new JAXBElement<String>(_LogFileTypeRotationTime_QNAME, String.class, LogFileType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "rotation-type", scope = LogFileType.class)
    public JAXBElement<String> createLogFileTypeRotationType(String value) {
        return new JAXBElement<String>(_LogFileTypeRotationType_QNAME, String.class, LogFileType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "file-name", scope = LogFileType.class)
    public JAXBElement<String> createLogFileTypeFileName(String value) {
        return new JAXBElement<String>(_LogFileTypeFileName_QNAME, String.class, LogFileType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "listen-address", scope = NodeManagerType.class, defaultValue = "localhost")
    public JAXBElement<String> createNodeManagerTypeListenAddress(String value) {
        return new JAXBElement<String>(_ServerTypeListenAddress_QNAME, String.class, NodeManagerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "nm-type", scope = NodeManagerType.class)
    public JAXBElement<String> createNodeManagerTypeNmType(String value) {
        return new JAXBElement<String>(_NodeManagerTypeNmType_QNAME, String.class, NodeManagerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "node-manager-home", scope = NodeManagerType.class)
    public JAXBElement<String> createNodeManagerTypeNodeManagerHome(String value) {
        return new JAXBElement<String>(_NodeManagerTypeNodeManagerHome_QNAME, String.class, NodeManagerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "shell-command", scope = NodeManagerType.class)
    public JAXBElement<String> createNodeManagerTypeShellCommand(String value) {
        return new JAXBElement<String>(_NodeManagerTypeShellCommand_QNAME, String.class, NodeManagerType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "iiop-location-forward-policy", scope = KernelType.class)
    public JAXBElement<String> createKernelTypeIiopLocationForwardPolicy(String value) {
        return new JAXBElement<String>(_KernelTypeIiopLocationForwardPolicy_QNAME, String.class, KernelType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LogType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "log", scope = KernelType.class)
    public JAXBElement<LogType> createKernelTypeLog(LogType value) {
        return new JAXBElement<LogType>(_KernelTypeLog_QNAME, LogType.class, KernelType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "administration-protocol", scope = KernelType.class)
    public JAXBElement<String> createKernelTypeAdministrationProtocol(String value) {
        return new JAXBElement<String>(_KernelTypeAdministrationProtocol_QNAME, String.class, KernelType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "default-protocol", scope = KernelType.class)
    public JAXBElement<String> createKernelTypeDefaultProtocol(String value) {
        return new JAXBElement<String>(_KernelTypeDefaultProtocol_QNAME, String.class, KernelType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link IiopType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "iiop", scope = KernelType.class)
    public JAXBElement<IiopType> createKernelTypeIiop(IiopType value) {
        return new JAXBElement<IiopType>(_KernelTypeIiop_QNAME, IiopType.class, KernelType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SslType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "ssl", scope = KernelType.class)
    public JAXBElement<SslType> createKernelTypeSsl(SslType value) {
        return new JAXBElement<SslType>(_KernelTypeSsl_QNAME, SslType.class, KernelType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "valid-protocols", scope = KernelType.class)
    public JAXBElement<String> createKernelTypeValidProtocols(String value) {
        return new JAXBElement<String>(_KernelTypeValidProtocols_QNAME, String.class, KernelType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "default-secure-protocol", scope = KernelType.class)
    public JAXBElement<String> createKernelTypeDefaultSecureProtocol(String value) {
        return new JAXBElement<String>(_KernelTypeDefaultSecureProtocol_QNAME, String.class, KernelType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "iiop-tx-mechanism", scope = KernelType.class)
    public JAXBElement<String> createKernelTypeIiopTxMechanism(String value) {
        return new JAXBElement<String>(_KernelTypeIiopTxMechanism_QNAME, String.class, KernelType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "muxer-class", scope = KernelType.class)
    public JAXBElement<String> createKernelTypeMuxerClass(String value) {
        return new JAXBElement<String>(_KernelTypeMuxerClass_QNAME, String.class, KernelType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "constrained-candidate-server", scope = MigratableTargetType.class)
    public JAXBElement<String> createMigratableTargetTypeConstrainedCandidateServer(String value) {
        return new JAXBElement<String>(_SingletonServiceTypeConstrainedCandidateServer_QNAME, String.class, MigratableTargetType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "cluster", scope = MigratableTargetType.class)
    public JAXBElement<String> createMigratableTargetTypeCluster(String value) {
        return new JAXBElement<String>(_ServerTypeCluster_QNAME, String.class, MigratableTargetType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "destination-server", scope = MigratableTargetType.class)
    public JAXBElement<String> createMigratableTargetTypeDestinationServer(String value) {
        return new JAXBElement<String>(_MigratableTargetTypeDestinationServer_QNAME, String.class, MigratableTargetType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "post-script", scope = MigratableTargetType.class)
    public JAXBElement<String> createMigratableTargetTypePostScript(String value) {
        return new JAXBElement<String>(_MigratableTargetTypePostScript_QNAME, String.class, MigratableTargetType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "migration-policy", scope = MigratableTargetType.class)
    public JAXBElement<String> createMigratableTargetTypeMigrationPolicy(String value) {
        return new JAXBElement<String>(_MigratableTargetTypeMigrationPolicy_QNAME, String.class, MigratableTargetType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "pre-script", scope = MigratableTargetType.class)
    public JAXBElement<String> createMigratableTargetTypePreScript(String value) {
        return new JAXBElement<String>(_MigratableTargetTypePreScript_QNAME, String.class, MigratableTargetType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "community", scope = SnmpTrapDestinationType.class, defaultValue = "public")
    public JAXBElement<String> createSnmpTrapDestinationTypeCommunity(String value) {
        return new JAXBElement<String>(_SnmpProxyTypeCommunity_QNAME, String.class, SnmpTrapDestinationType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "host", scope = SnmpTrapDestinationType.class, defaultValue = "localhost")
    public JAXBElement<String> createSnmpTrapDestinationTypeHost(String value) {
        return new JAXBElement<String>(_SnmpTrapDestinationTypeHost_QNAME, String.class, SnmpTrapDestinationType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "security-name", scope = SnmpTrapDestinationType.class)
    public JAXBElement<String> createSnmpTrapDestinationTypeSecurityName(String value) {
        return new JAXBElement<String>(_SnmpProxyTypeSecurityName_QNAME, String.class, SnmpTrapDestinationType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link JmxType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "jmx", scope = DomainType.class)
    public JAXBElement<JmxType> createDomainTypeJmx(JmxType value) {
        return new JAXBElement<JmxType>(_DomainTypeJmx_QNAME, JmxType.class, DomainType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link JtaType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "jta", scope = DomainType.class)
    public JAXBElement<JtaType> createDomainTypeJta(JtaType value) {
        return new JAXBElement<JtaType>(_DomainTypeJta_QNAME, JtaType.class, DomainType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SecurityType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "security", scope = DomainType.class)
    public JAXBElement<SecurityType> createDomainTypeSecurity(SecurityType value) {
        return new JAXBElement<SecurityType>(_WtcLocalTuxDomTypeSecurity_QNAME, SecurityType.class, DomainType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "console-extension-directory", scope = DomainType.class, defaultValue = "console-ext")
    public JAXBElement<String> createDomainTypeConsoleExtensionDirectory(String value) {
        return new JAXBElement<String>(_DomainTypeConsoleExtensionDirectory_QNAME, String.class, DomainType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "admin-server-name", scope = DomainType.class)
    public JAXBElement<String> createDomainTypeAdminServerName(String value) {
        return new JAXBElement<String>(_DomainTypeAdminServerName_QNAME, String.class, DomainType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link EmbeddedLdapType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "embedded-ldap", scope = DomainType.class)
    public JAXBElement<EmbeddedLdapType> createDomainTypeEmbeddedLdap(EmbeddedLdapType value) {
        return new JAXBElement<EmbeddedLdapType>(_DomainTypeEmbeddedLdap_QNAME, EmbeddedLdapType.class, DomainType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link JpaType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "jpa", scope = DomainType.class)
    public JAXBElement<JpaType> createDomainTypeJpa(JpaType value) {
        return new JAXBElement<JpaType>(_DomainTypeJpa_QNAME, JpaType.class, DomainType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DeploymentConfigurationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "deployment-configuration", scope = DomainType.class)
    public JAXBElement<DeploymentConfigurationType> createDomainTypeDeploymentConfiguration(DeploymentConfigurationType value) {
        return new JAXBElement<DeploymentConfigurationType>(_DomainTypeDeploymentConfiguration_QNAME, DeploymentConfigurationType.class, DomainType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "console-context-path", scope = DomainType.class, defaultValue = "console")
    public JAXBElement<String> createDomainTypeConsoleContextPath(String value) {
        return new JAXBElement<String>(_DomainTypeConsoleContextPath_QNAME, String.class, DomainType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AdminConsoleType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "admin-console", scope = DomainType.class)
    public JAXBElement<AdminConsoleType> createDomainTypeAdminConsole(AdminConsoleType value) {
        return new JAXBElement<AdminConsoleType>(_DomainTypeAdminConsole_QNAME, AdminConsoleType.class, DomainType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LogType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "log", scope = DomainType.class)
    public JAXBElement<LogType> createDomainTypeLog(LogType value) {
        return new JAXBElement<LogType>(_KernelTypeLog_QNAME, LogType.class, DomainType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SnmpAgentType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "snmp-agent", scope = DomainType.class)
    public JAXBElement<SnmpAgentType> createDomainTypeSnmpAgent(SnmpAgentType value) {
        return new JAXBElement<SnmpAgentType>(_DomainTypeSnmpAgent_QNAME, SnmpAgentType.class, DomainType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "root-directory", scope = DomainType.class)
    public JAXBElement<String> createDomainTypeRootDirectory(String value) {
        return new JAXBElement<String>(_ServerStartTypeRootDirectory_QNAME, String.class, DomainType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "configuration-audit-type", scope = DomainType.class)
    public JAXBElement<String> createDomainTypeConfigurationAuditType(String value) {
        return new JAXBElement<String>(_DomainTypeConfigurationAuditType_QNAME, String.class, DomainType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "administration-protocol", scope = DomainType.class)
    public JAXBElement<String> createDomainTypeAdministrationProtocol(String value) {
        return new JAXBElement<String>(_KernelTypeAdministrationProtocol_QNAME, String.class, DomainType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link EjbContainerType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "ejb-container", scope = DomainType.class)
    public JAXBElement<EjbContainerType> createDomainTypeEjbContainer(EjbContainerType value) {
        return new JAXBElement<EjbContainerType>(_DomainTypeEjbContainer_QNAME, EjbContainerType.class, DomainType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "domain-version", scope = DomainType.class)
    public JAXBElement<String> createDomainTypeDomainVersion(String value) {
        return new JAXBElement<String>(_DomainTypeDomainVersion_QNAME, String.class, DomainType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "configuration-version", scope = DomainType.class)
    public JAXBElement<String> createDomainTypeConfigurationVersion(String value) {
        return new JAXBElement<String>(_DomainTypeConfigurationVersion_QNAME, String.class, DomainType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SelfTuningType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "self-tuning", scope = DomainType.class)
    public JAXBElement<SelfTuningType> createDomainTypeSelfTuning(SelfTuningType value) {
        return new JAXBElement<SelfTuningType>(_DomainTypeSelfTuning_QNAME, SelfTuningType.class, DomainType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WebAppContainerType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "web-app-container", scope = DomainType.class)
    public JAXBElement<WebAppContainerType> createDomainTypeWebAppContainer(WebAppContainerType value) {
        return new JAXBElement<WebAppContainerType>(_DomainTypeWebAppContainer_QNAME, WebAppContainerType.class, DomainType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SecurityConfigurationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://xmlns.oracle.com/weblogic/domain", name = "security-configuration", scope = DomainType.class)
    public JAXBElement<SecurityConfigurationType> createDomainTypeSecurityConfiguration(SecurityConfigurationType value) {
        return new JAXBElement<SecurityConfigurationType>(_DomainTypeSecurityConfiguration_QNAME, SecurityConfigurationType.class, DomainType.class, value);
    }

}
