//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.01.17 at 03:40:53 PM CET 
//


package it.senape.wldiag.xml;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlType;


/**
 * Corresponds to RealmMBean
 *  (Interface=weblogic.management.security.RealmMBean)
 * 
 * <p>Java class for realmType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="realmType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="auditor" type="{http://xmlns.oracle.com/weblogic/security}auditorType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="authentication-provider" type="{http://xmlns.oracle.com/weblogic/security}authentication-providerType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="role-mapper" type="{http://xmlns.oracle.com/weblogic/security}role-mapperType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="authorizer" type="{http://xmlns.oracle.com/weblogic/security}authorizerType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="adjudicator" type="{http://xmlns.oracle.com/weblogic/security}adjudicatorType" minOccurs="0"/>
 *         &lt;element name="credential-mapper" type="{http://xmlns.oracle.com/weblogic/security}credential-mapperType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="cert-path-provider" type="{http://xmlns.oracle.com/weblogic/security}cert-path-providerType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="cert-path-builder" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="user-lockout-manager" type="{http://xmlns.oracle.com/weblogic/security}user-lockout-managerType" minOccurs="0"/>
 *         &lt;element name="deploy-role-ignored" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="deploy-policy-ignored" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="deploy-credential-mapping-ignored" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="fully-delegate-authorization" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="validate-dd-security-data" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="security-dd-model" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;enumeration value="DDOnly"/>
 *               &lt;enumeration value="CustomRoles"/>
 *               &lt;enumeration value="CustomRolesAndPolicies"/>
 *               &lt;enumeration value="Advanced"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="combined-role-mapping-enabled" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="enable-web-logic-principal-validator-cache" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="max-web-logic-principals-in-cache" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/>
 *         &lt;element name="name" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="delegate-m-bean-authorization" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="auth-methods" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="compatibility-object-name" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="rdbms-security-store" type="{http://xmlns.oracle.com/weblogic/security}rdbms-security-storeType" minOccurs="0"/>
 *         &lt;element name="password-validator" type="{http://xmlns.oracle.com/weblogic/security}password-validatorType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="deployable-provider-synchronization-enabled" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="deployable-provider-synchronization-timeout" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/>
 *         &lt;element name="auto-restart-on-non-dynamic-changes" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="retire-timeout-seconds" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="1"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="management-identity-domain" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="identity-assertion-header-name-precedence" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "realmType", namespace = "http://xmlns.oracle.com/weblogic/security", propOrder = {
    "auditor",
    "authenticationProvider",
    "roleMapper",
    "authorizer",
    "adjudicator",
    "credentialMapper",
    "certPathProvider",
    "certPathBuilder",
    "userLockoutManager",
    "deployRoleIgnored",
    "deployPolicyIgnored",
    "deployCredentialMappingIgnored",
    "fullyDelegateAuthorization",
    "validateDdSecurityData",
    "securityDdModel",
    "combinedRoleMappingEnabled",
    "enableWebLogicPrincipalValidatorCache",
    "maxWebLogicPrincipalsInCache",
    "name",
    "delegateMBeanAuthorization",
    "authMethods",
    "compatibilityObjectName",
    "rdbmsSecurityStore",
    "passwordValidator",
    "deployableProviderSynchronizationEnabled",
    "deployableProviderSynchronizationTimeout",
    "autoRestartOnNonDynamicChanges",
    "retireTimeoutSeconds",
    "managementIdentityDomain",
    "identityAssertionHeaderNamePrecedence"
})
public class RealmType {

    @XmlElement(nillable = true)
    protected List<AuditorType> auditor;
    @XmlElement(name = "authentication-provider", nillable = true)
    protected List<AuthenticationProviderType> authenticationProvider;
    @XmlElement(name = "role-mapper", nillable = true)
    protected List<RoleMapperType> roleMapper;
    @XmlElement(nillable = true)
    protected List<AuthorizerType> authorizer;
    @XmlElementRef(name = "adjudicator", namespace = "http://xmlns.oracle.com/weblogic/security", type = JAXBElement.class, required = false)
    protected JAXBElement<AdjudicatorType> adjudicator;
    @XmlElement(name = "credential-mapper", nillable = true)
    protected List<CredentialMapperType> credentialMapper;
    @XmlElement(name = "cert-path-provider", nillable = true)
    protected List<CertPathProviderType> certPathProvider;
    @XmlElementRef(name = "cert-path-builder", namespace = "http://xmlns.oracle.com/weblogic/security", type = JAXBElement.class, required = false)
    protected JAXBElement<String> certPathBuilder;
    @XmlElementRef(name = "user-lockout-manager", namespace = "http://xmlns.oracle.com/weblogic/security", type = JAXBElement.class, required = false)
    protected JAXBElement<UserLockoutManagerType> userLockoutManager;
    @XmlElement(name = "deploy-role-ignored", defaultValue = "false")
    protected Boolean deployRoleIgnored;
    @XmlElement(name = "deploy-policy-ignored", defaultValue = "false")
    protected Boolean deployPolicyIgnored;
    @XmlElement(name = "deploy-credential-mapping-ignored", defaultValue = "false")
    protected Boolean deployCredentialMappingIgnored;
    @XmlElement(name = "fully-delegate-authorization", defaultValue = "false")
    protected Boolean fullyDelegateAuthorization;
    @XmlElement(name = "validate-dd-security-data", defaultValue = "false")
    protected Boolean validateDdSecurityData;
    @XmlElementRef(name = "security-dd-model", namespace = "http://xmlns.oracle.com/weblogic/security", type = JAXBElement.class, required = false)
    protected JAXBElement<String> securityDdModel;
    @XmlElement(name = "combined-role-mapping-enabled", defaultValue = "true")
    protected Boolean combinedRoleMappingEnabled;
    @XmlElement(name = "enable-web-logic-principal-validator-cache", defaultValue = "true")
    protected Boolean enableWebLogicPrincipalValidatorCache;
    @XmlElementRef(name = "max-web-logic-principals-in-cache", namespace = "http://xmlns.oracle.com/weblogic/security", type = JAXBElement.class, required = false)
    protected JAXBElement<Integer> maxWebLogicPrincipalsInCache;
    @XmlElementRef(name = "name", namespace = "http://xmlns.oracle.com/weblogic/security", type = JAXBElement.class, required = false)
    protected JAXBElement<String> name;
    @XmlElement(name = "delegate-m-bean-authorization", defaultValue = "false")
    protected Boolean delegateMBeanAuthorization;
    @XmlElementRef(name = "auth-methods", namespace = "http://xmlns.oracle.com/weblogic/security", type = JAXBElement.class, required = false)
    protected JAXBElement<String> authMethods;
    @XmlElementRef(name = "compatibility-object-name", namespace = "http://xmlns.oracle.com/weblogic/security", type = JAXBElement.class, required = false)
    protected JAXBElement<String> compatibilityObjectName;
    @XmlElementRef(name = "rdbms-security-store", namespace = "http://xmlns.oracle.com/weblogic/security", type = JAXBElement.class, required = false)
    protected JAXBElement<RdbmsSecurityStoreType> rdbmsSecurityStore;
    @XmlElement(name = "password-validator", nillable = true)
    protected List<PasswordValidatorType> passwordValidator;
    @XmlElement(name = "deployable-provider-synchronization-enabled", defaultValue = "false")
    protected Boolean deployableProviderSynchronizationEnabled;
    @XmlElementRef(name = "deployable-provider-synchronization-timeout", namespace = "http://xmlns.oracle.com/weblogic/security", type = JAXBElement.class, required = false)
    protected JAXBElement<Integer> deployableProviderSynchronizationTimeout;
    @XmlElement(name = "auto-restart-on-non-dynamic-changes")
    protected Boolean autoRestartOnNonDynamicChanges;
    @XmlElement(name = "retire-timeout-seconds", defaultValue = "60")
    protected Integer retireTimeoutSeconds;
    @XmlElementRef(name = "management-identity-domain", namespace = "http://xmlns.oracle.com/weblogic/security", type = JAXBElement.class, required = false)
    protected JAXBElement<String> managementIdentityDomain;
    @XmlElement(name = "identity-assertion-header-name-precedence", nillable = true)
    protected List<String> identityAssertionHeaderNamePrecedence;

    /**
     * Gets the value of the auditor property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the auditor property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAuditor().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AuditorType }
     * 
     * 
     */
    public List<AuditorType> getAuditor() {
        if (auditor == null) {
            auditor = new ArrayList<AuditorType>();
        }
        return this.auditor;
    }

    /**
     * Gets the value of the authenticationProvider property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the authenticationProvider property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAuthenticationProvider().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AuthenticationProviderType }
     * 
     * 
     */
    public List<AuthenticationProviderType> getAuthenticationProvider() {
        if (authenticationProvider == null) {
            authenticationProvider = new ArrayList<AuthenticationProviderType>();
        }
        return this.authenticationProvider;
    }

    /**
     * Gets the value of the roleMapper property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the roleMapper property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRoleMapper().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link RoleMapperType }
     * 
     * 
     */
    public List<RoleMapperType> getRoleMapper() {
        if (roleMapper == null) {
            roleMapper = new ArrayList<RoleMapperType>();
        }
        return this.roleMapper;
    }

    /**
     * Gets the value of the authorizer property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the authorizer property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAuthorizer().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AuthorizerType }
     * 
     * 
     */
    public List<AuthorizerType> getAuthorizer() {
        if (authorizer == null) {
            authorizer = new ArrayList<AuthorizerType>();
        }
        return this.authorizer;
    }

    /**
     * Gets the value of the adjudicator property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link AdjudicatorType }{@code >}
     *     
     */
    public JAXBElement<AdjudicatorType> getAdjudicator() {
        return adjudicator;
    }

    /**
     * Sets the value of the adjudicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link AdjudicatorType }{@code >}
     *     
     */
    public void setAdjudicator(JAXBElement<AdjudicatorType> value) {
        this.adjudicator = value;
    }

    /**
     * Gets the value of the credentialMapper property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the credentialMapper property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCredentialMapper().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CredentialMapperType }
     * 
     * 
     */
    public List<CredentialMapperType> getCredentialMapper() {
        if (credentialMapper == null) {
            credentialMapper = new ArrayList<CredentialMapperType>();
        }
        return this.credentialMapper;
    }

    /**
     * Gets the value of the certPathProvider property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the certPathProvider property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCertPathProvider().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CertPathProviderType }
     * 
     * 
     */
    public List<CertPathProviderType> getCertPathProvider() {
        if (certPathProvider == null) {
            certPathProvider = new ArrayList<CertPathProviderType>();
        }
        return this.certPathProvider;
    }

    /**
     * Gets the value of the certPathBuilder property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public JAXBElement<String> getCertPathBuilder() {
        return certPathBuilder;
    }

    /**
     * Sets the value of the certPathBuilder property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public void setCertPathBuilder(JAXBElement<String> value) {
        this.certPathBuilder = value;
    }

    /**
     * Gets the value of the userLockoutManager property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link UserLockoutManagerType }{@code >}
     *     
     */
    public JAXBElement<UserLockoutManagerType> getUserLockoutManager() {
        return userLockoutManager;
    }

    /**
     * Sets the value of the userLockoutManager property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link UserLockoutManagerType }{@code >}
     *     
     */
    public void setUserLockoutManager(JAXBElement<UserLockoutManagerType> value) {
        this.userLockoutManager = value;
    }

    /**
     * Gets the value of the deployRoleIgnored property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isDeployRoleIgnored() {
        return deployRoleIgnored;
    }

    /**
     * Sets the value of the deployRoleIgnored property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setDeployRoleIgnored(Boolean value) {
        this.deployRoleIgnored = value;
    }

    /**
     * Gets the value of the deployPolicyIgnored property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isDeployPolicyIgnored() {
        return deployPolicyIgnored;
    }

    /**
     * Sets the value of the deployPolicyIgnored property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setDeployPolicyIgnored(Boolean value) {
        this.deployPolicyIgnored = value;
    }

    /**
     * Gets the value of the deployCredentialMappingIgnored property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isDeployCredentialMappingIgnored() {
        return deployCredentialMappingIgnored;
    }

    /**
     * Sets the value of the deployCredentialMappingIgnored property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setDeployCredentialMappingIgnored(Boolean value) {
        this.deployCredentialMappingIgnored = value;
    }

    /**
     * Gets the value of the fullyDelegateAuthorization property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isFullyDelegateAuthorization() {
        return fullyDelegateAuthorization;
    }

    /**
     * Sets the value of the fullyDelegateAuthorization property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setFullyDelegateAuthorization(Boolean value) {
        this.fullyDelegateAuthorization = value;
    }

    /**
     * Gets the value of the validateDdSecurityData property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isValidateDdSecurityData() {
        return validateDdSecurityData;
    }

    /**
     * Sets the value of the validateDdSecurityData property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setValidateDdSecurityData(Boolean value) {
        this.validateDdSecurityData = value;
    }

    /**
     * Gets the value of the securityDdModel property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public JAXBElement<String> getSecurityDdModel() {
        return securityDdModel;
    }

    /**
     * Sets the value of the securityDdModel property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public void setSecurityDdModel(JAXBElement<String> value) {
        this.securityDdModel = value;
    }

    /**
     * Gets the value of the combinedRoleMappingEnabled property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isCombinedRoleMappingEnabled() {
        return combinedRoleMappingEnabled;
    }

    /**
     * Sets the value of the combinedRoleMappingEnabled property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setCombinedRoleMappingEnabled(Boolean value) {
        this.combinedRoleMappingEnabled = value;
    }

    /**
     * Gets the value of the enableWebLogicPrincipalValidatorCache property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isEnableWebLogicPrincipalValidatorCache() {
        return enableWebLogicPrincipalValidatorCache;
    }

    /**
     * Sets the value of the enableWebLogicPrincipalValidatorCache property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setEnableWebLogicPrincipalValidatorCache(Boolean value) {
        this.enableWebLogicPrincipalValidatorCache = value;
    }

    /**
     * Gets the value of the maxWebLogicPrincipalsInCache property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link Integer }{@code >}
     *     
     */
    public JAXBElement<Integer> getMaxWebLogicPrincipalsInCache() {
        return maxWebLogicPrincipalsInCache;
    }

    /**
     * Sets the value of the maxWebLogicPrincipalsInCache property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link Integer }{@code >}
     *     
     */
    public void setMaxWebLogicPrincipalsInCache(JAXBElement<Integer> value) {
        this.maxWebLogicPrincipalsInCache = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public JAXBElement<String> getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public void setName(JAXBElement<String> value) {
        this.name = value;
    }

    /**
     * Gets the value of the delegateMBeanAuthorization property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isDelegateMBeanAuthorization() {
        return delegateMBeanAuthorization;
    }

    /**
     * Sets the value of the delegateMBeanAuthorization property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setDelegateMBeanAuthorization(Boolean value) {
        this.delegateMBeanAuthorization = value;
    }

    /**
     * Gets the value of the authMethods property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public JAXBElement<String> getAuthMethods() {
        return authMethods;
    }

    /**
     * Sets the value of the authMethods property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public void setAuthMethods(JAXBElement<String> value) {
        this.authMethods = value;
    }

    /**
     * Gets the value of the compatibilityObjectName property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public JAXBElement<String> getCompatibilityObjectName() {
        return compatibilityObjectName;
    }

    /**
     * Sets the value of the compatibilityObjectName property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public void setCompatibilityObjectName(JAXBElement<String> value) {
        this.compatibilityObjectName = value;
    }

    /**
     * Gets the value of the rdbmsSecurityStore property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link RdbmsSecurityStoreType }{@code >}
     *     
     */
    public JAXBElement<RdbmsSecurityStoreType> getRdbmsSecurityStore() {
        return rdbmsSecurityStore;
    }

    /**
     * Sets the value of the rdbmsSecurityStore property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link RdbmsSecurityStoreType }{@code >}
     *     
     */
    public void setRdbmsSecurityStore(JAXBElement<RdbmsSecurityStoreType> value) {
        this.rdbmsSecurityStore = value;
    }

    /**
     * Gets the value of the passwordValidator property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the passwordValidator property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPasswordValidator().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PasswordValidatorType }
     * 
     * 
     */
    public List<PasswordValidatorType> getPasswordValidator() {
        if (passwordValidator == null) {
            passwordValidator = new ArrayList<PasswordValidatorType>();
        }
        return this.passwordValidator;
    }

    /**
     * Gets the value of the deployableProviderSynchronizationEnabled property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isDeployableProviderSynchronizationEnabled() {
        return deployableProviderSynchronizationEnabled;
    }

    /**
     * Sets the value of the deployableProviderSynchronizationEnabled property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setDeployableProviderSynchronizationEnabled(Boolean value) {
        this.deployableProviderSynchronizationEnabled = value;
    }

    /**
     * Gets the value of the deployableProviderSynchronizationTimeout property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link Integer }{@code >}
     *     
     */
    public JAXBElement<Integer> getDeployableProviderSynchronizationTimeout() {
        return deployableProviderSynchronizationTimeout;
    }

    /**
     * Sets the value of the deployableProviderSynchronizationTimeout property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link Integer }{@code >}
     *     
     */
    public void setDeployableProviderSynchronizationTimeout(JAXBElement<Integer> value) {
        this.deployableProviderSynchronizationTimeout = value;
    }

    /**
     * Gets the value of the autoRestartOnNonDynamicChanges property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isAutoRestartOnNonDynamicChanges() {
        return autoRestartOnNonDynamicChanges;
    }

    /**
     * Sets the value of the autoRestartOnNonDynamicChanges property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setAutoRestartOnNonDynamicChanges(Boolean value) {
        this.autoRestartOnNonDynamicChanges = value;
    }

    /**
     * Gets the value of the retireTimeoutSeconds property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getRetireTimeoutSeconds() {
        return retireTimeoutSeconds;
    }

    /**
     * Sets the value of the retireTimeoutSeconds property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setRetireTimeoutSeconds(Integer value) {
        this.retireTimeoutSeconds = value;
    }

    /**
     * Gets the value of the managementIdentityDomain property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public JAXBElement<String> getManagementIdentityDomain() {
        return managementIdentityDomain;
    }

    /**
     * Sets the value of the managementIdentityDomain property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public void setManagementIdentityDomain(JAXBElement<String> value) {
        this.managementIdentityDomain = value;
    }

    /**
     * Gets the value of the identityAssertionHeaderNamePrecedence property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the identityAssertionHeaderNamePrecedence property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getIdentityAssertionHeaderNamePrecedence().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getIdentityAssertionHeaderNamePrecedence() {
        if (identityAssertionHeaderNamePrecedence == null) {
            identityAssertionHeaderNamePrecedence = new ArrayList<String>();
        }
        return this.identityAssertionHeaderNamePrecedence;
    }

}
